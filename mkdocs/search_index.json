{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to GSBN Documentation\n\n\nIntroduction\n\n\nGSBN is a framework of \nG**PU version of **S**piking based **B**CPN**N\n.\n\n\nTable of contents\n\n\n\n\nFramework\n\n\nCommon\n\n\nRandom\n\n\nGlobalVar\n\n\nDatabase\n\n\n\n\n\n\nProcedure\n\n\nProcExtGen", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-gsbn-documentation", 
            "text": "", 
            "title": "Welcome to GSBN Documentation"
        }, 
        {
            "location": "/#introduction", 
            "text": "GSBN is a framework of  G**PU version of **S**piking based **B**CPN**N .", 
            "title": "Introduction"
        }, 
        {
            "location": "/#table-of-contents", 
            "text": "Framework  Common  Random  GlobalVar  Database    Procedure  ProcExtGen", 
            "title": "Table of contents"
        }, 
        {
            "location": "/Framework/intro/", 
            "text": "", 
            "title": "Intro"
        }, 
        {
            "location": "/Framework/Common/", 
            "text": "Common", 
            "title": "Common"
        }, 
        {
            "location": "/Framework/Common/#common", 
            "text": "", 
            "title": "Common"
        }, 
        {
            "location": "/Procedure/intro/", 
            "text": "", 
            "title": "Intro"
        }, 
        {
            "location": "/Procedure/example/", 
            "text": "", 
            "title": "Example"
        }, 
        {
            "location": "/Experiment/Compete/1-Simple-shape-test/", 
            "text": "Simple shape test\n\n\nPurpose\n\n\nVisualize the activity of internal mini-columns inside a BCPNN network while 2 \ntrained patterns competing with each other.\n\n\nMetholoty\n\n\nThe tested BCPNN network has 100 HCUs to represent a 10x10 image. Each HCU has 10\nMCU to represent 10 different possible colors of each pixel. Connectivity rate is\nset to be 50%.\n\n\nStructural plasticity:\n\n\n\n\nGrow connections at every 100 ms.\n\n\nNever remove connections.\n\n\n\n\nAdaptation: Disabled\n\n\nTraining\n\n\n\n\n\n\n\n\n\n\nPattern No.\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n1\n\n\nSqure in north west corner\n\n\n\n\n\n\n2\n\n\nSqure in north east corner\n\n\n\n\n\n\n3\n\n\nSqure in south west corner\n\n\n\n\n\n\n4\n\n\nSqure in south east corner\n\n\n\n\n\n\n5\n\n\nCross\n\n\n\n\n\n\n6\n\n\nRandom dots with 25% probability\n\n\n\n\n\n\n7\n\n\nRandom dots with 25% probability\n\n\n\n\n\n\n8\n\n\nRandom dots with 25% probability\n\n\n\n\n\n\n9\n\n\nRandom dots with 25% probability\n\n\n\n\n\n\n10\n\n\nRandom dots with 25% probability\n\n\n\n\n\n\n\n\nTest\n\n\n\n\n\n\n\n\n\n\nPattern No.\n\n\nWinner\n\n\n\n\n\n\n\n\n\n\n1 vs 6\n\n\n6\n\n\n\n\n\n\n2 vs 7\n\n\n2\n\n\n\n\n\n\n3 vs 8\n\n\n3\n\n\n\n\n\n\n4 vs 9\n\n\n4\n\n\n\n\n\n\n5 vs 10\n\n\n5\n\n\n\n\n\n\n\n\nNetwork configuration\n\n\ngen_param{\n    stim_file : \n../data/simple.bin\n\n    dt : 0.001\n    eps : 0.001\n    mode_param : {\n        begin_time : 0\n        end_time : 5\n        time_step : 500\n        begin_lgidx_id : 1\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 1\n        prn : 1\n        plasticity: 1\n    }\n    mode_param : {\n        begin_time : 5\n        end_time : 10\n        time_step : 500\n        begin_lgidx_id : 1\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 1\n        prn : 1\n        plasticity: 1\n    }\n    mode_param : {\n        begin_time : 10\n        end_time : 10.2\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 10.2\n        end_time : 10.5\n        time_step : 300\n        begin_lgidx_id : 11\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time :10.5\n        end_time : 10.7\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 10.7\n        end_time : 11.0\n        time_step : 300\n        begin_lgidx_id : 12\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11\n        end_time : 11.2\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11.2\n        end_time : 11.5\n        time_step : 300\n        begin_lgidx_id : 13\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11.5\n        end_time : 11.7\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11.7\n        end_time : 12.0\n        time_step : 300\n        begin_lgidx_id : 14\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 12\n        end_time : 12.2\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 12.2\n        end_time : 12.5\n        time_step : 300\n        begin_lgidx_id : 15\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n}\n\nnet_param{\n    pop_param : {\n        pop_num : 1\n        hcu_num : 100\n        taum : 0.01\n        wtagain: 1\n        maxfq:100\n        igain:1\n        wgain:1.0\n        lgbias: 0\n        snoise: 0\n        mcu_num : 10\n        fanout_num : 100\n\n        adgain: 0\n        taua: 0.05\n\n        shape:10\n        shape:10\n        rank: 0\n    }\n\n    proj_param : {\n        src_pop : 0\n        dest_pop : 0\n        tauzi:0.005000\n        tauzj:0.005001\n        taue:0.0050002\n        taup: 10\n        maxfq:100\n        wgain: 1\n        bgain: 1\n        slot_num : 500\n        tauepsc: 0.005\n    }\n}\n\nrec_param{\n    directory: \n../data/snapshot_simple\n\n}\n\nproc_param{\n    name: \nProcExtGen\n\n}\nproc_param{\n    name: \nProcUpdMulti\n\n    argi: {\n        key: \nspike buffer size\n\n        val: 25\n    }\n}\n\nproc_param{\n    name: \nProcExchangeSpike\n\n}\n\n\nproc_param{\n    name: \nProcStructuralPlasticity\n\n    argi: {\n        key: \nperiod\n\n        val: 100\n    }\n    argi: {\n        key: \npruning-period\n\n        val: 100000\n    }\n    argi: {\n        key: \nt-th\n\n        val: 50000\n    }\n    argi: {\n        key: \nenable-geometry\n\n        val: 0\n    }\n}\n\nproc_param{\n    name: \nProcSpkRec\n\n    argi: {\n        key: \nperiod\n\n        val: 1\n    }\n    argi: {\n        key: \noffset\n\n        val: 0\n    }\n}", 
            "title": "1 Simple shape test"
        }, 
        {
            "location": "/Experiment/Compete/1-Simple-shape-test/#simple-shape-test", 
            "text": "", 
            "title": "Simple shape test"
        }, 
        {
            "location": "/Experiment/Compete/1-Simple-shape-test/#purpose", 
            "text": "Visualize the activity of internal mini-columns inside a BCPNN network while 2 \ntrained patterns competing with each other.", 
            "title": "Purpose"
        }, 
        {
            "location": "/Experiment/Compete/1-Simple-shape-test/#metholoty", 
            "text": "The tested BCPNN network has 100 HCUs to represent a 10x10 image. Each HCU has 10\nMCU to represent 10 different possible colors of each pixel. Connectivity rate is\nset to be 50%.  Structural plasticity:   Grow connections at every 100 ms.  Never remove connections.   Adaptation: Disabled", 
            "title": "Metholoty"
        }, 
        {
            "location": "/Experiment/Compete/1-Simple-shape-test/#training", 
            "text": "Pattern No.  Description      1  Squre in north west corner    2  Squre in north east corner    3  Squre in south west corner    4  Squre in south east corner    5  Cross    6  Random dots with 25% probability    7  Random dots with 25% probability    8  Random dots with 25% probability    9  Random dots with 25% probability    10  Random dots with 25% probability", 
            "title": "Training"
        }, 
        {
            "location": "/Experiment/Compete/1-Simple-shape-test/#test", 
            "text": "Pattern No.  Winner      1 vs 6  6    2 vs 7  2    3 vs 8  3    4 vs 9  4    5 vs 10  5", 
            "title": "Test"
        }, 
        {
            "location": "/Experiment/Compete/1-Simple-shape-test/#network-configuration", 
            "text": "gen_param{\n    stim_file :  ../data/simple.bin \n    dt : 0.001\n    eps : 0.001\n    mode_param : {\n        begin_time : 0\n        end_time : 5\n        time_step : 500\n        begin_lgidx_id : 1\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 1\n        prn : 1\n        plasticity: 1\n    }\n    mode_param : {\n        begin_time : 5\n        end_time : 10\n        time_step : 500\n        begin_lgidx_id : 1\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 1\n        prn : 1\n        plasticity: 1\n    }\n    mode_param : {\n        begin_time : 10\n        end_time : 10.2\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 10.2\n        end_time : 10.5\n        time_step : 300\n        begin_lgidx_id : 11\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time :10.5\n        end_time : 10.7\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 10.7\n        end_time : 11.0\n        time_step : 300\n        begin_lgidx_id : 12\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11\n        end_time : 11.2\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11.2\n        end_time : 11.5\n        time_step : 300\n        begin_lgidx_id : 13\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11.5\n        end_time : 11.7\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11.7\n        end_time : 12.0\n        time_step : 300\n        begin_lgidx_id : 14\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 12\n        end_time : 12.2\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 12.2\n        end_time : 12.5\n        time_step : 300\n        begin_lgidx_id : 15\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n}\n\nnet_param{\n    pop_param : {\n        pop_num : 1\n        hcu_num : 100\n        taum : 0.01\n        wtagain: 1\n        maxfq:100\n        igain:1\n        wgain:1.0\n        lgbias: 0\n        snoise: 0\n        mcu_num : 10\n        fanout_num : 100\n\n        adgain: 0\n        taua: 0.05\n\n        shape:10\n        shape:10\n        rank: 0\n    }\n\n    proj_param : {\n        src_pop : 0\n        dest_pop : 0\n        tauzi:0.005000\n        tauzj:0.005001\n        taue:0.0050002\n        taup: 10\n        maxfq:100\n        wgain: 1\n        bgain: 1\n        slot_num : 500\n        tauepsc: 0.005\n    }\n}\n\nrec_param{\n    directory:  ../data/snapshot_simple \n}\n\nproc_param{\n    name:  ProcExtGen \n}\nproc_param{\n    name:  ProcUpdMulti \n    argi: {\n        key:  spike buffer size \n        val: 25\n    }\n}\n\nproc_param{\n    name:  ProcExchangeSpike \n}\n\n\nproc_param{\n    name:  ProcStructuralPlasticity \n    argi: {\n        key:  period \n        val: 100\n    }\n    argi: {\n        key:  pruning-period \n        val: 100000\n    }\n    argi: {\n        key:  t-th \n        val: 50000\n    }\n    argi: {\n        key:  enable-geometry \n        val: 0\n    }\n}\n\nproc_param{\n    name:  ProcSpkRec \n    argi: {\n        key:  period \n        val: 1\n    }\n    argi: {\n        key:  offset \n        val: 0\n    }\n}", 
            "title": "Network configuration"
        }, 
        {
            "location": "/Experiment/Compete/2-Complex-shape-test/", 
            "text": "Complex shape test\n\n\nPurpose\n\n\nVisualize the activity of internal mini-columns inside a BCPNN network while 2 \ntrained patterns competing with each other.\n\n\nMetholoty\n\n\nThe tested BCPNN network has 800 HCUs to represent a 20x20x2 image. Each HCU has 40\nMCU. 2 HCUs (80 MCUs) are used to represent each pixel. The color index is calculated\nby equation:\n\n\n\\[\nI_{color} = I_{HCU1} \\times D_{MCU} + I_{HCU0}\n\\]\nWhere \n\\(I_{color}\\)\n is the index of color, \n\\(I_{HCU0}\\)\n and \n\\(I_{HCU0}\\)\n are the active\nMCUs index in HCU0 and HCU1, \n\\(D_{MCU}\\)\n is the number of MCUs inside each HCU, according\nto the configuration, \n\\(D_{MCU} = 40\\)\n.\n\n\nA color map is generated based on the 10 training patterns. There are 1242 colors\nin total, so we use 2 HCU with 40 MCU each to represent the color space. Since\n\n\n\\[\nCOLOR\\_SPACE = 40^2 = 1600 \n 1242\n\\]\nConnectivity rate is set to be 3%.\n\n\nStructural plasticity:\n\n\n\n\nGrow connections at every 100 ms.\n\n\nRemove connections at every 1000 ms.\n\n\n\n\nAdaptation: Disabled\n\n\nTraining\n\n\n\n\n\n\n\n\n\n\nPattern No.\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n1\n\n\nGandalf\n\n\n\n\n\n\n2\n\n\nSuperman\n\n\n\n\n\n\n3\n\n\nSpiderman\n\n\n\n\n\n\n4\n\n\nE.T.\n\n\n\n\n\n\n5\n\n\nChunli\n\n\n\n\n\n\n6\n\n\nDumbledore\n\n\n\n\n\n\n7\n\n\nHulk\n\n\n\n\n\n\n8\n\n\nIronman\n\n\n\n\n\n\n9\n\n\nKenny\n\n\n\n\n\n\n10\n\n\nLeonardo\n\n\n\n\n\n\n\n\nTest\n\n\n\n\n\n\n\n\n\n\nPattern No.\n\n\nWinner\n\n\n\n\n\n\n\n\n\n\n1 vs 6\n\n\n6\n\n\n\n\n\n\n2 vs 7\n\n\n2\n\n\n\n\n\n\n3 vs 8\n\n\n3\n\n\n\n\n\n\n4 vs 9\n\n\n4\n\n\n\n\n\n\n5 vs 10\n\n\n5\n\n\n\n\n\n\n\n\nNetwork configuration\n\n\ngen_param{\n    stim_file : \n../data/simple.bin\n\n    dt : 0.001\n    eps : 0.001\n    mode_param : {\n        begin_time : 0\n        end_time : 5\n        time_step : 500\n        begin_lgidx_id : 1\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 1\n        prn : 1\n        plasticity: 1\n    }\n    mode_param : {\n        begin_time : 5\n        end_time : 10\n        time_step : 500\n        begin_lgidx_id : 1\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 1\n        prn : 1\n        plasticity: 1\n    }\n    mode_param : {\n        begin_time : 10\n        end_time : 10.2\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 10.2\n        end_time : 10.5\n        time_step : 300\n        begin_lgidx_id : 11\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time :10.5\n        end_time : 10.7\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 10.7\n        end_time : 11.0\n        time_step : 300\n        begin_lgidx_id : 12\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11\n        end_time : 11.2\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11.2\n        end_time : 11.5\n        time_step : 300\n        begin_lgidx_id : 13\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11.5\n        end_time : 11.7\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11.7\n        end_time : 12.0\n        time_step : 300\n        begin_lgidx_id : 14\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 12\n        end_time : 12.2\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 12.2\n        end_time : 12.5\n        time_step : 300\n        begin_lgidx_id : 15\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n}\n\nnet_param{\n    pop_param : {\n        pop_num : 1\n        hcu_num : 100\n        taum : 0.01\n        wtagain: 1\n        maxfq:100\n        igain:1\n        wgain:1.0\n        lgbias: 0\n        snoise: 0\n        mcu_num : 10\n        fanout_num : 100\n\n        adgain: 0\n        taua: 0.05\n\n        shape:10\n        shape:10\n        rank: 0\n    }\n\n    proj_param : {\n        src_pop : 0\n        dest_pop : 0\n        tauzi:0.005000\n        tauzj:0.005001\n        taue:0.0050002\n        taup: 10\n        maxfq:100\n        wgain: 1\n        bgain: 1\n        slot_num : 500\n        tauepsc: 0.005\n    }\n}\n\nrec_param{\n    directory: \n../data/snapshot_simple\n\n}\n\nproc_param{\n    name: \nProcExtGen\n\n}\nproc_param{\n    name: \nProcUpdMulti\n\n    argi: {\n        key: \nspike buffer size\n\n        val: 25\n    }\n}\n\nproc_param{\n    name: \nProcExchangeSpike\n\n}\n\n\nproc_param{\n    name: \nProcStructuralPlasticity\n\n    argi: {\n        key: \nperiod\n\n        val: 100\n    }\n    argi: {\n        key: \npruning-period\n\n        val: 100000\n    }\n    argi: {\n        key: \nt-th\n\n        val: 50000\n    }\n    argi: {\n        key: \nenable-geometry\n\n        val: 0\n    }\n}\n\nproc_param{\n    name: \nProcSpkRec\n\n    argi: {\n        key: \nperiod\n\n        val: 1\n    }\n    argi: {\n        key: \noffset\n\n        val: 0\n    }\n}", 
            "title": "2 Complex shape test"
        }, 
        {
            "location": "/Experiment/Compete/2-Complex-shape-test/#complex-shape-test", 
            "text": "", 
            "title": "Complex shape test"
        }, 
        {
            "location": "/Experiment/Compete/2-Complex-shape-test/#purpose", 
            "text": "Visualize the activity of internal mini-columns inside a BCPNN network while 2 \ntrained patterns competing with each other.", 
            "title": "Purpose"
        }, 
        {
            "location": "/Experiment/Compete/2-Complex-shape-test/#metholoty", 
            "text": "The tested BCPNN network has 800 HCUs to represent a 20x20x2 image. Each HCU has 40\nMCU. 2 HCUs (80 MCUs) are used to represent each pixel. The color index is calculated\nby equation:  \\[\nI_{color} = I_{HCU1} \\times D_{MCU} + I_{HCU0}\n\\] Where  \\(I_{color}\\)  is the index of color,  \\(I_{HCU0}\\)  and  \\(I_{HCU0}\\)  are the active\nMCUs index in HCU0 and HCU1,  \\(D_{MCU}\\)  is the number of MCUs inside each HCU, according\nto the configuration,  \\(D_{MCU} = 40\\) .  A color map is generated based on the 10 training patterns. There are 1242 colors\nin total, so we use 2 HCU with 40 MCU each to represent the color space. Since  \\[\nCOLOR\\_SPACE = 40^2 = 1600   1242\n\\] Connectivity rate is set to be 3%.  Structural plasticity:   Grow connections at every 100 ms.  Remove connections at every 1000 ms.   Adaptation: Disabled", 
            "title": "Metholoty"
        }, 
        {
            "location": "/Experiment/Compete/2-Complex-shape-test/#training", 
            "text": "Pattern No.  Description      1  Gandalf    2  Superman    3  Spiderman    4  E.T.    5  Chunli    6  Dumbledore    7  Hulk    8  Ironman    9  Kenny    10  Leonardo", 
            "title": "Training"
        }, 
        {
            "location": "/Experiment/Compete/2-Complex-shape-test/#test", 
            "text": "Pattern No.  Winner      1 vs 6  6    2 vs 7  2    3 vs 8  3    4 vs 9  4    5 vs 10  5", 
            "title": "Test"
        }, 
        {
            "location": "/Experiment/Compete/2-Complex-shape-test/#network-configuration", 
            "text": "gen_param{\n    stim_file :  ../data/simple.bin \n    dt : 0.001\n    eps : 0.001\n    mode_param : {\n        begin_time : 0\n        end_time : 5\n        time_step : 500\n        begin_lgidx_id : 1\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 1\n        prn : 1\n        plasticity: 1\n    }\n    mode_param : {\n        begin_time : 5\n        end_time : 10\n        time_step : 500\n        begin_lgidx_id : 1\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 1\n        prn : 1\n        plasticity: 1\n    }\n    mode_param : {\n        begin_time : 10\n        end_time : 10.2\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 10.2\n        end_time : 10.5\n        time_step : 300\n        begin_lgidx_id : 11\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time :10.5\n        end_time : 10.7\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 10.7\n        end_time : 11.0\n        time_step : 300\n        begin_lgidx_id : 12\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11\n        end_time : 11.2\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11.2\n        end_time : 11.5\n        time_step : 300\n        begin_lgidx_id : 13\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11.5\n        end_time : 11.7\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 11.7\n        end_time : 12.0\n        time_step : 300\n        begin_lgidx_id : 14\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 12\n        end_time : 12.2\n        time_step : 200\n        begin_lgidx_id : 0\n        begin_wmask_id : 0\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n    mode_param : {\n        begin_time : 12.2\n        end_time : 12.5\n        time_step : 300\n        begin_lgidx_id : 15\n        begin_wmask_id : 1\n        wmask_step: 0\n        lgidx_step: 0\n        prn : 0\n        plasticity: 0\n    }\n}\n\nnet_param{\n    pop_param : {\n        pop_num : 1\n        hcu_num : 100\n        taum : 0.01\n        wtagain: 1\n        maxfq:100\n        igain:1\n        wgain:1.0\n        lgbias: 0\n        snoise: 0\n        mcu_num : 10\n        fanout_num : 100\n\n        adgain: 0\n        taua: 0.05\n\n        shape:10\n        shape:10\n        rank: 0\n    }\n\n    proj_param : {\n        src_pop : 0\n        dest_pop : 0\n        tauzi:0.005000\n        tauzj:0.005001\n        taue:0.0050002\n        taup: 10\n        maxfq:100\n        wgain: 1\n        bgain: 1\n        slot_num : 500\n        tauepsc: 0.005\n    }\n}\n\nrec_param{\n    directory:  ../data/snapshot_simple \n}\n\nproc_param{\n    name:  ProcExtGen \n}\nproc_param{\n    name:  ProcUpdMulti \n    argi: {\n        key:  spike buffer size \n        val: 25\n    }\n}\n\nproc_param{\n    name:  ProcExchangeSpike \n}\n\n\nproc_param{\n    name:  ProcStructuralPlasticity \n    argi: {\n        key:  period \n        val: 100\n    }\n    argi: {\n        key:  pruning-period \n        val: 100000\n    }\n    argi: {\n        key:  t-th \n        val: 50000\n    }\n    argi: {\n        key:  enable-geometry \n        val: 0\n    }\n}\n\nproc_param{\n    name:  ProcSpkRec \n    argi: {\n        key:  period \n        val: 1\n    }\n    argi: {\n        key:  offset \n        val: 0\n    }\n}", 
            "title": "Network configuration"
        }, 
        {
            "location": "/about/", 
            "text": "About\n\n\nAuthor\n\n\n\n\nYu Yang \n\n\n\n\nLicense\n\n\nMIT License\n\n\nCopyright \n 2016-2017 Yu Yang \n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\nLicence of dependencies:\n\n\n\n\nEasylogging++ v9.84\n\n\nCopyright \n 2016 muflihun.com\n\n\nThis library is released under the MIT Licence.\n\n\nhttp://easylogging.muflihun.com/licence.php\n\n\n\n\nhttps://github.com/easylogging/easyloggingpp\n\n\nhttp://easylogging.muflihun.com\n\n\nhttp://muflihun.com", 
            "title": "About"
        }, 
        {
            "location": "/about/#about", 
            "text": "", 
            "title": "About"
        }, 
        {
            "location": "/about/#author", 
            "text": "Yu Yang", 
            "title": "Author"
        }, 
        {
            "location": "/about/#license", 
            "text": "MIT License  Copyright   2016-2017 Yu Yang   Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", 
            "title": "License"
        }, 
        {
            "location": "/about/#licence-of-dependencies", 
            "text": "Easylogging++ v9.84  Copyright   2016 muflihun.com  This library is released under the MIT Licence.  http://easylogging.muflihun.com/licence.php   https://github.com/easylogging/easyloggingpp  http://easylogging.muflihun.com  http://muflihun.com", 
            "title": "Licence of dependencies:"
        }
    ]
}