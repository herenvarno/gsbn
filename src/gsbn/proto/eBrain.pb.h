// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eBrain.proto

#ifndef PROTOBUF_eBrain_2eproto__INCLUDED
#define PROTOBUF_eBrain_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace eb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_eBrain_2eproto();
void protobuf_AssignDesc_eBrain_2eproto();
void protobuf_ShutdownFile_eBrain_2eproto();

class NetParam;
class NetParam_PopParam;
class NetParam_HcuParam;
class NetParam_McuParam;
class NetParam_ProjParam;
class NetParam_StimParam;

// ===================================================================

class NetParam_PopParam : public ::google::protobuf::Message {
 public:
  NetParam_PopParam();
  virtual ~NetParam_PopParam();

  NetParam_PopParam(const NetParam_PopParam& from);

  inline NetParam_PopParam& operator=(const NetParam_PopParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetParam_PopParam& default_instance();

  void Swap(NetParam_PopParam* other);

  // implements Message ----------------------------------------------

  NetParam_PopParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetParam_PopParam& from);
  void MergeFrom(const NetParam_PopParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hcu_num = 1;
  inline bool has_hcu_num() const;
  inline void clear_hcu_num();
  static const int kHcuNumFieldNumber = 1;
  inline ::google::protobuf::uint32 hcu_num() const;
  inline void set_hcu_num(::google::protobuf::uint32 value);

  // optional uint32 hcu_slot = 2;
  inline bool has_hcu_slot() const;
  inline void clear_hcu_slot();
  static const int kHcuSlotFieldNumber = 2;
  inline ::google::protobuf::uint32 hcu_slot() const;
  inline void set_hcu_slot(::google::protobuf::uint32 value);

  // optional uint32 mcu_num = 3;
  inline bool has_mcu_num() const;
  inline void clear_mcu_num();
  static const int kMcuNumFieldNumber = 3;
  inline ::google::protobuf::uint32 mcu_num() const;
  inline void set_mcu_num(::google::protobuf::uint32 value);

  // optional uint32 mcu_fanout = 4;
  inline bool has_mcu_fanout() const;
  inline void clear_mcu_fanout();
  static const int kMcuFanoutFieldNumber = 4;
  inline ::google::protobuf::uint32 mcu_fanout() const;
  inline void set_mcu_fanout(::google::protobuf::uint32 value);

  // repeated .eb.NetParam.HcuParam hcu_param = 10;
  inline int hcu_param_size() const;
  inline void clear_hcu_param();
  static const int kHcuParamFieldNumber = 10;
  inline const ::eb::NetParam_HcuParam& hcu_param(int index) const;
  inline ::eb::NetParam_HcuParam* mutable_hcu_param(int index);
  inline ::eb::NetParam_HcuParam* add_hcu_param();
  inline const ::google::protobuf::RepeatedPtrField< ::eb::NetParam_HcuParam >&
      hcu_param() const;
  inline ::google::protobuf::RepeatedPtrField< ::eb::NetParam_HcuParam >*
      mutable_hcu_param();

  // @@protoc_insertion_point(class_scope:eb.NetParam.PopParam)
 private:
  inline void set_has_hcu_num();
  inline void clear_has_hcu_num();
  inline void set_has_hcu_slot();
  inline void clear_has_hcu_slot();
  inline void set_has_mcu_num();
  inline void clear_has_mcu_num();
  inline void set_has_mcu_fanout();
  inline void clear_has_mcu_fanout();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hcu_num_;
  ::google::protobuf::uint32 hcu_slot_;
  ::google::protobuf::uint32 mcu_num_;
  ::google::protobuf::uint32 mcu_fanout_;
  ::google::protobuf::RepeatedPtrField< ::eb::NetParam_HcuParam > hcu_param_;
  friend void  protobuf_AddDesc_eBrain_2eproto();
  friend void protobuf_AssignDesc_eBrain_2eproto();
  friend void protobuf_ShutdownFile_eBrain_2eproto();

  void InitAsDefaultInstance();
  static NetParam_PopParam* default_instance_;
};
// -------------------------------------------------------------------

class NetParam_HcuParam : public ::google::protobuf::Message {
 public:
  NetParam_HcuParam();
  virtual ~NetParam_HcuParam();

  NetParam_HcuParam(const NetParam_HcuParam& from);

  inline NetParam_HcuParam& operator=(const NetParam_HcuParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetParam_HcuParam& default_instance();

  void Swap(NetParam_HcuParam* other);

  // implements Message ----------------------------------------------

  NetParam_HcuParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetParam_HcuParam& from);
  void MergeFrom(const NetParam_HcuParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mcu_num = 1;
  inline bool has_mcu_num() const;
  inline void clear_mcu_num();
  static const int kMcuNumFieldNumber = 1;
  inline ::google::protobuf::uint32 mcu_num() const;
  inline void set_mcu_num(::google::protobuf::uint32 value);

  // optional uint32 mcu_fanout = 2;
  inline bool has_mcu_fanout() const;
  inline void clear_mcu_fanout();
  static const int kMcuFanoutFieldNumber = 2;
  inline ::google::protobuf::uint32 mcu_fanout() const;
  inline void set_mcu_fanout(::google::protobuf::uint32 value);

  // repeated .eb.NetParam.McuParam mcu_param = 10;
  inline int mcu_param_size() const;
  inline void clear_mcu_param();
  static const int kMcuParamFieldNumber = 10;
  inline const ::eb::NetParam_McuParam& mcu_param(int index) const;
  inline ::eb::NetParam_McuParam* mutable_mcu_param(int index);
  inline ::eb::NetParam_McuParam* add_mcu_param();
  inline const ::google::protobuf::RepeatedPtrField< ::eb::NetParam_McuParam >&
      mcu_param() const;
  inline ::google::protobuf::RepeatedPtrField< ::eb::NetParam_McuParam >*
      mutable_mcu_param();

  // @@protoc_insertion_point(class_scope:eb.NetParam.HcuParam)
 private:
  inline void set_has_mcu_num();
  inline void clear_has_mcu_num();
  inline void set_has_mcu_fanout();
  inline void clear_has_mcu_fanout();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mcu_num_;
  ::google::protobuf::uint32 mcu_fanout_;
  ::google::protobuf::RepeatedPtrField< ::eb::NetParam_McuParam > mcu_param_;
  friend void  protobuf_AddDesc_eBrain_2eproto();
  friend void protobuf_AssignDesc_eBrain_2eproto();
  friend void protobuf_ShutdownFile_eBrain_2eproto();

  void InitAsDefaultInstance();
  static NetParam_HcuParam* default_instance_;
};
// -------------------------------------------------------------------

class NetParam_McuParam : public ::google::protobuf::Message {
 public:
  NetParam_McuParam();
  virtual ~NetParam_McuParam();

  NetParam_McuParam(const NetParam_McuParam& from);

  inline NetParam_McuParam& operator=(const NetParam_McuParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetParam_McuParam& default_instance();

  void Swap(NetParam_McuParam* other);

  // implements Message ----------------------------------------------

  NetParam_McuParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetParam_McuParam& from);
  void MergeFrom(const NetParam_McuParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mcu_num = 1;
  inline bool has_mcu_num() const;
  inline void clear_mcu_num();
  static const int kMcuNumFieldNumber = 1;
  inline ::google::protobuf::uint32 mcu_num() const;
  inline void set_mcu_num(::google::protobuf::uint32 value);

  // required uint32 mcu_fanout = 2;
  inline bool has_mcu_fanout() const;
  inline void clear_mcu_fanout();
  static const int kMcuFanoutFieldNumber = 2;
  inline ::google::protobuf::uint32 mcu_fanout() const;
  inline void set_mcu_fanout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:eb.NetParam.McuParam)
 private:
  inline void set_has_mcu_num();
  inline void clear_has_mcu_num();
  inline void set_has_mcu_fanout();
  inline void clear_has_mcu_fanout();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mcu_num_;
  ::google::protobuf::uint32 mcu_fanout_;
  friend void  protobuf_AddDesc_eBrain_2eproto();
  friend void protobuf_AssignDesc_eBrain_2eproto();
  friend void protobuf_ShutdownFile_eBrain_2eproto();

  void InitAsDefaultInstance();
  static NetParam_McuParam* default_instance_;
};
// -------------------------------------------------------------------

class NetParam_ProjParam : public ::google::protobuf::Message {
 public:
  NetParam_ProjParam();
  virtual ~NetParam_ProjParam();

  NetParam_ProjParam(const NetParam_ProjParam& from);

  inline NetParam_ProjParam& operator=(const NetParam_ProjParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetParam_ProjParam& default_instance();

  void Swap(NetParam_ProjParam* other);

  // implements Message ----------------------------------------------

  NetParam_ProjParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetParam_ProjParam& from);
  void MergeFrom(const NetParam_ProjParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 src_pop = 1;
  inline bool has_src_pop() const;
  inline void clear_src_pop();
  static const int kSrcPopFieldNumber = 1;
  inline ::google::protobuf::uint32 src_pop() const;
  inline void set_src_pop(::google::protobuf::uint32 value);

  // required uint32 desc_pop = 2;
  inline bool has_desc_pop() const;
  inline void clear_desc_pop();
  static const int kDescPopFieldNumber = 2;
  inline ::google::protobuf::uint32 desc_pop() const;
  inline void set_desc_pop(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:eb.NetParam.ProjParam)
 private:
  inline void set_has_src_pop();
  inline void clear_has_src_pop();
  inline void set_has_desc_pop();
  inline void clear_has_desc_pop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 src_pop_;
  ::google::protobuf::uint32 desc_pop_;
  friend void  protobuf_AddDesc_eBrain_2eproto();
  friend void protobuf_AssignDesc_eBrain_2eproto();
  friend void protobuf_ShutdownFile_eBrain_2eproto();

  void InitAsDefaultInstance();
  static NetParam_ProjParam* default_instance_;
};
// -------------------------------------------------------------------

class NetParam_StimParam : public ::google::protobuf::Message {
 public:
  NetParam_StimParam();
  virtual ~NetParam_StimParam();

  NetParam_StimParam(const NetParam_StimParam& from);

  inline NetParam_StimParam& operator=(const NetParam_StimParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetParam_StimParam& default_instance();

  void Swap(NetParam_StimParam* other);

  // implements Message ----------------------------------------------

  NetParam_StimParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetParam_StimParam& from);
  void MergeFrom(const NetParam_StimParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 stim_num = 1;
  inline bool has_stim_num() const;
  inline void clear_stim_num();
  static const int kStimNumFieldNumber = 1;
  inline ::google::protobuf::uint32 stim_num() const;
  inline void set_stim_num(::google::protobuf::uint32 value);

  // required uint32 stim_size = 2;
  inline bool has_stim_size() const;
  inline void clear_stim_size();
  static const int kStimSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 stim_size() const;
  inline void set_stim_size(::google::protobuf::uint32 value);

  // required uint32 stim_type = 3;
  inline bool has_stim_type() const;
  inline void clear_stim_type();
  static const int kStimTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 stim_type() const;
  inline void set_stim_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:eb.NetParam.StimParam)
 private:
  inline void set_has_stim_num();
  inline void clear_has_stim_num();
  inline void set_has_stim_size();
  inline void clear_has_stim_size();
  inline void set_has_stim_type();
  inline void clear_has_stim_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 stim_num_;
  ::google::protobuf::uint32 stim_size_;
  ::google::protobuf::uint32 stim_type_;
  friend void  protobuf_AddDesc_eBrain_2eproto();
  friend void protobuf_AssignDesc_eBrain_2eproto();
  friend void protobuf_ShutdownFile_eBrain_2eproto();

  void InitAsDefaultInstance();
  static NetParam_StimParam* default_instance_;
};
// -------------------------------------------------------------------

class NetParam : public ::google::protobuf::Message {
 public:
  NetParam();
  virtual ~NetParam();

  NetParam(const NetParam& from);

  inline NetParam& operator=(const NetParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetParam& default_instance();

  void Swap(NetParam* other);

  // implements Message ----------------------------------------------

  NetParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetParam& from);
  void MergeFrom(const NetParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NetParam_PopParam PopParam;
  typedef NetParam_HcuParam HcuParam;
  typedef NetParam_McuParam McuParam;
  typedef NetParam_ProjParam ProjParam;
  typedef NetParam_StimParam StimParam;

  // accessors -------------------------------------------------------

  // optional uint32 pop_num = 1;
  inline bool has_pop_num() const;
  inline void clear_pop_num();
  static const int kPopNumFieldNumber = 1;
  inline ::google::protobuf::uint32 pop_num() const;
  inline void set_pop_num(::google::protobuf::uint32 value);

  // optional uint32 hcu_num = 2;
  inline bool has_hcu_num() const;
  inline void clear_hcu_num();
  static const int kHcuNumFieldNumber = 2;
  inline ::google::protobuf::uint32 hcu_num() const;
  inline void set_hcu_num(::google::protobuf::uint32 value);

  // optional uint32 hcu_slot = 3;
  inline bool has_hcu_slot() const;
  inline void clear_hcu_slot();
  static const int kHcuSlotFieldNumber = 3;
  inline ::google::protobuf::uint32 hcu_slot() const;
  inline void set_hcu_slot(::google::protobuf::uint32 value);

  // optional uint32 mcu_num = 4;
  inline bool has_mcu_num() const;
  inline void clear_mcu_num();
  static const int kMcuNumFieldNumber = 4;
  inline ::google::protobuf::uint32 mcu_num() const;
  inline void set_mcu_num(::google::protobuf::uint32 value);

  // optional uint32 mcu_fanout = 5;
  inline bool has_mcu_fanout() const;
  inline void clear_mcu_fanout();
  static const int kMcuFanoutFieldNumber = 5;
  inline ::google::protobuf::uint32 mcu_fanout() const;
  inline void set_mcu_fanout(::google::protobuf::uint32 value);

  // required .eb.NetParam.StimParam stim_param = 10;
  inline bool has_stim_param() const;
  inline void clear_stim_param();
  static const int kStimParamFieldNumber = 10;
  inline const ::eb::NetParam_StimParam& stim_param() const;
  inline ::eb::NetParam_StimParam* mutable_stim_param();
  inline ::eb::NetParam_StimParam* release_stim_param();
  inline void set_allocated_stim_param(::eb::NetParam_StimParam* stim_param);

  // repeated .eb.NetParam.ProjParam proj_param = 11;
  inline int proj_param_size() const;
  inline void clear_proj_param();
  static const int kProjParamFieldNumber = 11;
  inline const ::eb::NetParam_ProjParam& proj_param(int index) const;
  inline ::eb::NetParam_ProjParam* mutable_proj_param(int index);
  inline ::eb::NetParam_ProjParam* add_proj_param();
  inline const ::google::protobuf::RepeatedPtrField< ::eb::NetParam_ProjParam >&
      proj_param() const;
  inline ::google::protobuf::RepeatedPtrField< ::eb::NetParam_ProjParam >*
      mutable_proj_param();

  // repeated .eb.NetParam.PopParam pop_param = 20;
  inline int pop_param_size() const;
  inline void clear_pop_param();
  static const int kPopParamFieldNumber = 20;
  inline const ::eb::NetParam_PopParam& pop_param(int index) const;
  inline ::eb::NetParam_PopParam* mutable_pop_param(int index);
  inline ::eb::NetParam_PopParam* add_pop_param();
  inline const ::google::protobuf::RepeatedPtrField< ::eb::NetParam_PopParam >&
      pop_param() const;
  inline ::google::protobuf::RepeatedPtrField< ::eb::NetParam_PopParam >*
      mutable_pop_param();

  // @@protoc_insertion_point(class_scope:eb.NetParam)
 private:
  inline void set_has_pop_num();
  inline void clear_has_pop_num();
  inline void set_has_hcu_num();
  inline void clear_has_hcu_num();
  inline void set_has_hcu_slot();
  inline void clear_has_hcu_slot();
  inline void set_has_mcu_num();
  inline void clear_has_mcu_num();
  inline void set_has_mcu_fanout();
  inline void clear_has_mcu_fanout();
  inline void set_has_stim_param();
  inline void clear_has_stim_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pop_num_;
  ::google::protobuf::uint32 hcu_num_;
  ::google::protobuf::uint32 hcu_slot_;
  ::google::protobuf::uint32 mcu_num_;
  ::eb::NetParam_StimParam* stim_param_;
  ::google::protobuf::RepeatedPtrField< ::eb::NetParam_ProjParam > proj_param_;
  ::google::protobuf::RepeatedPtrField< ::eb::NetParam_PopParam > pop_param_;
  ::google::protobuf::uint32 mcu_fanout_;
  friend void  protobuf_AddDesc_eBrain_2eproto();
  friend void protobuf_AssignDesc_eBrain_2eproto();
  friend void protobuf_ShutdownFile_eBrain_2eproto();

  void InitAsDefaultInstance();
  static NetParam* default_instance_;
};
// ===================================================================


// ===================================================================

// NetParam_PopParam

// optional uint32 hcu_num = 1;
inline bool NetParam_PopParam::has_hcu_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetParam_PopParam::set_has_hcu_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetParam_PopParam::clear_has_hcu_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetParam_PopParam::clear_hcu_num() {
  hcu_num_ = 0u;
  clear_has_hcu_num();
}
inline ::google::protobuf::uint32 NetParam_PopParam::hcu_num() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.PopParam.hcu_num)
  return hcu_num_;
}
inline void NetParam_PopParam::set_hcu_num(::google::protobuf::uint32 value) {
  set_has_hcu_num();
  hcu_num_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.PopParam.hcu_num)
}

// optional uint32 hcu_slot = 2;
inline bool NetParam_PopParam::has_hcu_slot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetParam_PopParam::set_has_hcu_slot() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetParam_PopParam::clear_has_hcu_slot() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetParam_PopParam::clear_hcu_slot() {
  hcu_slot_ = 0u;
  clear_has_hcu_slot();
}
inline ::google::protobuf::uint32 NetParam_PopParam::hcu_slot() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.PopParam.hcu_slot)
  return hcu_slot_;
}
inline void NetParam_PopParam::set_hcu_slot(::google::protobuf::uint32 value) {
  set_has_hcu_slot();
  hcu_slot_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.PopParam.hcu_slot)
}

// optional uint32 mcu_num = 3;
inline bool NetParam_PopParam::has_mcu_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NetParam_PopParam::set_has_mcu_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NetParam_PopParam::clear_has_mcu_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NetParam_PopParam::clear_mcu_num() {
  mcu_num_ = 0u;
  clear_has_mcu_num();
}
inline ::google::protobuf::uint32 NetParam_PopParam::mcu_num() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.PopParam.mcu_num)
  return mcu_num_;
}
inline void NetParam_PopParam::set_mcu_num(::google::protobuf::uint32 value) {
  set_has_mcu_num();
  mcu_num_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.PopParam.mcu_num)
}

// optional uint32 mcu_fanout = 4;
inline bool NetParam_PopParam::has_mcu_fanout() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NetParam_PopParam::set_has_mcu_fanout() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NetParam_PopParam::clear_has_mcu_fanout() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NetParam_PopParam::clear_mcu_fanout() {
  mcu_fanout_ = 0u;
  clear_has_mcu_fanout();
}
inline ::google::protobuf::uint32 NetParam_PopParam::mcu_fanout() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.PopParam.mcu_fanout)
  return mcu_fanout_;
}
inline void NetParam_PopParam::set_mcu_fanout(::google::protobuf::uint32 value) {
  set_has_mcu_fanout();
  mcu_fanout_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.PopParam.mcu_fanout)
}

// repeated .eb.NetParam.HcuParam hcu_param = 10;
inline int NetParam_PopParam::hcu_param_size() const {
  return hcu_param_.size();
}
inline void NetParam_PopParam::clear_hcu_param() {
  hcu_param_.Clear();
}
inline const ::eb::NetParam_HcuParam& NetParam_PopParam::hcu_param(int index) const {
  // @@protoc_insertion_point(field_get:eb.NetParam.PopParam.hcu_param)
  return hcu_param_.Get(index);
}
inline ::eb::NetParam_HcuParam* NetParam_PopParam::mutable_hcu_param(int index) {
  // @@protoc_insertion_point(field_mutable:eb.NetParam.PopParam.hcu_param)
  return hcu_param_.Mutable(index);
}
inline ::eb::NetParam_HcuParam* NetParam_PopParam::add_hcu_param() {
  // @@protoc_insertion_point(field_add:eb.NetParam.PopParam.hcu_param)
  return hcu_param_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::eb::NetParam_HcuParam >&
NetParam_PopParam::hcu_param() const {
  // @@protoc_insertion_point(field_list:eb.NetParam.PopParam.hcu_param)
  return hcu_param_;
}
inline ::google::protobuf::RepeatedPtrField< ::eb::NetParam_HcuParam >*
NetParam_PopParam::mutable_hcu_param() {
  // @@protoc_insertion_point(field_mutable_list:eb.NetParam.PopParam.hcu_param)
  return &hcu_param_;
}

// -------------------------------------------------------------------

// NetParam_HcuParam

// optional uint32 mcu_num = 1;
inline bool NetParam_HcuParam::has_mcu_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetParam_HcuParam::set_has_mcu_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetParam_HcuParam::clear_has_mcu_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetParam_HcuParam::clear_mcu_num() {
  mcu_num_ = 0u;
  clear_has_mcu_num();
}
inline ::google::protobuf::uint32 NetParam_HcuParam::mcu_num() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.HcuParam.mcu_num)
  return mcu_num_;
}
inline void NetParam_HcuParam::set_mcu_num(::google::protobuf::uint32 value) {
  set_has_mcu_num();
  mcu_num_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.HcuParam.mcu_num)
}

// optional uint32 mcu_fanout = 2;
inline bool NetParam_HcuParam::has_mcu_fanout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetParam_HcuParam::set_has_mcu_fanout() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetParam_HcuParam::clear_has_mcu_fanout() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetParam_HcuParam::clear_mcu_fanout() {
  mcu_fanout_ = 0u;
  clear_has_mcu_fanout();
}
inline ::google::protobuf::uint32 NetParam_HcuParam::mcu_fanout() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.HcuParam.mcu_fanout)
  return mcu_fanout_;
}
inline void NetParam_HcuParam::set_mcu_fanout(::google::protobuf::uint32 value) {
  set_has_mcu_fanout();
  mcu_fanout_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.HcuParam.mcu_fanout)
}

// repeated .eb.NetParam.McuParam mcu_param = 10;
inline int NetParam_HcuParam::mcu_param_size() const {
  return mcu_param_.size();
}
inline void NetParam_HcuParam::clear_mcu_param() {
  mcu_param_.Clear();
}
inline const ::eb::NetParam_McuParam& NetParam_HcuParam::mcu_param(int index) const {
  // @@protoc_insertion_point(field_get:eb.NetParam.HcuParam.mcu_param)
  return mcu_param_.Get(index);
}
inline ::eb::NetParam_McuParam* NetParam_HcuParam::mutable_mcu_param(int index) {
  // @@protoc_insertion_point(field_mutable:eb.NetParam.HcuParam.mcu_param)
  return mcu_param_.Mutable(index);
}
inline ::eb::NetParam_McuParam* NetParam_HcuParam::add_mcu_param() {
  // @@protoc_insertion_point(field_add:eb.NetParam.HcuParam.mcu_param)
  return mcu_param_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::eb::NetParam_McuParam >&
NetParam_HcuParam::mcu_param() const {
  // @@protoc_insertion_point(field_list:eb.NetParam.HcuParam.mcu_param)
  return mcu_param_;
}
inline ::google::protobuf::RepeatedPtrField< ::eb::NetParam_McuParam >*
NetParam_HcuParam::mutable_mcu_param() {
  // @@protoc_insertion_point(field_mutable_list:eb.NetParam.HcuParam.mcu_param)
  return &mcu_param_;
}

// -------------------------------------------------------------------

// NetParam_McuParam

// required uint32 mcu_num = 1;
inline bool NetParam_McuParam::has_mcu_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetParam_McuParam::set_has_mcu_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetParam_McuParam::clear_has_mcu_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetParam_McuParam::clear_mcu_num() {
  mcu_num_ = 0u;
  clear_has_mcu_num();
}
inline ::google::protobuf::uint32 NetParam_McuParam::mcu_num() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.McuParam.mcu_num)
  return mcu_num_;
}
inline void NetParam_McuParam::set_mcu_num(::google::protobuf::uint32 value) {
  set_has_mcu_num();
  mcu_num_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.McuParam.mcu_num)
}

// required uint32 mcu_fanout = 2;
inline bool NetParam_McuParam::has_mcu_fanout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetParam_McuParam::set_has_mcu_fanout() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetParam_McuParam::clear_has_mcu_fanout() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetParam_McuParam::clear_mcu_fanout() {
  mcu_fanout_ = 0u;
  clear_has_mcu_fanout();
}
inline ::google::protobuf::uint32 NetParam_McuParam::mcu_fanout() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.McuParam.mcu_fanout)
  return mcu_fanout_;
}
inline void NetParam_McuParam::set_mcu_fanout(::google::protobuf::uint32 value) {
  set_has_mcu_fanout();
  mcu_fanout_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.McuParam.mcu_fanout)
}

// -------------------------------------------------------------------

// NetParam_ProjParam

// required uint32 src_pop = 1;
inline bool NetParam_ProjParam::has_src_pop() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetParam_ProjParam::set_has_src_pop() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetParam_ProjParam::clear_has_src_pop() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetParam_ProjParam::clear_src_pop() {
  src_pop_ = 0u;
  clear_has_src_pop();
}
inline ::google::protobuf::uint32 NetParam_ProjParam::src_pop() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.ProjParam.src_pop)
  return src_pop_;
}
inline void NetParam_ProjParam::set_src_pop(::google::protobuf::uint32 value) {
  set_has_src_pop();
  src_pop_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.ProjParam.src_pop)
}

// required uint32 desc_pop = 2;
inline bool NetParam_ProjParam::has_desc_pop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetParam_ProjParam::set_has_desc_pop() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetParam_ProjParam::clear_has_desc_pop() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetParam_ProjParam::clear_desc_pop() {
  desc_pop_ = 0u;
  clear_has_desc_pop();
}
inline ::google::protobuf::uint32 NetParam_ProjParam::desc_pop() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.ProjParam.desc_pop)
  return desc_pop_;
}
inline void NetParam_ProjParam::set_desc_pop(::google::protobuf::uint32 value) {
  set_has_desc_pop();
  desc_pop_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.ProjParam.desc_pop)
}

// -------------------------------------------------------------------

// NetParam_StimParam

// required uint32 stim_num = 1;
inline bool NetParam_StimParam::has_stim_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetParam_StimParam::set_has_stim_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetParam_StimParam::clear_has_stim_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetParam_StimParam::clear_stim_num() {
  stim_num_ = 0u;
  clear_has_stim_num();
}
inline ::google::protobuf::uint32 NetParam_StimParam::stim_num() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.StimParam.stim_num)
  return stim_num_;
}
inline void NetParam_StimParam::set_stim_num(::google::protobuf::uint32 value) {
  set_has_stim_num();
  stim_num_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.StimParam.stim_num)
}

// required uint32 stim_size = 2;
inline bool NetParam_StimParam::has_stim_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetParam_StimParam::set_has_stim_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetParam_StimParam::clear_has_stim_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetParam_StimParam::clear_stim_size() {
  stim_size_ = 0u;
  clear_has_stim_size();
}
inline ::google::protobuf::uint32 NetParam_StimParam::stim_size() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.StimParam.stim_size)
  return stim_size_;
}
inline void NetParam_StimParam::set_stim_size(::google::protobuf::uint32 value) {
  set_has_stim_size();
  stim_size_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.StimParam.stim_size)
}

// required uint32 stim_type = 3;
inline bool NetParam_StimParam::has_stim_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NetParam_StimParam::set_has_stim_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NetParam_StimParam::clear_has_stim_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NetParam_StimParam::clear_stim_type() {
  stim_type_ = 0u;
  clear_has_stim_type();
}
inline ::google::protobuf::uint32 NetParam_StimParam::stim_type() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.StimParam.stim_type)
  return stim_type_;
}
inline void NetParam_StimParam::set_stim_type(::google::protobuf::uint32 value) {
  set_has_stim_type();
  stim_type_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.StimParam.stim_type)
}

// -------------------------------------------------------------------

// NetParam

// optional uint32 pop_num = 1;
inline bool NetParam::has_pop_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetParam::set_has_pop_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetParam::clear_has_pop_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetParam::clear_pop_num() {
  pop_num_ = 0u;
  clear_has_pop_num();
}
inline ::google::protobuf::uint32 NetParam::pop_num() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.pop_num)
  return pop_num_;
}
inline void NetParam::set_pop_num(::google::protobuf::uint32 value) {
  set_has_pop_num();
  pop_num_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.pop_num)
}

// optional uint32 hcu_num = 2;
inline bool NetParam::has_hcu_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetParam::set_has_hcu_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetParam::clear_has_hcu_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetParam::clear_hcu_num() {
  hcu_num_ = 0u;
  clear_has_hcu_num();
}
inline ::google::protobuf::uint32 NetParam::hcu_num() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.hcu_num)
  return hcu_num_;
}
inline void NetParam::set_hcu_num(::google::protobuf::uint32 value) {
  set_has_hcu_num();
  hcu_num_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.hcu_num)
}

// optional uint32 hcu_slot = 3;
inline bool NetParam::has_hcu_slot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NetParam::set_has_hcu_slot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NetParam::clear_has_hcu_slot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NetParam::clear_hcu_slot() {
  hcu_slot_ = 0u;
  clear_has_hcu_slot();
}
inline ::google::protobuf::uint32 NetParam::hcu_slot() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.hcu_slot)
  return hcu_slot_;
}
inline void NetParam::set_hcu_slot(::google::protobuf::uint32 value) {
  set_has_hcu_slot();
  hcu_slot_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.hcu_slot)
}

// optional uint32 mcu_num = 4;
inline bool NetParam::has_mcu_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NetParam::set_has_mcu_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NetParam::clear_has_mcu_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NetParam::clear_mcu_num() {
  mcu_num_ = 0u;
  clear_has_mcu_num();
}
inline ::google::protobuf::uint32 NetParam::mcu_num() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.mcu_num)
  return mcu_num_;
}
inline void NetParam::set_mcu_num(::google::protobuf::uint32 value) {
  set_has_mcu_num();
  mcu_num_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.mcu_num)
}

// optional uint32 mcu_fanout = 5;
inline bool NetParam::has_mcu_fanout() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NetParam::set_has_mcu_fanout() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NetParam::clear_has_mcu_fanout() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NetParam::clear_mcu_fanout() {
  mcu_fanout_ = 0u;
  clear_has_mcu_fanout();
}
inline ::google::protobuf::uint32 NetParam::mcu_fanout() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.mcu_fanout)
  return mcu_fanout_;
}
inline void NetParam::set_mcu_fanout(::google::protobuf::uint32 value) {
  set_has_mcu_fanout();
  mcu_fanout_ = value;
  // @@protoc_insertion_point(field_set:eb.NetParam.mcu_fanout)
}

// required .eb.NetParam.StimParam stim_param = 10;
inline bool NetParam::has_stim_param() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NetParam::set_has_stim_param() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NetParam::clear_has_stim_param() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NetParam::clear_stim_param() {
  if (stim_param_ != NULL) stim_param_->::eb::NetParam_StimParam::Clear();
  clear_has_stim_param();
}
inline const ::eb::NetParam_StimParam& NetParam::stim_param() const {
  // @@protoc_insertion_point(field_get:eb.NetParam.stim_param)
  return stim_param_ != NULL ? *stim_param_ : *default_instance_->stim_param_;
}
inline ::eb::NetParam_StimParam* NetParam::mutable_stim_param() {
  set_has_stim_param();
  if (stim_param_ == NULL) stim_param_ = new ::eb::NetParam_StimParam;
  // @@protoc_insertion_point(field_mutable:eb.NetParam.stim_param)
  return stim_param_;
}
inline ::eb::NetParam_StimParam* NetParam::release_stim_param() {
  clear_has_stim_param();
  ::eb::NetParam_StimParam* temp = stim_param_;
  stim_param_ = NULL;
  return temp;
}
inline void NetParam::set_allocated_stim_param(::eb::NetParam_StimParam* stim_param) {
  delete stim_param_;
  stim_param_ = stim_param;
  if (stim_param) {
    set_has_stim_param();
  } else {
    clear_has_stim_param();
  }
  // @@protoc_insertion_point(field_set_allocated:eb.NetParam.stim_param)
}

// repeated .eb.NetParam.ProjParam proj_param = 11;
inline int NetParam::proj_param_size() const {
  return proj_param_.size();
}
inline void NetParam::clear_proj_param() {
  proj_param_.Clear();
}
inline const ::eb::NetParam_ProjParam& NetParam::proj_param(int index) const {
  // @@protoc_insertion_point(field_get:eb.NetParam.proj_param)
  return proj_param_.Get(index);
}
inline ::eb::NetParam_ProjParam* NetParam::mutable_proj_param(int index) {
  // @@protoc_insertion_point(field_mutable:eb.NetParam.proj_param)
  return proj_param_.Mutable(index);
}
inline ::eb::NetParam_ProjParam* NetParam::add_proj_param() {
  // @@protoc_insertion_point(field_add:eb.NetParam.proj_param)
  return proj_param_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::eb::NetParam_ProjParam >&
NetParam::proj_param() const {
  // @@protoc_insertion_point(field_list:eb.NetParam.proj_param)
  return proj_param_;
}
inline ::google::protobuf::RepeatedPtrField< ::eb::NetParam_ProjParam >*
NetParam::mutable_proj_param() {
  // @@protoc_insertion_point(field_mutable_list:eb.NetParam.proj_param)
  return &proj_param_;
}

// repeated .eb.NetParam.PopParam pop_param = 20;
inline int NetParam::pop_param_size() const {
  return pop_param_.size();
}
inline void NetParam::clear_pop_param() {
  pop_param_.Clear();
}
inline const ::eb::NetParam_PopParam& NetParam::pop_param(int index) const {
  // @@protoc_insertion_point(field_get:eb.NetParam.pop_param)
  return pop_param_.Get(index);
}
inline ::eb::NetParam_PopParam* NetParam::mutable_pop_param(int index) {
  // @@protoc_insertion_point(field_mutable:eb.NetParam.pop_param)
  return pop_param_.Mutable(index);
}
inline ::eb::NetParam_PopParam* NetParam::add_pop_param() {
  // @@protoc_insertion_point(field_add:eb.NetParam.pop_param)
  return pop_param_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::eb::NetParam_PopParam >&
NetParam::pop_param() const {
  // @@protoc_insertion_point(field_list:eb.NetParam.pop_param)
  return pop_param_;
}
inline ::google::protobuf::RepeatedPtrField< ::eb::NetParam_PopParam >*
NetParam::mutable_pop_param() {
  // @@protoc_insertion_point(field_mutable_list:eb.NetParam.pop_param)
  return &pop_param_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace eb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_eBrain_2eproto__INCLUDED
