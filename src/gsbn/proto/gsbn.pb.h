// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gsbn.proto

#ifndef PROTOBUF_gsbn_2eproto__INCLUDED
#define PROTOBUF_gsbn_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gsbn {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gsbn_2eproto();
void protobuf_AssignDesc_gsbn_2eproto();
void protobuf_ShutdownFile_gsbn_2eproto();

class SolverParam;
class TimerParam;
class RecorderParam;
class StimmerParam;
class NetParam;
class PopParam;
class HcuParam;
class McuParam;
class ProjParam;
class SolverState;
class TableState;

// ===================================================================

class SolverParam : public ::google::protobuf::Message {
 public:
  SolverParam();
  virtual ~SolverParam();

  SolverParam(const SolverParam& from);

  inline SolverParam& operator=(const SolverParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SolverParam& default_instance();

  void Swap(SolverParam* other);

  // implements Message ----------------------------------------------

  SolverParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SolverParam& from);
  void MergeFrom(const SolverParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gsbn.TimerParam timer_param = 1;
  inline bool has_timer_param() const;
  inline void clear_timer_param();
  static const int kTimerParamFieldNumber = 1;
  inline const ::gsbn::TimerParam& timer_param() const;
  inline ::gsbn::TimerParam* mutable_timer_param();
  inline ::gsbn::TimerParam* release_timer_param();
  inline void set_allocated_timer_param(::gsbn::TimerParam* timer_param);

  // required .gsbn.RecorderParam recorder_param = 2;
  inline bool has_recorder_param() const;
  inline void clear_recorder_param();
  static const int kRecorderParamFieldNumber = 2;
  inline const ::gsbn::RecorderParam& recorder_param() const;
  inline ::gsbn::RecorderParam* mutable_recorder_param();
  inline ::gsbn::RecorderParam* release_recorder_param();
  inline void set_allocated_recorder_param(::gsbn::RecorderParam* recorder_param);

  // required .gsbn.StimmerParam stimmer_param = 3;
  inline bool has_stimmer_param() const;
  inline void clear_stimmer_param();
  static const int kStimmerParamFieldNumber = 3;
  inline const ::gsbn::StimmerParam& stimmer_param() const;
  inline ::gsbn::StimmerParam* mutable_stimmer_param();
  inline ::gsbn::StimmerParam* release_stimmer_param();
  inline void set_allocated_stimmer_param(::gsbn::StimmerParam* stimmer_param);

  // required .gsbn.NetParam net_param = 4;
  inline bool has_net_param() const;
  inline void clear_net_param();
  static const int kNetParamFieldNumber = 4;
  inline const ::gsbn::NetParam& net_param() const;
  inline ::gsbn::NetParam* mutable_net_param();
  inline ::gsbn::NetParam* release_net_param();
  inline void set_allocated_net_param(::gsbn::NetParam* net_param);

  // @@protoc_insertion_point(class_scope:gsbn.SolverParam)
 private:
  inline void set_has_timer_param();
  inline void clear_has_timer_param();
  inline void set_has_recorder_param();
  inline void clear_has_recorder_param();
  inline void set_has_stimmer_param();
  inline void clear_has_stimmer_param();
  inline void set_has_net_param();
  inline void clear_has_net_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::gsbn::TimerParam* timer_param_;
  ::gsbn::RecorderParam* recorder_param_;
  ::gsbn::StimmerParam* stimmer_param_;
  ::gsbn::NetParam* net_param_;
  friend void  protobuf_AddDesc_gsbn_2eproto();
  friend void protobuf_AssignDesc_gsbn_2eproto();
  friend void protobuf_ShutdownFile_gsbn_2eproto();

  void InitAsDefaultInstance();
  static SolverParam* default_instance_;
};
// -------------------------------------------------------------------

class TimerParam : public ::google::protobuf::Message {
 public:
  TimerParam();
  virtual ~TimerParam();

  TimerParam(const TimerParam& from);

  inline TimerParam& operator=(const TimerParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimerParam& default_instance();

  void Swap(TimerParam* other);

  // implements Message ----------------------------------------------

  TimerParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimerParam& from);
  void MergeFrom(const TimerParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sim_step = 1 [default = 1];
  inline bool has_sim_step() const;
  inline void clear_sim_step();
  static const int kSimStepFieldNumber = 1;
  inline ::google::protobuf::uint32 sim_step() const;
  inline void set_sim_step(::google::protobuf::uint32 value);

  // required uint32 sim_time = 2;
  inline bool has_sim_time() const;
  inline void clear_sim_time();
  static const int kSimTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 sim_time() const;
  inline void set_sim_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gsbn.TimerParam)
 private:
  inline void set_has_sim_step();
  inline void clear_has_sim_step();
  inline void set_has_sim_time();
  inline void clear_has_sim_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 sim_step_;
  ::google::protobuf::uint32 sim_time_;
  friend void  protobuf_AddDesc_gsbn_2eproto();
  friend void protobuf_AssignDesc_gsbn_2eproto();
  friend void protobuf_ShutdownFile_gsbn_2eproto();

  void InitAsDefaultInstance();
  static TimerParam* default_instance_;
};
// -------------------------------------------------------------------

class RecorderParam : public ::google::protobuf::Message {
 public:
  RecorderParam();
  virtual ~RecorderParam();

  RecorderParam(const RecorderParam& from);

  inline RecorderParam& operator=(const RecorderParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecorderParam& default_instance();

  void Swap(RecorderParam* other);

  // implements Message ----------------------------------------------

  RecorderParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecorderParam& from);
  void MergeFrom(const RecorderParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 record_freq = 1;
  inline bool has_record_freq() const;
  inline void clear_record_freq();
  static const int kRecordFreqFieldNumber = 1;
  inline ::google::protobuf::uint32 record_freq() const;
  inline void set_record_freq(::google::protobuf::uint32 value);

  // required string record_dir = 2;
  inline bool has_record_dir() const;
  inline void clear_record_dir();
  static const int kRecordDirFieldNumber = 2;
  inline const ::std::string& record_dir() const;
  inline void set_record_dir(const ::std::string& value);
  inline void set_record_dir(const char* value);
  inline void set_record_dir(const char* value, size_t size);
  inline ::std::string* mutable_record_dir();
  inline ::std::string* release_record_dir();
  inline void set_allocated_record_dir(::std::string* record_dir);

  // @@protoc_insertion_point(class_scope:gsbn.RecorderParam)
 private:
  inline void set_has_record_freq();
  inline void clear_has_record_freq();
  inline void set_has_record_dir();
  inline void clear_has_record_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* record_dir_;
  ::google::protobuf::uint32 record_freq_;
  friend void  protobuf_AddDesc_gsbn_2eproto();
  friend void protobuf_AssignDesc_gsbn_2eproto();
  friend void protobuf_ShutdownFile_gsbn_2eproto();

  void InitAsDefaultInstance();
  static RecorderParam* default_instance_;
};
// -------------------------------------------------------------------

class StimmerParam : public ::google::protobuf::Message {
 public:
  StimmerParam();
  virtual ~StimmerParam();

  StimmerParam(const StimmerParam& from);

  inline StimmerParam& operator=(const StimmerParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StimmerParam& default_instance();

  void Swap(StimmerParam* other);

  // implements Message ----------------------------------------------

  StimmerParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StimmerParam& from);
  void MergeFrom(const StimmerParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rows = 1;
  inline bool has_rows() const;
  inline void clear_rows();
  static const int kRowsFieldNumber = 1;
  inline ::google::protobuf::uint32 rows() const;
  inline void set_rows(::google::protobuf::uint32 value);

  // required uint32 cols = 2;
  inline bool has_cols() const;
  inline void clear_cols();
  static const int kColsFieldNumber = 2;
  inline ::google::protobuf::uint32 cols() const;
  inline void set_cols(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gsbn.StimmerParam)
 private:
  inline void set_has_rows();
  inline void clear_has_rows();
  inline void set_has_cols();
  inline void clear_has_cols();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rows_;
  ::google::protobuf::uint32 cols_;
  friend void  protobuf_AddDesc_gsbn_2eproto();
  friend void protobuf_AssignDesc_gsbn_2eproto();
  friend void protobuf_ShutdownFile_gsbn_2eproto();

  void InitAsDefaultInstance();
  static StimmerParam* default_instance_;
};
// -------------------------------------------------------------------

class NetParam : public ::google::protobuf::Message {
 public:
  NetParam();
  virtual ~NetParam();

  NetParam(const NetParam& from);

  inline NetParam& operator=(const NetParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetParam& default_instance();

  void Swap(NetParam* other);

  // implements Message ----------------------------------------------

  NetParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetParam& from);
  void MergeFrom(const NetParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gsbn.PopParam pop_param = 1;
  inline int pop_param_size() const;
  inline void clear_pop_param();
  static const int kPopParamFieldNumber = 1;
  inline const ::gsbn::PopParam& pop_param(int index) const;
  inline ::gsbn::PopParam* mutable_pop_param(int index);
  inline ::gsbn::PopParam* add_pop_param();
  inline const ::google::protobuf::RepeatedPtrField< ::gsbn::PopParam >&
      pop_param() const;
  inline ::google::protobuf::RepeatedPtrField< ::gsbn::PopParam >*
      mutable_pop_param();

  // repeated .gsbn.ProjParam proj_param = 2;
  inline int proj_param_size() const;
  inline void clear_proj_param();
  static const int kProjParamFieldNumber = 2;
  inline const ::gsbn::ProjParam& proj_param(int index) const;
  inline ::gsbn::ProjParam* mutable_proj_param(int index);
  inline ::gsbn::ProjParam* add_proj_param();
  inline const ::google::protobuf::RepeatedPtrField< ::gsbn::ProjParam >&
      proj_param() const;
  inline ::google::protobuf::RepeatedPtrField< ::gsbn::ProjParam >*
      mutable_proj_param();

  // @@protoc_insertion_point(class_scope:gsbn.NetParam)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::PopParam > pop_param_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::ProjParam > proj_param_;
  friend void  protobuf_AddDesc_gsbn_2eproto();
  friend void protobuf_AssignDesc_gsbn_2eproto();
  friend void protobuf_ShutdownFile_gsbn_2eproto();

  void InitAsDefaultInstance();
  static NetParam* default_instance_;
};
// -------------------------------------------------------------------

class PopParam : public ::google::protobuf::Message {
 public:
  PopParam();
  virtual ~PopParam();

  PopParam(const PopParam& from);

  inline PopParam& operator=(const PopParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PopParam& default_instance();

  void Swap(PopParam* other);

  // implements Message ----------------------------------------------

  PopParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PopParam& from);
  void MergeFrom(const PopParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pop_num = 1;
  inline bool has_pop_num() const;
  inline void clear_pop_num();
  static const int kPopNumFieldNumber = 1;
  inline ::google::protobuf::uint32 pop_num() const;
  inline void set_pop_num(::google::protobuf::uint32 value);

  // repeated .gsbn.HcuParam hcu_param = 2;
  inline int hcu_param_size() const;
  inline void clear_hcu_param();
  static const int kHcuParamFieldNumber = 2;
  inline const ::gsbn::HcuParam& hcu_param(int index) const;
  inline ::gsbn::HcuParam* mutable_hcu_param(int index);
  inline ::gsbn::HcuParam* add_hcu_param();
  inline const ::google::protobuf::RepeatedPtrField< ::gsbn::HcuParam >&
      hcu_param() const;
  inline ::google::protobuf::RepeatedPtrField< ::gsbn::HcuParam >*
      mutable_hcu_param();

  // @@protoc_insertion_point(class_scope:gsbn.PopParam)
 private:
  inline void set_has_pop_num();
  inline void clear_has_pop_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::HcuParam > hcu_param_;
  ::google::protobuf::uint32 pop_num_;
  friend void  protobuf_AddDesc_gsbn_2eproto();
  friend void protobuf_AssignDesc_gsbn_2eproto();
  friend void protobuf_ShutdownFile_gsbn_2eproto();

  void InitAsDefaultInstance();
  static PopParam* default_instance_;
};
// -------------------------------------------------------------------

class HcuParam : public ::google::protobuf::Message {
 public:
  HcuParam();
  virtual ~HcuParam();

  HcuParam(const HcuParam& from);

  inline HcuParam& operator=(const HcuParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HcuParam& default_instance();

  void Swap(HcuParam* other);

  // implements Message ----------------------------------------------

  HcuParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HcuParam& from);
  void MergeFrom(const HcuParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hcu_num = 1;
  inline bool has_hcu_num() const;
  inline void clear_hcu_num();
  static const int kHcuNumFieldNumber = 1;
  inline ::google::protobuf::uint32 hcu_num() const;
  inline void set_hcu_num(::google::protobuf::uint32 value);

  // required uint32 slot_num = 2;
  inline bool has_slot_num() const;
  inline void clear_slot_num();
  static const int kSlotNumFieldNumber = 2;
  inline ::google::protobuf::uint32 slot_num() const;
  inline void set_slot_num(::google::protobuf::uint32 value);

  // repeated .gsbn.McuParam mcu_param = 3;
  inline int mcu_param_size() const;
  inline void clear_mcu_param();
  static const int kMcuParamFieldNumber = 3;
  inline const ::gsbn::McuParam& mcu_param(int index) const;
  inline ::gsbn::McuParam* mutable_mcu_param(int index);
  inline ::gsbn::McuParam* add_mcu_param();
  inline const ::google::protobuf::RepeatedPtrField< ::gsbn::McuParam >&
      mcu_param() const;
  inline ::google::protobuf::RepeatedPtrField< ::gsbn::McuParam >*
      mutable_mcu_param();

  // @@protoc_insertion_point(class_scope:gsbn.HcuParam)
 private:
  inline void set_has_hcu_num();
  inline void clear_has_hcu_num();
  inline void set_has_slot_num();
  inline void clear_has_slot_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hcu_num_;
  ::google::protobuf::uint32 slot_num_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::McuParam > mcu_param_;
  friend void  protobuf_AddDesc_gsbn_2eproto();
  friend void protobuf_AssignDesc_gsbn_2eproto();
  friend void protobuf_ShutdownFile_gsbn_2eproto();

  void InitAsDefaultInstance();
  static HcuParam* default_instance_;
};
// -------------------------------------------------------------------

class McuParam : public ::google::protobuf::Message {
 public:
  McuParam();
  virtual ~McuParam();

  McuParam(const McuParam& from);

  inline McuParam& operator=(const McuParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const McuParam& default_instance();

  void Swap(McuParam* other);

  // implements Message ----------------------------------------------

  McuParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const McuParam& from);
  void MergeFrom(const McuParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mcu_num = 1;
  inline bool has_mcu_num() const;
  inline void clear_mcu_num();
  static const int kMcuNumFieldNumber = 1;
  inline ::google::protobuf::uint32 mcu_num() const;
  inline void set_mcu_num(::google::protobuf::uint32 value);

  // required uint32 mcu_fanout = 2;
  inline bool has_mcu_fanout() const;
  inline void clear_mcu_fanout();
  static const int kMcuFanoutFieldNumber = 2;
  inline ::google::protobuf::uint32 mcu_fanout() const;
  inline void set_mcu_fanout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gsbn.McuParam)
 private:
  inline void set_has_mcu_num();
  inline void clear_has_mcu_num();
  inline void set_has_mcu_fanout();
  inline void clear_has_mcu_fanout();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mcu_num_;
  ::google::protobuf::uint32 mcu_fanout_;
  friend void  protobuf_AddDesc_gsbn_2eproto();
  friend void protobuf_AssignDesc_gsbn_2eproto();
  friend void protobuf_ShutdownFile_gsbn_2eproto();

  void InitAsDefaultInstance();
  static McuParam* default_instance_;
};
// -------------------------------------------------------------------

class ProjParam : public ::google::protobuf::Message {
 public:
  ProjParam();
  virtual ~ProjParam();

  ProjParam(const ProjParam& from);

  inline ProjParam& operator=(const ProjParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProjParam& default_instance();

  void Swap(ProjParam* other);

  // implements Message ----------------------------------------------

  ProjParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProjParam& from);
  void MergeFrom(const ProjParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 src_pop = 1;
  inline bool has_src_pop() const;
  inline void clear_src_pop();
  static const int kSrcPopFieldNumber = 1;
  inline ::google::protobuf::uint32 src_pop() const;
  inline void set_src_pop(::google::protobuf::uint32 value);

  // required uint32 desc_pop = 2;
  inline bool has_desc_pop() const;
  inline void clear_desc_pop();
  static const int kDescPopFieldNumber = 2;
  inline ::google::protobuf::uint32 desc_pop() const;
  inline void set_desc_pop(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gsbn.ProjParam)
 private:
  inline void set_has_src_pop();
  inline void clear_has_src_pop();
  inline void set_has_desc_pop();
  inline void clear_has_desc_pop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 src_pop_;
  ::google::protobuf::uint32 desc_pop_;
  friend void  protobuf_AddDesc_gsbn_2eproto();
  friend void protobuf_AssignDesc_gsbn_2eproto();
  friend void protobuf_ShutdownFile_gsbn_2eproto();

  void InitAsDefaultInstance();
  static ProjParam* default_instance_;
};
// -------------------------------------------------------------------

class SolverState : public ::google::protobuf::Message {
 public:
  SolverState();
  virtual ~SolverState();

  SolverState(const SolverState& from);

  inline SolverState& operator=(const SolverState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SolverState& default_instance();

  void Swap(SolverState* other);

  // implements Message ----------------------------------------------

  SolverState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SolverState& from);
  void MergeFrom(const SolverState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // repeated .gsbn.TableState table_state = 2;
  inline int table_state_size() const;
  inline void clear_table_state();
  static const int kTableStateFieldNumber = 2;
  inline const ::gsbn::TableState& table_state(int index) const;
  inline ::gsbn::TableState* mutable_table_state(int index);
  inline ::gsbn::TableState* add_table_state();
  inline const ::google::protobuf::RepeatedPtrField< ::gsbn::TableState >&
      table_state() const;
  inline ::google::protobuf::RepeatedPtrField< ::gsbn::TableState >*
      mutable_table_state();

  // @@protoc_insertion_point(class_scope:gsbn.SolverState)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::TableState > table_state_;
  ::google::protobuf::uint32 timestamp_;
  friend void  protobuf_AddDesc_gsbn_2eproto();
  friend void protobuf_AssignDesc_gsbn_2eproto();
  friend void protobuf_ShutdownFile_gsbn_2eproto();

  void InitAsDefaultInstance();
  static SolverState* default_instance_;
};
// -------------------------------------------------------------------

class TableState : public ::google::protobuf::Message {
 public:
  TableState();
  virtual ~TableState();

  TableState(const TableState& from);

  inline TableState& operator=(const TableState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableState& default_instance();

  void Swap(TableState* other);

  // implements Message ----------------------------------------------

  TableState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TableState& from);
  void MergeFrom(const TableState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required bytes desc = 2;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 2;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const void* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // required bytes data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:gsbn.TableState)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* desc_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_gsbn_2eproto();
  friend void protobuf_AssignDesc_gsbn_2eproto();
  friend void protobuf_ShutdownFile_gsbn_2eproto();

  void InitAsDefaultInstance();
  static TableState* default_instance_;
};
// ===================================================================


// ===================================================================

// SolverParam

// required .gsbn.TimerParam timer_param = 1;
inline bool SolverParam::has_timer_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SolverParam::set_has_timer_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SolverParam::clear_has_timer_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SolverParam::clear_timer_param() {
  if (timer_param_ != NULL) timer_param_->::gsbn::TimerParam::Clear();
  clear_has_timer_param();
}
inline const ::gsbn::TimerParam& SolverParam::timer_param() const {
  // @@protoc_insertion_point(field_get:gsbn.SolverParam.timer_param)
  return timer_param_ != NULL ? *timer_param_ : *default_instance_->timer_param_;
}
inline ::gsbn::TimerParam* SolverParam::mutable_timer_param() {
  set_has_timer_param();
  if (timer_param_ == NULL) timer_param_ = new ::gsbn::TimerParam;
  // @@protoc_insertion_point(field_mutable:gsbn.SolverParam.timer_param)
  return timer_param_;
}
inline ::gsbn::TimerParam* SolverParam::release_timer_param() {
  clear_has_timer_param();
  ::gsbn::TimerParam* temp = timer_param_;
  timer_param_ = NULL;
  return temp;
}
inline void SolverParam::set_allocated_timer_param(::gsbn::TimerParam* timer_param) {
  delete timer_param_;
  timer_param_ = timer_param;
  if (timer_param) {
    set_has_timer_param();
  } else {
    clear_has_timer_param();
  }
  // @@protoc_insertion_point(field_set_allocated:gsbn.SolverParam.timer_param)
}

// required .gsbn.RecorderParam recorder_param = 2;
inline bool SolverParam::has_recorder_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SolverParam::set_has_recorder_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SolverParam::clear_has_recorder_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SolverParam::clear_recorder_param() {
  if (recorder_param_ != NULL) recorder_param_->::gsbn::RecorderParam::Clear();
  clear_has_recorder_param();
}
inline const ::gsbn::RecorderParam& SolverParam::recorder_param() const {
  // @@protoc_insertion_point(field_get:gsbn.SolverParam.recorder_param)
  return recorder_param_ != NULL ? *recorder_param_ : *default_instance_->recorder_param_;
}
inline ::gsbn::RecorderParam* SolverParam::mutable_recorder_param() {
  set_has_recorder_param();
  if (recorder_param_ == NULL) recorder_param_ = new ::gsbn::RecorderParam;
  // @@protoc_insertion_point(field_mutable:gsbn.SolverParam.recorder_param)
  return recorder_param_;
}
inline ::gsbn::RecorderParam* SolverParam::release_recorder_param() {
  clear_has_recorder_param();
  ::gsbn::RecorderParam* temp = recorder_param_;
  recorder_param_ = NULL;
  return temp;
}
inline void SolverParam::set_allocated_recorder_param(::gsbn::RecorderParam* recorder_param) {
  delete recorder_param_;
  recorder_param_ = recorder_param;
  if (recorder_param) {
    set_has_recorder_param();
  } else {
    clear_has_recorder_param();
  }
  // @@protoc_insertion_point(field_set_allocated:gsbn.SolverParam.recorder_param)
}

// required .gsbn.StimmerParam stimmer_param = 3;
inline bool SolverParam::has_stimmer_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SolverParam::set_has_stimmer_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SolverParam::clear_has_stimmer_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SolverParam::clear_stimmer_param() {
  if (stimmer_param_ != NULL) stimmer_param_->::gsbn::StimmerParam::Clear();
  clear_has_stimmer_param();
}
inline const ::gsbn::StimmerParam& SolverParam::stimmer_param() const {
  // @@protoc_insertion_point(field_get:gsbn.SolverParam.stimmer_param)
  return stimmer_param_ != NULL ? *stimmer_param_ : *default_instance_->stimmer_param_;
}
inline ::gsbn::StimmerParam* SolverParam::mutable_stimmer_param() {
  set_has_stimmer_param();
  if (stimmer_param_ == NULL) stimmer_param_ = new ::gsbn::StimmerParam;
  // @@protoc_insertion_point(field_mutable:gsbn.SolverParam.stimmer_param)
  return stimmer_param_;
}
inline ::gsbn::StimmerParam* SolverParam::release_stimmer_param() {
  clear_has_stimmer_param();
  ::gsbn::StimmerParam* temp = stimmer_param_;
  stimmer_param_ = NULL;
  return temp;
}
inline void SolverParam::set_allocated_stimmer_param(::gsbn::StimmerParam* stimmer_param) {
  delete stimmer_param_;
  stimmer_param_ = stimmer_param;
  if (stimmer_param) {
    set_has_stimmer_param();
  } else {
    clear_has_stimmer_param();
  }
  // @@protoc_insertion_point(field_set_allocated:gsbn.SolverParam.stimmer_param)
}

// required .gsbn.NetParam net_param = 4;
inline bool SolverParam::has_net_param() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SolverParam::set_has_net_param() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SolverParam::clear_has_net_param() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SolverParam::clear_net_param() {
  if (net_param_ != NULL) net_param_->::gsbn::NetParam::Clear();
  clear_has_net_param();
}
inline const ::gsbn::NetParam& SolverParam::net_param() const {
  // @@protoc_insertion_point(field_get:gsbn.SolverParam.net_param)
  return net_param_ != NULL ? *net_param_ : *default_instance_->net_param_;
}
inline ::gsbn::NetParam* SolverParam::mutable_net_param() {
  set_has_net_param();
  if (net_param_ == NULL) net_param_ = new ::gsbn::NetParam;
  // @@protoc_insertion_point(field_mutable:gsbn.SolverParam.net_param)
  return net_param_;
}
inline ::gsbn::NetParam* SolverParam::release_net_param() {
  clear_has_net_param();
  ::gsbn::NetParam* temp = net_param_;
  net_param_ = NULL;
  return temp;
}
inline void SolverParam::set_allocated_net_param(::gsbn::NetParam* net_param) {
  delete net_param_;
  net_param_ = net_param;
  if (net_param) {
    set_has_net_param();
  } else {
    clear_has_net_param();
  }
  // @@protoc_insertion_point(field_set_allocated:gsbn.SolverParam.net_param)
}

// -------------------------------------------------------------------

// TimerParam

// required uint32 sim_step = 1 [default = 1];
inline bool TimerParam::has_sim_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimerParam::set_has_sim_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimerParam::clear_has_sim_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimerParam::clear_sim_step() {
  sim_step_ = 1u;
  clear_has_sim_step();
}
inline ::google::protobuf::uint32 TimerParam::sim_step() const {
  // @@protoc_insertion_point(field_get:gsbn.TimerParam.sim_step)
  return sim_step_;
}
inline void TimerParam::set_sim_step(::google::protobuf::uint32 value) {
  set_has_sim_step();
  sim_step_ = value;
  // @@protoc_insertion_point(field_set:gsbn.TimerParam.sim_step)
}

// required uint32 sim_time = 2;
inline bool TimerParam::has_sim_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimerParam::set_has_sim_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimerParam::clear_has_sim_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimerParam::clear_sim_time() {
  sim_time_ = 0u;
  clear_has_sim_time();
}
inline ::google::protobuf::uint32 TimerParam::sim_time() const {
  // @@protoc_insertion_point(field_get:gsbn.TimerParam.sim_time)
  return sim_time_;
}
inline void TimerParam::set_sim_time(::google::protobuf::uint32 value) {
  set_has_sim_time();
  sim_time_ = value;
  // @@protoc_insertion_point(field_set:gsbn.TimerParam.sim_time)
}

// -------------------------------------------------------------------

// RecorderParam

// required uint32 record_freq = 1;
inline bool RecorderParam::has_record_freq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecorderParam::set_has_record_freq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecorderParam::clear_has_record_freq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecorderParam::clear_record_freq() {
  record_freq_ = 0u;
  clear_has_record_freq();
}
inline ::google::protobuf::uint32 RecorderParam::record_freq() const {
  // @@protoc_insertion_point(field_get:gsbn.RecorderParam.record_freq)
  return record_freq_;
}
inline void RecorderParam::set_record_freq(::google::protobuf::uint32 value) {
  set_has_record_freq();
  record_freq_ = value;
  // @@protoc_insertion_point(field_set:gsbn.RecorderParam.record_freq)
}

// required string record_dir = 2;
inline bool RecorderParam::has_record_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecorderParam::set_has_record_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecorderParam::clear_has_record_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecorderParam::clear_record_dir() {
  if (record_dir_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    record_dir_->clear();
  }
  clear_has_record_dir();
}
inline const ::std::string& RecorderParam::record_dir() const {
  // @@protoc_insertion_point(field_get:gsbn.RecorderParam.record_dir)
  return *record_dir_;
}
inline void RecorderParam::set_record_dir(const ::std::string& value) {
  set_has_record_dir();
  if (record_dir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    record_dir_ = new ::std::string;
  }
  record_dir_->assign(value);
  // @@protoc_insertion_point(field_set:gsbn.RecorderParam.record_dir)
}
inline void RecorderParam::set_record_dir(const char* value) {
  set_has_record_dir();
  if (record_dir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    record_dir_ = new ::std::string;
  }
  record_dir_->assign(value);
  // @@protoc_insertion_point(field_set_char:gsbn.RecorderParam.record_dir)
}
inline void RecorderParam::set_record_dir(const char* value, size_t size) {
  set_has_record_dir();
  if (record_dir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    record_dir_ = new ::std::string;
  }
  record_dir_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gsbn.RecorderParam.record_dir)
}
inline ::std::string* RecorderParam::mutable_record_dir() {
  set_has_record_dir();
  if (record_dir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    record_dir_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:gsbn.RecorderParam.record_dir)
  return record_dir_;
}
inline ::std::string* RecorderParam::release_record_dir() {
  clear_has_record_dir();
  if (record_dir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = record_dir_;
    record_dir_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RecorderParam::set_allocated_record_dir(::std::string* record_dir) {
  if (record_dir_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete record_dir_;
  }
  if (record_dir) {
    set_has_record_dir();
    record_dir_ = record_dir;
  } else {
    clear_has_record_dir();
    record_dir_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:gsbn.RecorderParam.record_dir)
}

// -------------------------------------------------------------------

// StimmerParam

// required uint32 rows = 1;
inline bool StimmerParam::has_rows() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StimmerParam::set_has_rows() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StimmerParam::clear_has_rows() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StimmerParam::clear_rows() {
  rows_ = 0u;
  clear_has_rows();
}
inline ::google::protobuf::uint32 StimmerParam::rows() const {
  // @@protoc_insertion_point(field_get:gsbn.StimmerParam.rows)
  return rows_;
}
inline void StimmerParam::set_rows(::google::protobuf::uint32 value) {
  set_has_rows();
  rows_ = value;
  // @@protoc_insertion_point(field_set:gsbn.StimmerParam.rows)
}

// required uint32 cols = 2;
inline bool StimmerParam::has_cols() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StimmerParam::set_has_cols() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StimmerParam::clear_has_cols() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StimmerParam::clear_cols() {
  cols_ = 0u;
  clear_has_cols();
}
inline ::google::protobuf::uint32 StimmerParam::cols() const {
  // @@protoc_insertion_point(field_get:gsbn.StimmerParam.cols)
  return cols_;
}
inline void StimmerParam::set_cols(::google::protobuf::uint32 value) {
  set_has_cols();
  cols_ = value;
  // @@protoc_insertion_point(field_set:gsbn.StimmerParam.cols)
}

// -------------------------------------------------------------------

// NetParam

// repeated .gsbn.PopParam pop_param = 1;
inline int NetParam::pop_param_size() const {
  return pop_param_.size();
}
inline void NetParam::clear_pop_param() {
  pop_param_.Clear();
}
inline const ::gsbn::PopParam& NetParam::pop_param(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.NetParam.pop_param)
  return pop_param_.Get(index);
}
inline ::gsbn::PopParam* NetParam::mutable_pop_param(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.NetParam.pop_param)
  return pop_param_.Mutable(index);
}
inline ::gsbn::PopParam* NetParam::add_pop_param() {
  // @@protoc_insertion_point(field_add:gsbn.NetParam.pop_param)
  return pop_param_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::PopParam >&
NetParam::pop_param() const {
  // @@protoc_insertion_point(field_list:gsbn.NetParam.pop_param)
  return pop_param_;
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::PopParam >*
NetParam::mutable_pop_param() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.NetParam.pop_param)
  return &pop_param_;
}

// repeated .gsbn.ProjParam proj_param = 2;
inline int NetParam::proj_param_size() const {
  return proj_param_.size();
}
inline void NetParam::clear_proj_param() {
  proj_param_.Clear();
}
inline const ::gsbn::ProjParam& NetParam::proj_param(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.NetParam.proj_param)
  return proj_param_.Get(index);
}
inline ::gsbn::ProjParam* NetParam::mutable_proj_param(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.NetParam.proj_param)
  return proj_param_.Mutable(index);
}
inline ::gsbn::ProjParam* NetParam::add_proj_param() {
  // @@protoc_insertion_point(field_add:gsbn.NetParam.proj_param)
  return proj_param_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::ProjParam >&
NetParam::proj_param() const {
  // @@protoc_insertion_point(field_list:gsbn.NetParam.proj_param)
  return proj_param_;
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::ProjParam >*
NetParam::mutable_proj_param() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.NetParam.proj_param)
  return &proj_param_;
}

// -------------------------------------------------------------------

// PopParam

// required uint32 pop_num = 1;
inline bool PopParam::has_pop_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PopParam::set_has_pop_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PopParam::clear_has_pop_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PopParam::clear_pop_num() {
  pop_num_ = 0u;
  clear_has_pop_num();
}
inline ::google::protobuf::uint32 PopParam::pop_num() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.pop_num)
  return pop_num_;
}
inline void PopParam::set_pop_num(::google::protobuf::uint32 value) {
  set_has_pop_num();
  pop_num_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.pop_num)
}

// repeated .gsbn.HcuParam hcu_param = 2;
inline int PopParam::hcu_param_size() const {
  return hcu_param_.size();
}
inline void PopParam::clear_hcu_param() {
  hcu_param_.Clear();
}
inline const ::gsbn::HcuParam& PopParam::hcu_param(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.hcu_param)
  return hcu_param_.Get(index);
}
inline ::gsbn::HcuParam* PopParam::mutable_hcu_param(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.PopParam.hcu_param)
  return hcu_param_.Mutable(index);
}
inline ::gsbn::HcuParam* PopParam::add_hcu_param() {
  // @@protoc_insertion_point(field_add:gsbn.PopParam.hcu_param)
  return hcu_param_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::HcuParam >&
PopParam::hcu_param() const {
  // @@protoc_insertion_point(field_list:gsbn.PopParam.hcu_param)
  return hcu_param_;
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::HcuParam >*
PopParam::mutable_hcu_param() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.PopParam.hcu_param)
  return &hcu_param_;
}

// -------------------------------------------------------------------

// HcuParam

// required uint32 hcu_num = 1;
inline bool HcuParam::has_hcu_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HcuParam::set_has_hcu_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HcuParam::clear_has_hcu_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HcuParam::clear_hcu_num() {
  hcu_num_ = 0u;
  clear_has_hcu_num();
}
inline ::google::protobuf::uint32 HcuParam::hcu_num() const {
  // @@protoc_insertion_point(field_get:gsbn.HcuParam.hcu_num)
  return hcu_num_;
}
inline void HcuParam::set_hcu_num(::google::protobuf::uint32 value) {
  set_has_hcu_num();
  hcu_num_ = value;
  // @@protoc_insertion_point(field_set:gsbn.HcuParam.hcu_num)
}

// required uint32 slot_num = 2;
inline bool HcuParam::has_slot_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HcuParam::set_has_slot_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HcuParam::clear_has_slot_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HcuParam::clear_slot_num() {
  slot_num_ = 0u;
  clear_has_slot_num();
}
inline ::google::protobuf::uint32 HcuParam::slot_num() const {
  // @@protoc_insertion_point(field_get:gsbn.HcuParam.slot_num)
  return slot_num_;
}
inline void HcuParam::set_slot_num(::google::protobuf::uint32 value) {
  set_has_slot_num();
  slot_num_ = value;
  // @@protoc_insertion_point(field_set:gsbn.HcuParam.slot_num)
}

// repeated .gsbn.McuParam mcu_param = 3;
inline int HcuParam::mcu_param_size() const {
  return mcu_param_.size();
}
inline void HcuParam::clear_mcu_param() {
  mcu_param_.Clear();
}
inline const ::gsbn::McuParam& HcuParam::mcu_param(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.HcuParam.mcu_param)
  return mcu_param_.Get(index);
}
inline ::gsbn::McuParam* HcuParam::mutable_mcu_param(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.HcuParam.mcu_param)
  return mcu_param_.Mutable(index);
}
inline ::gsbn::McuParam* HcuParam::add_mcu_param() {
  // @@protoc_insertion_point(field_add:gsbn.HcuParam.mcu_param)
  return mcu_param_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::McuParam >&
HcuParam::mcu_param() const {
  // @@protoc_insertion_point(field_list:gsbn.HcuParam.mcu_param)
  return mcu_param_;
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::McuParam >*
HcuParam::mutable_mcu_param() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.HcuParam.mcu_param)
  return &mcu_param_;
}

// -------------------------------------------------------------------

// McuParam

// required uint32 mcu_num = 1;
inline bool McuParam::has_mcu_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void McuParam::set_has_mcu_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void McuParam::clear_has_mcu_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void McuParam::clear_mcu_num() {
  mcu_num_ = 0u;
  clear_has_mcu_num();
}
inline ::google::protobuf::uint32 McuParam::mcu_num() const {
  // @@protoc_insertion_point(field_get:gsbn.McuParam.mcu_num)
  return mcu_num_;
}
inline void McuParam::set_mcu_num(::google::protobuf::uint32 value) {
  set_has_mcu_num();
  mcu_num_ = value;
  // @@protoc_insertion_point(field_set:gsbn.McuParam.mcu_num)
}

// required uint32 mcu_fanout = 2;
inline bool McuParam::has_mcu_fanout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void McuParam::set_has_mcu_fanout() {
  _has_bits_[0] |= 0x00000002u;
}
inline void McuParam::clear_has_mcu_fanout() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void McuParam::clear_mcu_fanout() {
  mcu_fanout_ = 0u;
  clear_has_mcu_fanout();
}
inline ::google::protobuf::uint32 McuParam::mcu_fanout() const {
  // @@protoc_insertion_point(field_get:gsbn.McuParam.mcu_fanout)
  return mcu_fanout_;
}
inline void McuParam::set_mcu_fanout(::google::protobuf::uint32 value) {
  set_has_mcu_fanout();
  mcu_fanout_ = value;
  // @@protoc_insertion_point(field_set:gsbn.McuParam.mcu_fanout)
}

// -------------------------------------------------------------------

// ProjParam

// required uint32 src_pop = 1;
inline bool ProjParam::has_src_pop() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProjParam::set_has_src_pop() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProjParam::clear_has_src_pop() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProjParam::clear_src_pop() {
  src_pop_ = 0u;
  clear_has_src_pop();
}
inline ::google::protobuf::uint32 ProjParam::src_pop() const {
  // @@protoc_insertion_point(field_get:gsbn.ProjParam.src_pop)
  return src_pop_;
}
inline void ProjParam::set_src_pop(::google::protobuf::uint32 value) {
  set_has_src_pop();
  src_pop_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProjParam.src_pop)
}

// required uint32 desc_pop = 2;
inline bool ProjParam::has_desc_pop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProjParam::set_has_desc_pop() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProjParam::clear_has_desc_pop() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProjParam::clear_desc_pop() {
  desc_pop_ = 0u;
  clear_has_desc_pop();
}
inline ::google::protobuf::uint32 ProjParam::desc_pop() const {
  // @@protoc_insertion_point(field_get:gsbn.ProjParam.desc_pop)
  return desc_pop_;
}
inline void ProjParam::set_desc_pop(::google::protobuf::uint32 value) {
  set_has_desc_pop();
  desc_pop_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProjParam.desc_pop)
}

// -------------------------------------------------------------------

// SolverState

// required uint32 timestamp = 1;
inline bool SolverState::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SolverState::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SolverState::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SolverState::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 SolverState::timestamp() const {
  // @@protoc_insertion_point(field_get:gsbn.SolverState.timestamp)
  return timestamp_;
}
inline void SolverState::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:gsbn.SolverState.timestamp)
}

// repeated .gsbn.TableState table_state = 2;
inline int SolverState::table_state_size() const {
  return table_state_.size();
}
inline void SolverState::clear_table_state() {
  table_state_.Clear();
}
inline const ::gsbn::TableState& SolverState::table_state(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.SolverState.table_state)
  return table_state_.Get(index);
}
inline ::gsbn::TableState* SolverState::mutable_table_state(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.SolverState.table_state)
  return table_state_.Mutable(index);
}
inline ::gsbn::TableState* SolverState::add_table_state() {
  // @@protoc_insertion_point(field_add:gsbn.SolverState.table_state)
  return table_state_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::TableState >&
SolverState::table_state() const {
  // @@protoc_insertion_point(field_list:gsbn.SolverState.table_state)
  return table_state_;
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::TableState >*
SolverState::mutable_table_state() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.SolverState.table_state)
  return &table_state_;
}

// -------------------------------------------------------------------

// TableState

// required string name = 1;
inline bool TableState::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableState::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableState::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableState::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TableState::name() const {
  // @@protoc_insertion_point(field_get:gsbn.TableState.name)
  return *name_;
}
inline void TableState::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:gsbn.TableState.name)
}
inline void TableState::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:gsbn.TableState.name)
}
inline void TableState::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gsbn.TableState.name)
}
inline ::std::string* TableState::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:gsbn.TableState.name)
  return name_;
}
inline ::std::string* TableState::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TableState::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:gsbn.TableState.name)
}

// required bytes desc = 2;
inline bool TableState::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TableState::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TableState::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TableState::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& TableState::desc() const {
  // @@protoc_insertion_point(field_get:gsbn.TableState.desc)
  return *desc_;
}
inline void TableState::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:gsbn.TableState.desc)
}
inline void TableState::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:gsbn.TableState.desc)
}
inline void TableState::set_desc(const void* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gsbn.TableState.desc)
}
inline ::std::string* TableState::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:gsbn.TableState.desc)
  return desc_;
}
inline ::std::string* TableState::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TableState::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:gsbn.TableState.desc)
}

// required bytes data = 3;
inline bool TableState::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TableState::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TableState::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TableState::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& TableState::data() const {
  // @@protoc_insertion_point(field_get:gsbn.TableState.data)
  return *data_;
}
inline void TableState::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:gsbn.TableState.data)
}
inline void TableState::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:gsbn.TableState.data)
}
inline void TableState::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gsbn.TableState.data)
}
inline ::std::string* TableState::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:gsbn.TableState.data)
  return data_;
}
inline ::std::string* TableState::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TableState::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:gsbn.TableState.data)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gsbn

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gsbn_2eproto__INCLUDED
