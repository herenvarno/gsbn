// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gsbn.proto

#ifndef PROTOBUF_gsbn_2eproto__INCLUDED
#define PROTOBUF_gsbn_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_gsbn_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[21];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSolverParamImpl();
void InitDefaultsSolverParam();
void InitDefaultsGenParamImpl();
void InitDefaultsGenParam();
void InitDefaultsModeParamImpl();
void InitDefaultsModeParam();
void InitDefaultsNetParamImpl();
void InitDefaultsNetParam();
void InitDefaultsPopParamImpl();
void InitDefaultsPopParam();
void InitDefaultsProjParamImpl();
void InitDefaultsProjParam();
void InitDefaultsRecParamImpl();
void InitDefaultsRecParam();
void InitDefaultsProcParamImpl();
void InitDefaultsProcParam();
void InitDefaultsProcParamArgIImpl();
void InitDefaultsProcParamArgI();
void InitDefaultsProcParamArgFImpl();
void InitDefaultsProcParamArgF();
void InitDefaultsProcParamArgSImpl();
void InitDefaultsProcParamArgS();
void InitDefaultsSolverStateImpl();
void InitDefaultsSolverState();
void InitDefaultsTableStateImpl();
void InitDefaultsTableState();
void InitDefaultsVectorStateI8Impl();
void InitDefaultsVectorStateI8();
void InitDefaultsVectorStateI16Impl();
void InitDefaultsVectorStateI16();
void InitDefaultsVectorStateI32Impl();
void InitDefaultsVectorStateI32();
void InitDefaultsVectorStateI64Impl();
void InitDefaultsVectorStateI64();
void InitDefaultsVectorStateF16Impl();
void InitDefaultsVectorStateF16();
void InitDefaultsVectorStateF32Impl();
void InitDefaultsVectorStateF32();
void InitDefaultsVectorStateF64Impl();
void InitDefaultsVectorStateF64();
void InitDefaultsStimRawDataImpl();
void InitDefaultsStimRawData();
inline void InitDefaults() {
  InitDefaultsSolverParam();
  InitDefaultsGenParam();
  InitDefaultsModeParam();
  InitDefaultsNetParam();
  InitDefaultsPopParam();
  InitDefaultsProjParam();
  InitDefaultsRecParam();
  InitDefaultsProcParam();
  InitDefaultsProcParamArgI();
  InitDefaultsProcParamArgF();
  InitDefaultsProcParamArgS();
  InitDefaultsSolverState();
  InitDefaultsTableState();
  InitDefaultsVectorStateI8();
  InitDefaultsVectorStateI16();
  InitDefaultsVectorStateI32();
  InitDefaultsVectorStateI64();
  InitDefaultsVectorStateF16();
  InitDefaultsVectorStateF32();
  InitDefaultsVectorStateF64();
  InitDefaultsStimRawData();
}
}  // namespace protobuf_gsbn_2eproto
namespace gsbn {
class GenParam;
class GenParamDefaultTypeInternal;
extern GenParamDefaultTypeInternal _GenParam_default_instance_;
class ModeParam;
class ModeParamDefaultTypeInternal;
extern ModeParamDefaultTypeInternal _ModeParam_default_instance_;
class NetParam;
class NetParamDefaultTypeInternal;
extern NetParamDefaultTypeInternal _NetParam_default_instance_;
class PopParam;
class PopParamDefaultTypeInternal;
extern PopParamDefaultTypeInternal _PopParam_default_instance_;
class ProcParam;
class ProcParamDefaultTypeInternal;
extern ProcParamDefaultTypeInternal _ProcParam_default_instance_;
class ProcParamArgF;
class ProcParamArgFDefaultTypeInternal;
extern ProcParamArgFDefaultTypeInternal _ProcParamArgF_default_instance_;
class ProcParamArgI;
class ProcParamArgIDefaultTypeInternal;
extern ProcParamArgIDefaultTypeInternal _ProcParamArgI_default_instance_;
class ProcParamArgS;
class ProcParamArgSDefaultTypeInternal;
extern ProcParamArgSDefaultTypeInternal _ProcParamArgS_default_instance_;
class ProjParam;
class ProjParamDefaultTypeInternal;
extern ProjParamDefaultTypeInternal _ProjParam_default_instance_;
class RecParam;
class RecParamDefaultTypeInternal;
extern RecParamDefaultTypeInternal _RecParam_default_instance_;
class SolverParam;
class SolverParamDefaultTypeInternal;
extern SolverParamDefaultTypeInternal _SolverParam_default_instance_;
class SolverState;
class SolverStateDefaultTypeInternal;
extern SolverStateDefaultTypeInternal _SolverState_default_instance_;
class StimRawData;
class StimRawDataDefaultTypeInternal;
extern StimRawDataDefaultTypeInternal _StimRawData_default_instance_;
class TableState;
class TableStateDefaultTypeInternal;
extern TableStateDefaultTypeInternal _TableState_default_instance_;
class VectorStateF16;
class VectorStateF16DefaultTypeInternal;
extern VectorStateF16DefaultTypeInternal _VectorStateF16_default_instance_;
class VectorStateF32;
class VectorStateF32DefaultTypeInternal;
extern VectorStateF32DefaultTypeInternal _VectorStateF32_default_instance_;
class VectorStateF64;
class VectorStateF64DefaultTypeInternal;
extern VectorStateF64DefaultTypeInternal _VectorStateF64_default_instance_;
class VectorStateI16;
class VectorStateI16DefaultTypeInternal;
extern VectorStateI16DefaultTypeInternal _VectorStateI16_default_instance_;
class VectorStateI32;
class VectorStateI32DefaultTypeInternal;
extern VectorStateI32DefaultTypeInternal _VectorStateI32_default_instance_;
class VectorStateI64;
class VectorStateI64DefaultTypeInternal;
extern VectorStateI64DefaultTypeInternal _VectorStateI64_default_instance_;
class VectorStateI8;
class VectorStateI8DefaultTypeInternal;
extern VectorStateI8DefaultTypeInternal _VectorStateI8_default_instance_;
}  // namespace gsbn
namespace gsbn {

// ===================================================================

class SolverParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.SolverParam) */ {
 public:
  SolverParam();
  virtual ~SolverParam();

  SolverParam(const SolverParam& from);

  inline SolverParam& operator=(const SolverParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SolverParam(SolverParam&& from) noexcept
    : SolverParam() {
    *this = ::std::move(from);
  }

  inline SolverParam& operator=(SolverParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SolverParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SolverParam* internal_default_instance() {
    return reinterpret_cast<const SolverParam*>(
               &_SolverParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SolverParam* other);
  friend void swap(SolverParam& a, SolverParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SolverParam* New() const PROTOBUF_FINAL { return New(NULL); }

  SolverParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SolverParam& from);
  void MergeFrom(const SolverParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SolverParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gsbn.ProcParam proc_param = 4;
  int proc_param_size() const;
  void clear_proc_param();
  static const int kProcParamFieldNumber = 4;
  const ::gsbn::ProcParam& proc_param(int index) const;
  ::gsbn::ProcParam* mutable_proc_param(int index);
  ::gsbn::ProcParam* add_proc_param();
  ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParam >*
      mutable_proc_param();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParam >&
      proc_param() const;

  // required .gsbn.GenParam gen_param = 1;
  bool has_gen_param() const;
  void clear_gen_param();
  static const int kGenParamFieldNumber = 1;
  const ::gsbn::GenParam& gen_param() const;
  ::gsbn::GenParam* release_gen_param();
  ::gsbn::GenParam* mutable_gen_param();
  void set_allocated_gen_param(::gsbn::GenParam* gen_param);

  // required .gsbn.NetParam net_param = 2;
  bool has_net_param() const;
  void clear_net_param();
  static const int kNetParamFieldNumber = 2;
  const ::gsbn::NetParam& net_param() const;
  ::gsbn::NetParam* release_net_param();
  ::gsbn::NetParam* mutable_net_param();
  void set_allocated_net_param(::gsbn::NetParam* net_param);

  // required .gsbn.RecParam rec_param = 3;
  bool has_rec_param() const;
  void clear_rec_param();
  static const int kRecParamFieldNumber = 3;
  const ::gsbn::RecParam& rec_param() const;
  ::gsbn::RecParam* release_rec_param();
  ::gsbn::RecParam* mutable_rec_param();
  void set_allocated_rec_param(::gsbn::RecParam* rec_param);

  // @@protoc_insertion_point(class_scope:gsbn.SolverParam)
 private:
  void set_has_gen_param();
  void clear_has_gen_param();
  void set_has_net_param();
  void clear_has_net_param();
  void set_has_rec_param();
  void clear_has_rec_param();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParam > proc_param_;
  ::gsbn::GenParam* gen_param_;
  ::gsbn::NetParam* net_param_;
  ::gsbn::RecParam* rec_param_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsSolverParamImpl();
};
// -------------------------------------------------------------------

class GenParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.GenParam) */ {
 public:
  GenParam();
  virtual ~GenParam();

  GenParam(const GenParam& from);

  inline GenParam& operator=(const GenParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenParam(GenParam&& from) noexcept
    : GenParam() {
    *this = ::std::move(from);
  }

  inline GenParam& operator=(GenParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GenParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenParam* internal_default_instance() {
    return reinterpret_cast<const GenParam*>(
               &_GenParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GenParam* other);
  friend void swap(GenParam& a, GenParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenParam* New() const PROTOBUF_FINAL { return New(NULL); }

  GenParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GenParam& from);
  void MergeFrom(const GenParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GenParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gsbn.ModeParam mode_param = 4;
  int mode_param_size() const;
  void clear_mode_param();
  static const int kModeParamFieldNumber = 4;
  const ::gsbn::ModeParam& mode_param(int index) const;
  ::gsbn::ModeParam* mutable_mode_param(int index);
  ::gsbn::ModeParam* add_mode_param();
  ::google::protobuf::RepeatedPtrField< ::gsbn::ModeParam >*
      mutable_mode_param();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::ModeParam >&
      mode_param() const;

  // repeated string procedure = 5;
  int procedure_size() const;
  void clear_procedure();
  static const int kProcedureFieldNumber = 5;
  const ::std::string& procedure(int index) const;
  ::std::string* mutable_procedure(int index);
  void set_procedure(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_procedure(int index, ::std::string&& value);
  #endif
  void set_procedure(int index, const char* value);
  void set_procedure(int index, const char* value, size_t size);
  ::std::string* add_procedure();
  void add_procedure(const ::std::string& value);
  #if LANG_CXX11
  void add_procedure(::std::string&& value);
  #endif
  void add_procedure(const char* value);
  void add_procedure(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& procedure() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_procedure();

  // optional string stim_file = 1;
  bool has_stim_file() const;
  void clear_stim_file();
  static const int kStimFileFieldNumber = 1;
  const ::std::string& stim_file() const;
  void set_stim_file(const ::std::string& value);
  #if LANG_CXX11
  void set_stim_file(::std::string&& value);
  #endif
  void set_stim_file(const char* value);
  void set_stim_file(const char* value, size_t size);
  ::std::string* mutable_stim_file();
  ::std::string* release_stim_file();
  void set_allocated_stim_file(::std::string* stim_file);

  // required float dt = 2;
  bool has_dt() const;
  void clear_dt();
  static const int kDtFieldNumber = 2;
  float dt() const;
  void set_dt(float value);

  // required float eps = 3 [default = 0.001];
  bool has_eps() const;
  void clear_eps();
  static const int kEpsFieldNumber = 3;
  float eps() const;
  void set_eps(float value);

  // @@protoc_insertion_point(class_scope:gsbn.GenParam)
 private:
  void set_has_stim_file();
  void clear_has_stim_file();
  void set_has_dt();
  void clear_has_dt();
  void set_has_eps();
  void clear_has_eps();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::ModeParam > mode_param_;
  ::google::protobuf::RepeatedPtrField< ::std::string> procedure_;
  ::google::protobuf::internal::ArenaStringPtr stim_file_;
  float dt_;
  float eps_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsGenParamImpl();
};
// -------------------------------------------------------------------

class ModeParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.ModeParam) */ {
 public:
  ModeParam();
  virtual ~ModeParam();

  ModeParam(const ModeParam& from);

  inline ModeParam& operator=(const ModeParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModeParam(ModeParam&& from) noexcept
    : ModeParam() {
    *this = ::std::move(from);
  }

  inline ModeParam& operator=(ModeParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModeParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModeParam* internal_default_instance() {
    return reinterpret_cast<const ModeParam*>(
               &_ModeParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ModeParam* other);
  friend void swap(ModeParam& a, ModeParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModeParam* New() const PROTOBUF_FINAL { return New(NULL); }

  ModeParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModeParam& from);
  void MergeFrom(const ModeParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModeParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float begin_time = 1;
  bool has_begin_time() const;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 1;
  float begin_time() const;
  void set_begin_time(float value);

  // required float end_time = 2;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  float end_time() const;
  void set_end_time(float value);

  // optional uint32 begin_lgidx_id = 3 [default = 0];
  bool has_begin_lgidx_id() const;
  void clear_begin_lgidx_id();
  static const int kBeginLgidxIdFieldNumber = 3;
  ::google::protobuf::uint32 begin_lgidx_id() const;
  void set_begin_lgidx_id(::google::protobuf::uint32 value);

  // optional uint32 begin_lgexp_id = 4 [default = 0];
  bool has_begin_lgexp_id() const;
  void clear_begin_lgexp_id();
  static const int kBeginLgexpIdFieldNumber = 4;
  ::google::protobuf::uint32 begin_lgexp_id() const;
  void set_begin_lgexp_id(::google::protobuf::uint32 value);

  // optional uint32 begin_wmask_id = 5 [default = 0];
  bool has_begin_wmask_id() const;
  void clear_begin_wmask_id();
  static const int kBeginWmaskIdFieldNumber = 5;
  ::google::protobuf::uint32 begin_wmask_id() const;
  void set_begin_wmask_id(::google::protobuf::uint32 value);

  // optional uint32 time_step = 6 [default = 1];
  bool has_time_step() const;
  void clear_time_step();
  static const int kTimeStepFieldNumber = 6;
  ::google::protobuf::uint32 time_step() const;
  void set_time_step(::google::protobuf::uint32 value);

  // optional uint32 lgidx_step = 7 [default = 1];
  bool has_lgidx_step() const;
  void clear_lgidx_step();
  static const int kLgidxStepFieldNumber = 7;
  ::google::protobuf::uint32 lgidx_step() const;
  void set_lgidx_step(::google::protobuf::uint32 value);

  // optional uint32 lgexp_step = 8 [default = 1];
  bool has_lgexp_step() const;
  void clear_lgexp_step();
  static const int kLgexpStepFieldNumber = 8;
  ::google::protobuf::uint32 lgexp_step() const;
  void set_lgexp_step(::google::protobuf::uint32 value);

  // optional uint32 wmask_step = 9 [default = 1];
  bool has_wmask_step() const;
  void clear_wmask_step();
  static const int kWmaskStepFieldNumber = 9;
  ::google::protobuf::uint32 wmask_step() const;
  void set_wmask_step(::google::protobuf::uint32 value);

  // optional float prn = 10 [default = 1];
  bool has_prn() const;
  void clear_prn();
  static const int kPrnFieldNumber = 10;
  float prn() const;
  void set_prn(float value);

  // optional uint32 plasticity = 11 [default = 1];
  bool has_plasticity() const;
  void clear_plasticity();
  static const int kPlasticityFieldNumber = 11;
  ::google::protobuf::uint32 plasticity() const;
  void set_plasticity(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gsbn.ModeParam)
 private:
  void set_has_begin_time();
  void clear_has_begin_time();
  void set_has_end_time();
  void clear_has_end_time();
  void set_has_begin_lgidx_id();
  void clear_has_begin_lgidx_id();
  void set_has_begin_lgexp_id();
  void clear_has_begin_lgexp_id();
  void set_has_begin_wmask_id();
  void clear_has_begin_wmask_id();
  void set_has_time_step();
  void clear_has_time_step();
  void set_has_lgidx_step();
  void clear_has_lgidx_step();
  void set_has_lgexp_step();
  void clear_has_lgexp_step();
  void set_has_wmask_step();
  void clear_has_wmask_step();
  void set_has_prn();
  void clear_has_prn();
  void set_has_plasticity();
  void clear_has_plasticity();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float begin_time_;
  float end_time_;
  ::google::protobuf::uint32 begin_lgidx_id_;
  ::google::protobuf::uint32 begin_lgexp_id_;
  ::google::protobuf::uint32 begin_wmask_id_;
  ::google::protobuf::uint32 time_step_;
  ::google::protobuf::uint32 lgidx_step_;
  ::google::protobuf::uint32 lgexp_step_;
  ::google::protobuf::uint32 wmask_step_;
  float prn_;
  ::google::protobuf::uint32 plasticity_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsModeParamImpl();
};
// -------------------------------------------------------------------

class NetParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.NetParam) */ {
 public:
  NetParam();
  virtual ~NetParam();

  NetParam(const NetParam& from);

  inline NetParam& operator=(const NetParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NetParam(NetParam&& from) noexcept
    : NetParam() {
    *this = ::std::move(from);
  }

  inline NetParam& operator=(NetParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetParam* internal_default_instance() {
    return reinterpret_cast<const NetParam*>(
               &_NetParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(NetParam* other);
  friend void swap(NetParam& a, NetParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NetParam* New() const PROTOBUF_FINAL { return New(NULL); }

  NetParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NetParam& from);
  void MergeFrom(const NetParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NetParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gsbn.PopParam pop_param = 1;
  int pop_param_size() const;
  void clear_pop_param();
  static const int kPopParamFieldNumber = 1;
  const ::gsbn::PopParam& pop_param(int index) const;
  ::gsbn::PopParam* mutable_pop_param(int index);
  ::gsbn::PopParam* add_pop_param();
  ::google::protobuf::RepeatedPtrField< ::gsbn::PopParam >*
      mutable_pop_param();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::PopParam >&
      pop_param() const;

  // repeated .gsbn.ProjParam proj_param = 2;
  int proj_param_size() const;
  void clear_proj_param();
  static const int kProjParamFieldNumber = 2;
  const ::gsbn::ProjParam& proj_param(int index) const;
  ::gsbn::ProjParam* mutable_proj_param(int index);
  ::gsbn::ProjParam* add_proj_param();
  ::google::protobuf::RepeatedPtrField< ::gsbn::ProjParam >*
      mutable_proj_param();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::ProjParam >&
      proj_param() const;

  // @@protoc_insertion_point(class_scope:gsbn.NetParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::PopParam > pop_param_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::ProjParam > proj_param_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsNetParamImpl();
};
// -------------------------------------------------------------------

class PopParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.PopParam) */ {
 public:
  PopParam();
  virtual ~PopParam();

  PopParam(const PopParam& from);

  inline PopParam& operator=(const PopParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PopParam(PopParam&& from) noexcept
    : PopParam() {
    *this = ::std::move(from);
  }

  inline PopParam& operator=(PopParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PopParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PopParam* internal_default_instance() {
    return reinterpret_cast<const PopParam*>(
               &_PopParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PopParam* other);
  friend void swap(PopParam& a, PopParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PopParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PopParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PopParam& from);
  void MergeFrom(const PopParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PopParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 position = 15 [packed = true];
  int position_size() const;
  void clear_position();
  static const int kPositionFieldNumber = 15;
  ::google::protobuf::int32 position(int index) const;
  void set_position(int index, ::google::protobuf::int32 value);
  void add_position(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      position() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_position();

  // repeated uint32 shape = 16 [packed = true];
  int shape_size() const;
  void clear_shape();
  static const int kShapeFieldNumber = 16;
  ::google::protobuf::uint32 shape(int index) const;
  void set_shape(int index, ::google::protobuf::uint32 value);
  void add_shape(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      shape() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_shape();

  // required uint32 pop_num = 1;
  bool has_pop_num() const;
  void clear_pop_num();
  static const int kPopNumFieldNumber = 1;
  ::google::protobuf::uint32 pop_num() const;
  void set_pop_num(::google::protobuf::uint32 value);

  // required uint32 hcu_num = 2;
  bool has_hcu_num() const;
  void clear_hcu_num();
  static const int kHcuNumFieldNumber = 2;
  ::google::protobuf::uint32 hcu_num() const;
  void set_hcu_num(::google::protobuf::uint32 value);

  // required uint32 mcu_num = 3;
  bool has_mcu_num() const;
  void clear_mcu_num();
  static const int kMcuNumFieldNumber = 3;
  ::google::protobuf::uint32 mcu_num() const;
  void set_mcu_num(::google::protobuf::uint32 value);

  // required uint32 fanout_num = 4;
  bool has_fanout_num() const;
  void clear_fanout_num();
  static const int kFanoutNumFieldNumber = 4;
  ::google::protobuf::uint32 fanout_num() const;
  void set_fanout_num(::google::protobuf::uint32 value);

  // optional float lgbias = 10 [default = 0];
  bool has_lgbias() const;
  void clear_lgbias();
  static const int kLgbiasFieldNumber = 10;
  float lgbias() const;
  void set_lgbias(float value);

  // optional float snoise = 11 [default = 0];
  bool has_snoise() const;
  void clear_snoise();
  static const int kSnoiseFieldNumber = 11;
  float snoise() const;
  void set_snoise(float value);

  // optional uint32 type = 17 [default = 0];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 17;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 rank = 18 [default = 0];
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 18;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional float taua = 13 [default = 0.05];
  bool has_taua() const;
  void clear_taua();
  static const int kTauaFieldNumber = 13;
  float taua() const;
  void set_taua(float value);

  // optional float taum = 5 [default = 0.01];
  bool has_taum() const;
  void clear_taum();
  static const int kTaumFieldNumber = 5;
  float taum() const;
  void set_taum(float value);

  // optional float wtagain = 6 [default = 4];
  bool has_wtagain() const;
  void clear_wtagain();
  static const int kWtagainFieldNumber = 6;
  float wtagain() const;
  void set_wtagain(float value);

  // optional float maxfq = 7 [default = 100];
  bool has_maxfq() const;
  void clear_maxfq();
  static const int kMaxfqFieldNumber = 7;
  float maxfq() const;
  void set_maxfq(float value);

  // optional float igain = 8 [default = 1];
  bool has_igain() const;
  void clear_igain();
  static const int kIgainFieldNumber = 8;
  float igain() const;
  void set_igain(float value);

  // optional float wgain = 9 [default = 1];
  bool has_wgain() const;
  void clear_wgain();
  static const int kWgainFieldNumber = 9;
  float wgain() const;
  void set_wgain(float value);

  // optional float adgain = 12 [default = 1];
  bool has_adgain() const;
  void clear_adgain();
  static const int kAdgainFieldNumber = 12;
  float adgain() const;
  void set_adgain(float value);

  // @@protoc_insertion_point(class_scope:gsbn.PopParam)
 private:
  void set_has_pop_num();
  void clear_has_pop_num();
  void set_has_hcu_num();
  void clear_has_hcu_num();
  void set_has_mcu_num();
  void clear_has_mcu_num();
  void set_has_fanout_num();
  void clear_has_fanout_num();
  void set_has_taum();
  void clear_has_taum();
  void set_has_wtagain();
  void clear_has_wtagain();
  void set_has_maxfq();
  void clear_has_maxfq();
  void set_has_igain();
  void clear_has_igain();
  void set_has_wgain();
  void clear_has_wgain();
  void set_has_lgbias();
  void clear_has_lgbias();
  void set_has_snoise();
  void clear_has_snoise();
  void set_has_adgain();
  void clear_has_adgain();
  void set_has_taua();
  void clear_has_taua();
  void set_has_type();
  void clear_has_type();
  void set_has_rank();
  void clear_has_rank();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > position_;
  mutable int _position_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > shape_;
  mutable int _shape_cached_byte_size_;
  ::google::protobuf::uint32 pop_num_;
  ::google::protobuf::uint32 hcu_num_;
  ::google::protobuf::uint32 mcu_num_;
  ::google::protobuf::uint32 fanout_num_;
  float lgbias_;
  float snoise_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 rank_;
  float taua_;
  float taum_;
  float wtagain_;
  float maxfq_;
  float igain_;
  float wgain_;
  float adgain_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsPopParamImpl();
};
// -------------------------------------------------------------------

class ProjParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.ProjParam) */ {
 public:
  ProjParam();
  virtual ~ProjParam();

  ProjParam(const ProjParam& from);

  inline ProjParam& operator=(const ProjParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjParam(ProjParam&& from) noexcept
    : ProjParam() {
    *this = ::std::move(from);
  }

  inline ProjParam& operator=(ProjParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProjParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjParam* internal_default_instance() {
    return reinterpret_cast<const ProjParam*>(
               &_ProjParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ProjParam* other);
  friend void swap(ProjParam& a, ProjParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjParam* New() const PROTOBUF_FINAL { return New(NULL); }

  ProjParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProjParam& from);
  void MergeFrom(const ProjParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProjParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 src_pop = 1;
  bool has_src_pop() const;
  void clear_src_pop();
  static const int kSrcPopFieldNumber = 1;
  ::google::protobuf::uint32 src_pop() const;
  void set_src_pop(::google::protobuf::uint32 value);

  // required uint32 dest_pop = 2;
  bool has_dest_pop() const;
  void clear_dest_pop();
  static const int kDestPopFieldNumber = 2;
  ::google::protobuf::uint32 dest_pop() const;
  void set_dest_pop(::google::protobuf::uint32 value);

  // required float tauzi = 3;
  bool has_tauzi() const;
  void clear_tauzi();
  static const int kTauziFieldNumber = 3;
  float tauzi() const;
  void set_tauzi(float value);

  // required float tauzj = 4;
  bool has_tauzj() const;
  void clear_tauzj();
  static const int kTauzjFieldNumber = 4;
  float tauzj() const;
  void set_tauzj(float value);

  // required float taue = 5;
  bool has_taue() const;
  void clear_taue();
  static const int kTaueFieldNumber = 5;
  float taue() const;
  void set_taue(float value);

  // required float taup = 6;
  bool has_taup() const;
  void clear_taup();
  static const int kTaupFieldNumber = 6;
  float taup() const;
  void set_taup(float value);

  // optional float bgain = 8 [default = 0];
  bool has_bgain() const;
  void clear_bgain();
  static const int kBgainFieldNumber = 8;
  float bgain() const;
  void set_bgain(float value);

  // optional float wgain = 9 [default = 0];
  bool has_wgain() const;
  void clear_wgain();
  static const int kWgainFieldNumber = 9;
  float wgain() const;
  void set_wgain(float value);

  // optional float tauepsc = 10;
  bool has_tauepsc() const;
  void clear_tauepsc();
  static const int kTauepscFieldNumber = 10;
  float tauepsc() const;
  void set_tauepsc(float value);

  // required float slot_num = 11;
  bool has_slot_num() const;
  void clear_slot_num();
  static const int kSlotNumFieldNumber = 11;
  float slot_num() const;
  void set_slot_num(float value);

  // optional float distance = 12 [default = 0];
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 12;
  float distance() const;
  void set_distance(float value);

  // optional float maxfq = 7 [default = 100];
  bool has_maxfq() const;
  void clear_maxfq();
  static const int kMaxfqFieldNumber = 7;
  float maxfq() const;
  void set_maxfq(float value);

  // @@protoc_insertion_point(class_scope:gsbn.ProjParam)
 private:
  void set_has_src_pop();
  void clear_has_src_pop();
  void set_has_dest_pop();
  void clear_has_dest_pop();
  void set_has_tauzi();
  void clear_has_tauzi();
  void set_has_tauzj();
  void clear_has_tauzj();
  void set_has_taue();
  void clear_has_taue();
  void set_has_taup();
  void clear_has_taup();
  void set_has_maxfq();
  void clear_has_maxfq();
  void set_has_bgain();
  void clear_has_bgain();
  void set_has_wgain();
  void clear_has_wgain();
  void set_has_tauepsc();
  void clear_has_tauepsc();
  void set_has_slot_num();
  void clear_has_slot_num();
  void set_has_distance();
  void clear_has_distance();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 src_pop_;
  ::google::protobuf::uint32 dest_pop_;
  float tauzi_;
  float tauzj_;
  float taue_;
  float taup_;
  float bgain_;
  float wgain_;
  float tauepsc_;
  float slot_num_;
  float distance_;
  float maxfq_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsProjParamImpl();
};
// -------------------------------------------------------------------

class RecParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.RecParam) */ {
 public:
  RecParam();
  virtual ~RecParam();

  RecParam(const RecParam& from);

  inline RecParam& operator=(const RecParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecParam(RecParam&& from) noexcept
    : RecParam() {
    *this = ::std::move(from);
  }

  inline RecParam& operator=(RecParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecParam* internal_default_instance() {
    return reinterpret_cast<const RecParam*>(
               &_RecParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(RecParam* other);
  friend void swap(RecParam& a, RecParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecParam* New() const PROTOBUF_FINAL { return New(NULL); }

  RecParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecParam& from);
  void MergeFrom(const RecParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string directory = 1 [default = "."];
  bool has_directory() const;
  void clear_directory();
  static const int kDirectoryFieldNumber = 1;
  const ::std::string& directory() const;
  void set_directory(const ::std::string& value);
  #if LANG_CXX11
  void set_directory(::std::string&& value);
  #endif
  void set_directory(const char* value);
  void set_directory(const char* value, size_t size);
  ::std::string* mutable_directory();
  ::std::string* release_directory();
  void set_allocated_directory(::std::string* directory);

  // @@protoc_insertion_point(class_scope:gsbn.RecParam)
 private:
  void set_has_directory();
  void clear_has_directory();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  static ::google::protobuf::internal::ExplicitlyConstructed< ::std::string> _default_directory_;
  ::google::protobuf::internal::ArenaStringPtr directory_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsRecParamImpl();
};
// -------------------------------------------------------------------

class ProcParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.ProcParam) */ {
 public:
  ProcParam();
  virtual ~ProcParam();

  ProcParam(const ProcParam& from);

  inline ProcParam& operator=(const ProcParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProcParam(ProcParam&& from) noexcept
    : ProcParam() {
    *this = ::std::move(from);
  }

  inline ProcParam& operator=(ProcParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcParam* internal_default_instance() {
    return reinterpret_cast<const ProcParam*>(
               &_ProcParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ProcParam* other);
  friend void swap(ProcParam& a, ProcParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProcParam* New() const PROTOBUF_FINAL { return New(NULL); }

  ProcParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProcParam& from);
  void MergeFrom(const ProcParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProcParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gsbn.ProcParamArgI argi = 2;
  int argi_size() const;
  void clear_argi();
  static const int kArgiFieldNumber = 2;
  const ::gsbn::ProcParamArgI& argi(int index) const;
  ::gsbn::ProcParamArgI* mutable_argi(int index);
  ::gsbn::ProcParamArgI* add_argi();
  ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgI >*
      mutable_argi();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgI >&
      argi() const;

  // repeated .gsbn.ProcParamArgF argf = 3;
  int argf_size() const;
  void clear_argf();
  static const int kArgfFieldNumber = 3;
  const ::gsbn::ProcParamArgF& argf(int index) const;
  ::gsbn::ProcParamArgF* mutable_argf(int index);
  ::gsbn::ProcParamArgF* add_argf();
  ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgF >*
      mutable_argf();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgF >&
      argf() const;

  // repeated .gsbn.ProcParamArgS args = 4;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 4;
  const ::gsbn::ProcParamArgS& args(int index) const;
  ::gsbn::ProcParamArgS* mutable_args(int index);
  ::gsbn::ProcParamArgS* add_args();
  ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgS >*
      mutable_args();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgS >&
      args() const;

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:gsbn.ProcParam)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgI > argi_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgF > argf_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgS > args_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsProcParamImpl();
};
// -------------------------------------------------------------------

class ProcParamArgI : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.ProcParamArgI) */ {
 public:
  ProcParamArgI();
  virtual ~ProcParamArgI();

  ProcParamArgI(const ProcParamArgI& from);

  inline ProcParamArgI& operator=(const ProcParamArgI& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProcParamArgI(ProcParamArgI&& from) noexcept
    : ProcParamArgI() {
    *this = ::std::move(from);
  }

  inline ProcParamArgI& operator=(ProcParamArgI&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcParamArgI& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcParamArgI* internal_default_instance() {
    return reinterpret_cast<const ProcParamArgI*>(
               &_ProcParamArgI_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ProcParamArgI* other);
  friend void swap(ProcParamArgI& a, ProcParamArgI& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProcParamArgI* New() const PROTOBUF_FINAL { return New(NULL); }

  ProcParamArgI* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProcParamArgI& from);
  void MergeFrom(const ProcParamArgI& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProcParamArgI* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required int32 val = 2;
  bool has_val() const;
  void clear_val();
  static const int kValFieldNumber = 2;
  ::google::protobuf::int32 val() const;
  void set_val(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gsbn.ProcParamArgI)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_val();
  void clear_has_val();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 val_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsProcParamArgIImpl();
};
// -------------------------------------------------------------------

class ProcParamArgF : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.ProcParamArgF) */ {
 public:
  ProcParamArgF();
  virtual ~ProcParamArgF();

  ProcParamArgF(const ProcParamArgF& from);

  inline ProcParamArgF& operator=(const ProcParamArgF& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProcParamArgF(ProcParamArgF&& from) noexcept
    : ProcParamArgF() {
    *this = ::std::move(from);
  }

  inline ProcParamArgF& operator=(ProcParamArgF&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcParamArgF& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcParamArgF* internal_default_instance() {
    return reinterpret_cast<const ProcParamArgF*>(
               &_ProcParamArgF_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ProcParamArgF* other);
  friend void swap(ProcParamArgF& a, ProcParamArgF& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProcParamArgF* New() const PROTOBUF_FINAL { return New(NULL); }

  ProcParamArgF* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProcParamArgF& from);
  void MergeFrom(const ProcParamArgF& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProcParamArgF* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required float val = 2;
  bool has_val() const;
  void clear_val();
  static const int kValFieldNumber = 2;
  float val() const;
  void set_val(float value);

  // @@protoc_insertion_point(class_scope:gsbn.ProcParamArgF)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_val();
  void clear_has_val();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  float val_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsProcParamArgFImpl();
};
// -------------------------------------------------------------------

class ProcParamArgS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.ProcParamArgS) */ {
 public:
  ProcParamArgS();
  virtual ~ProcParamArgS();

  ProcParamArgS(const ProcParamArgS& from);

  inline ProcParamArgS& operator=(const ProcParamArgS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProcParamArgS(ProcParamArgS&& from) noexcept
    : ProcParamArgS() {
    *this = ::std::move(from);
  }

  inline ProcParamArgS& operator=(ProcParamArgS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcParamArgS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcParamArgS* internal_default_instance() {
    return reinterpret_cast<const ProcParamArgS*>(
               &_ProcParamArgS_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ProcParamArgS* other);
  friend void swap(ProcParamArgS& a, ProcParamArgS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProcParamArgS* New() const PROTOBUF_FINAL { return New(NULL); }

  ProcParamArgS* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProcParamArgS& from);
  void MergeFrom(const ProcParamArgS& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProcParamArgS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required string val = 2;
  bool has_val() const;
  void clear_val();
  static const int kValFieldNumber = 2;
  const ::std::string& val() const;
  void set_val(const ::std::string& value);
  #if LANG_CXX11
  void set_val(::std::string&& value);
  #endif
  void set_val(const char* value);
  void set_val(const char* value, size_t size);
  ::std::string* mutable_val();
  ::std::string* release_val();
  void set_allocated_val(::std::string* val);

  // @@protoc_insertion_point(class_scope:gsbn.ProcParamArgS)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_val();
  void clear_has_val();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr val_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsProcParamArgSImpl();
};
// -------------------------------------------------------------------

class SolverState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.SolverState) */ {
 public:
  SolverState();
  virtual ~SolverState();

  SolverState(const SolverState& from);

  inline SolverState& operator=(const SolverState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SolverState(SolverState&& from) noexcept
    : SolverState() {
    *this = ::std::move(from);
  }

  inline SolverState& operator=(SolverState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SolverState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SolverState* internal_default_instance() {
    return reinterpret_cast<const SolverState*>(
               &_SolverState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SolverState* other);
  friend void swap(SolverState& a, SolverState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SolverState* New() const PROTOBUF_FINAL { return New(NULL); }

  SolverState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SolverState& from);
  void MergeFrom(const SolverState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SolverState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gsbn.TableState table_state = 3;
  int table_state_size() const;
  void clear_table_state();
  static const int kTableStateFieldNumber = 3;
  const ::gsbn::TableState& table_state(int index) const;
  ::gsbn::TableState* mutable_table_state(int index);
  ::gsbn::TableState* add_table_state();
  ::google::protobuf::RepeatedPtrField< ::gsbn::TableState >*
      mutable_table_state();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::TableState >&
      table_state() const;

  // repeated .gsbn.VectorStateI8 vector_state_i8 = 4;
  int vector_state_i8_size() const;
  void clear_vector_state_i8();
  static const int kVectorStateI8FieldNumber = 4;
  const ::gsbn::VectorStateI8& vector_state_i8(int index) const;
  ::gsbn::VectorStateI8* mutable_vector_state_i8(int index);
  ::gsbn::VectorStateI8* add_vector_state_i8();
  ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI8 >*
      mutable_vector_state_i8();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI8 >&
      vector_state_i8() const;

  // repeated .gsbn.VectorStateI16 vector_state_i16 = 5;
  int vector_state_i16_size() const;
  void clear_vector_state_i16();
  static const int kVectorStateI16FieldNumber = 5;
  const ::gsbn::VectorStateI16& vector_state_i16(int index) const;
  ::gsbn::VectorStateI16* mutable_vector_state_i16(int index);
  ::gsbn::VectorStateI16* add_vector_state_i16();
  ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI16 >*
      mutable_vector_state_i16();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI16 >&
      vector_state_i16() const;

  // repeated .gsbn.VectorStateI32 vector_state_i32 = 6;
  int vector_state_i32_size() const;
  void clear_vector_state_i32();
  static const int kVectorStateI32FieldNumber = 6;
  const ::gsbn::VectorStateI32& vector_state_i32(int index) const;
  ::gsbn::VectorStateI32* mutable_vector_state_i32(int index);
  ::gsbn::VectorStateI32* add_vector_state_i32();
  ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI32 >*
      mutable_vector_state_i32();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI32 >&
      vector_state_i32() const;

  // repeated .gsbn.VectorStateI64 vector_state_i64 = 7;
  int vector_state_i64_size() const;
  void clear_vector_state_i64();
  static const int kVectorStateI64FieldNumber = 7;
  const ::gsbn::VectorStateI64& vector_state_i64(int index) const;
  ::gsbn::VectorStateI64* mutable_vector_state_i64(int index);
  ::gsbn::VectorStateI64* add_vector_state_i64();
  ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI64 >*
      mutable_vector_state_i64();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI64 >&
      vector_state_i64() const;

  // repeated .gsbn.VectorStateF16 vector_state_f16 = 8;
  int vector_state_f16_size() const;
  void clear_vector_state_f16();
  static const int kVectorStateF16FieldNumber = 8;
  const ::gsbn::VectorStateF16& vector_state_f16(int index) const;
  ::gsbn::VectorStateF16* mutable_vector_state_f16(int index);
  ::gsbn::VectorStateF16* add_vector_state_f16();
  ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF16 >*
      mutable_vector_state_f16();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF16 >&
      vector_state_f16() const;

  // repeated .gsbn.VectorStateF32 vector_state_f32 = 9;
  int vector_state_f32_size() const;
  void clear_vector_state_f32();
  static const int kVectorStateF32FieldNumber = 9;
  const ::gsbn::VectorStateF32& vector_state_f32(int index) const;
  ::gsbn::VectorStateF32* mutable_vector_state_f32(int index);
  ::gsbn::VectorStateF32* add_vector_state_f32();
  ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF32 >*
      mutable_vector_state_f32();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF32 >&
      vector_state_f32() const;

  // repeated .gsbn.VectorStateF64 vector_state_f64 = 10;
  int vector_state_f64_size() const;
  void clear_vector_state_f64();
  static const int kVectorStateF64FieldNumber = 10;
  const ::gsbn::VectorStateF64& vector_state_f64(int index) const;
  ::gsbn::VectorStateF64* mutable_vector_state_f64(int index);
  ::gsbn::VectorStateF64* add_vector_state_f64();
  ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF64 >*
      mutable_vector_state_f64();
  const ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF64 >&
      vector_state_f64() const;

  // required float timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  float timestamp() const;
  void set_timestamp(float value);

  // required float prn = 2;
  bool has_prn() const;
  void clear_prn();
  static const int kPrnFieldNumber = 2;
  float prn() const;
  void set_prn(float value);

  // @@protoc_insertion_point(class_scope:gsbn.SolverState)
 private:
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_prn();
  void clear_has_prn();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::TableState > table_state_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI8 > vector_state_i8_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI16 > vector_state_i16_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI32 > vector_state_i32_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI64 > vector_state_i64_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF16 > vector_state_f16_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF32 > vector_state_f32_;
  ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF64 > vector_state_f64_;
  float timestamp_;
  float prn_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsSolverStateImpl();
};
// -------------------------------------------------------------------

class TableState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.TableState) */ {
 public:
  TableState();
  virtual ~TableState();

  TableState(const TableState& from);

  inline TableState& operator=(const TableState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TableState(TableState&& from) noexcept
    : TableState() {
    *this = ::std::move(from);
  }

  inline TableState& operator=(TableState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TableState* internal_default_instance() {
    return reinterpret_cast<const TableState*>(
               &_TableState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(TableState* other);
  friend void swap(TableState& a, TableState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TableState* New() const PROTOBUF_FINAL { return New(NULL); }

  TableState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TableState& from);
  void MergeFrom(const TableState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TableState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required bytes desc = 2;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const void* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // required bytes data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:gsbn.TableState)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_desc();
  void clear_has_desc();
  void set_has_data();
  void clear_has_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsTableStateImpl();
};
// -------------------------------------------------------------------

class VectorStateI8 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.VectorStateI8) */ {
 public:
  VectorStateI8();
  virtual ~VectorStateI8();

  VectorStateI8(const VectorStateI8& from);

  inline VectorStateI8& operator=(const VectorStateI8& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VectorStateI8(VectorStateI8&& from) noexcept
    : VectorStateI8() {
    *this = ::std::move(from);
  }

  inline VectorStateI8& operator=(VectorStateI8&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VectorStateI8& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VectorStateI8* internal_default_instance() {
    return reinterpret_cast<const VectorStateI8*>(
               &_VectorStateI8_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(VectorStateI8* other);
  friend void swap(VectorStateI8& a, VectorStateI8& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VectorStateI8* New() const PROTOBUF_FINAL { return New(NULL); }

  VectorStateI8* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VectorStateI8& from);
  void MergeFrom(const VectorStateI8& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VectorStateI8* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 data = 3 [packed = true];
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  ::google::protobuf::int32 data(int index) const;
  void set_data(int index, ::google::protobuf::int32 value);
  void add_data(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_data();

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 ld = 2 [default = 1];
  bool has_ld() const;
  void clear_ld();
  static const int kLdFieldNumber = 2;
  ::google::protobuf::uint32 ld() const;
  void set_ld(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gsbn.VectorStateI8)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_ld();
  void clear_has_ld();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > data_;
  mutable int _data_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 ld_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsVectorStateI8Impl();
};
// -------------------------------------------------------------------

class VectorStateI16 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.VectorStateI16) */ {
 public:
  VectorStateI16();
  virtual ~VectorStateI16();

  VectorStateI16(const VectorStateI16& from);

  inline VectorStateI16& operator=(const VectorStateI16& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VectorStateI16(VectorStateI16&& from) noexcept
    : VectorStateI16() {
    *this = ::std::move(from);
  }

  inline VectorStateI16& operator=(VectorStateI16&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VectorStateI16& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VectorStateI16* internal_default_instance() {
    return reinterpret_cast<const VectorStateI16*>(
               &_VectorStateI16_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(VectorStateI16* other);
  friend void swap(VectorStateI16& a, VectorStateI16& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VectorStateI16* New() const PROTOBUF_FINAL { return New(NULL); }

  VectorStateI16* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VectorStateI16& from);
  void MergeFrom(const VectorStateI16& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VectorStateI16* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 data = 3 [packed = true];
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  ::google::protobuf::int32 data(int index) const;
  void set_data(int index, ::google::protobuf::int32 value);
  void add_data(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_data();

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 ld = 2 [default = 1];
  bool has_ld() const;
  void clear_ld();
  static const int kLdFieldNumber = 2;
  ::google::protobuf::uint32 ld() const;
  void set_ld(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gsbn.VectorStateI16)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_ld();
  void clear_has_ld();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > data_;
  mutable int _data_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 ld_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsVectorStateI16Impl();
};
// -------------------------------------------------------------------

class VectorStateI32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.VectorStateI32) */ {
 public:
  VectorStateI32();
  virtual ~VectorStateI32();

  VectorStateI32(const VectorStateI32& from);

  inline VectorStateI32& operator=(const VectorStateI32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VectorStateI32(VectorStateI32&& from) noexcept
    : VectorStateI32() {
    *this = ::std::move(from);
  }

  inline VectorStateI32& operator=(VectorStateI32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VectorStateI32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VectorStateI32* internal_default_instance() {
    return reinterpret_cast<const VectorStateI32*>(
               &_VectorStateI32_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(VectorStateI32* other);
  friend void swap(VectorStateI32& a, VectorStateI32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VectorStateI32* New() const PROTOBUF_FINAL { return New(NULL); }

  VectorStateI32* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VectorStateI32& from);
  void MergeFrom(const VectorStateI32& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VectorStateI32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 data = 3 [packed = true];
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  ::google::protobuf::int32 data(int index) const;
  void set_data(int index, ::google::protobuf::int32 value);
  void add_data(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_data();

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 ld = 2 [default = 1];
  bool has_ld() const;
  void clear_ld();
  static const int kLdFieldNumber = 2;
  ::google::protobuf::uint32 ld() const;
  void set_ld(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gsbn.VectorStateI32)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_ld();
  void clear_has_ld();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > data_;
  mutable int _data_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 ld_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsVectorStateI32Impl();
};
// -------------------------------------------------------------------

class VectorStateI64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.VectorStateI64) */ {
 public:
  VectorStateI64();
  virtual ~VectorStateI64();

  VectorStateI64(const VectorStateI64& from);

  inline VectorStateI64& operator=(const VectorStateI64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VectorStateI64(VectorStateI64&& from) noexcept
    : VectorStateI64() {
    *this = ::std::move(from);
  }

  inline VectorStateI64& operator=(VectorStateI64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VectorStateI64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VectorStateI64* internal_default_instance() {
    return reinterpret_cast<const VectorStateI64*>(
               &_VectorStateI64_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(VectorStateI64* other);
  friend void swap(VectorStateI64& a, VectorStateI64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VectorStateI64* New() const PROTOBUF_FINAL { return New(NULL); }

  VectorStateI64* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VectorStateI64& from);
  void MergeFrom(const VectorStateI64& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VectorStateI64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 data = 3 [packed = true];
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  ::google::protobuf::int64 data(int index) const;
  void set_data(int index, ::google::protobuf::int64 value);
  void add_data(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_data();

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 ld = 2 [default = 1];
  bool has_ld() const;
  void clear_ld();
  static const int kLdFieldNumber = 2;
  ::google::protobuf::uint32 ld() const;
  void set_ld(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gsbn.VectorStateI64)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_ld();
  void clear_has_ld();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > data_;
  mutable int _data_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 ld_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsVectorStateI64Impl();
};
// -------------------------------------------------------------------

class VectorStateF16 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.VectorStateF16) */ {
 public:
  VectorStateF16();
  virtual ~VectorStateF16();

  VectorStateF16(const VectorStateF16& from);

  inline VectorStateF16& operator=(const VectorStateF16& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VectorStateF16(VectorStateF16&& from) noexcept
    : VectorStateF16() {
    *this = ::std::move(from);
  }

  inline VectorStateF16& operator=(VectorStateF16&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VectorStateF16& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VectorStateF16* internal_default_instance() {
    return reinterpret_cast<const VectorStateF16*>(
               &_VectorStateF16_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(VectorStateF16* other);
  friend void swap(VectorStateF16& a, VectorStateF16& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VectorStateF16* New() const PROTOBUF_FINAL { return New(NULL); }

  VectorStateF16* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VectorStateF16& from);
  void MergeFrom(const VectorStateF16& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VectorStateF16* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float data = 3 [packed = true];
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::google::protobuf::RepeatedField< float >&
      data() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_data();

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 ld = 2 [default = 1];
  bool has_ld() const;
  void clear_ld();
  static const int kLdFieldNumber = 2;
  ::google::protobuf::uint32 ld() const;
  void set_ld(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gsbn.VectorStateF16)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_ld();
  void clear_has_ld();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > data_;
  mutable int _data_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 ld_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsVectorStateF16Impl();
};
// -------------------------------------------------------------------

class VectorStateF32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.VectorStateF32) */ {
 public:
  VectorStateF32();
  virtual ~VectorStateF32();

  VectorStateF32(const VectorStateF32& from);

  inline VectorStateF32& operator=(const VectorStateF32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VectorStateF32(VectorStateF32&& from) noexcept
    : VectorStateF32() {
    *this = ::std::move(from);
  }

  inline VectorStateF32& operator=(VectorStateF32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VectorStateF32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VectorStateF32* internal_default_instance() {
    return reinterpret_cast<const VectorStateF32*>(
               &_VectorStateF32_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(VectorStateF32* other);
  friend void swap(VectorStateF32& a, VectorStateF32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VectorStateF32* New() const PROTOBUF_FINAL { return New(NULL); }

  VectorStateF32* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VectorStateF32& from);
  void MergeFrom(const VectorStateF32& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VectorStateF32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float data = 3 [packed = true];
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::google::protobuf::RepeatedField< float >&
      data() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_data();

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 ld = 2 [default = 1];
  bool has_ld() const;
  void clear_ld();
  static const int kLdFieldNumber = 2;
  ::google::protobuf::uint32 ld() const;
  void set_ld(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gsbn.VectorStateF32)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_ld();
  void clear_has_ld();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > data_;
  mutable int _data_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 ld_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsVectorStateF32Impl();
};
// -------------------------------------------------------------------

class VectorStateF64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.VectorStateF64) */ {
 public:
  VectorStateF64();
  virtual ~VectorStateF64();

  VectorStateF64(const VectorStateF64& from);

  inline VectorStateF64& operator=(const VectorStateF64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VectorStateF64(VectorStateF64&& from) noexcept
    : VectorStateF64() {
    *this = ::std::move(from);
  }

  inline VectorStateF64& operator=(VectorStateF64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VectorStateF64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VectorStateF64* internal_default_instance() {
    return reinterpret_cast<const VectorStateF64*>(
               &_VectorStateF64_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(VectorStateF64* other);
  friend void swap(VectorStateF64& a, VectorStateF64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VectorStateF64* New() const PROTOBUF_FINAL { return New(NULL); }

  VectorStateF64* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VectorStateF64& from);
  void MergeFrom(const VectorStateF64& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VectorStateF64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double data = 3 [packed = true];
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  double data(int index) const;
  void set_data(int index, double value);
  void add_data(double value);
  const ::google::protobuf::RepeatedField< double >&
      data() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_data();

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 ld = 2 [default = 1];
  bool has_ld() const;
  void clear_ld();
  static const int kLdFieldNumber = 2;
  ::google::protobuf::uint32 ld() const;
  void set_ld(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gsbn.VectorStateF64)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_ld();
  void clear_has_ld();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< double > data_;
  mutable int _data_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 ld_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsVectorStateF64Impl();
};
// -------------------------------------------------------------------

class StimRawData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gsbn.StimRawData) */ {
 public:
  StimRawData();
  virtual ~StimRawData();

  StimRawData(const StimRawData& from);

  inline StimRawData& operator=(const StimRawData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StimRawData(StimRawData&& from) noexcept
    : StimRawData() {
    *this = ::std::move(from);
  }

  inline StimRawData& operator=(StimRawData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StimRawData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StimRawData* internal_default_instance() {
    return reinterpret_cast<const StimRawData*>(
               &_StimRawData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(StimRawData* other);
  friend void swap(StimRawData& a, StimRawData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StimRawData* New() const PROTOBUF_FINAL { return New(NULL); }

  StimRawData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StimRawData& from);
  void MergeFrom(const StimRawData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StimRawData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 data = 3 [packed = true];
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  ::google::protobuf::uint32 data(int index) const;
  void set_data(int index, ::google::protobuf::uint32 value);
  void add_data(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_data();

  // repeated float mask = 6 [packed = true];
  int mask_size() const;
  void clear_mask();
  static const int kMaskFieldNumber = 6;
  float mask(int index) const;
  void set_mask(int index, float value);
  void add_mask(float value);
  const ::google::protobuf::RepeatedField< float >&
      mask() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_mask();

  // required uint32 data_rows = 1;
  bool has_data_rows() const;
  void clear_data_rows();
  static const int kDataRowsFieldNumber = 1;
  ::google::protobuf::uint32 data_rows() const;
  void set_data_rows(::google::protobuf::uint32 value);

  // required uint32 data_cols = 2;
  bool has_data_cols() const;
  void clear_data_cols();
  static const int kDataColsFieldNumber = 2;
  ::google::protobuf::uint32 data_cols() const;
  void set_data_cols(::google::protobuf::uint32 value);

  // required uint32 mask_rows = 4;
  bool has_mask_rows() const;
  void clear_mask_rows();
  static const int kMaskRowsFieldNumber = 4;
  ::google::protobuf::uint32 mask_rows() const;
  void set_mask_rows(::google::protobuf::uint32 value);

  // required uint32 mask_cols = 5;
  bool has_mask_cols() const;
  void clear_mask_cols();
  static const int kMaskColsFieldNumber = 5;
  ::google::protobuf::uint32 mask_cols() const;
  void set_mask_cols(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gsbn.StimRawData)
 private:
  void set_has_data_rows();
  void clear_has_data_rows();
  void set_has_data_cols();
  void clear_has_data_cols();
  void set_has_mask_rows();
  void clear_has_mask_rows();
  void set_has_mask_cols();
  void clear_has_mask_cols();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > data_;
  mutable int _data_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > mask_;
  mutable int _mask_cached_byte_size_;
  ::google::protobuf::uint32 data_rows_;
  ::google::protobuf::uint32 data_cols_;
  ::google::protobuf::uint32 mask_rows_;
  ::google::protobuf::uint32 mask_cols_;
  friend struct ::protobuf_gsbn_2eproto::TableStruct;
  friend void ::protobuf_gsbn_2eproto::InitDefaultsStimRawDataImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SolverParam

// required .gsbn.GenParam gen_param = 1;
inline bool SolverParam::has_gen_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SolverParam::set_has_gen_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SolverParam::clear_has_gen_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SolverParam::clear_gen_param() {
  if (gen_param_ != NULL) gen_param_->Clear();
  clear_has_gen_param();
}
inline const ::gsbn::GenParam& SolverParam::gen_param() const {
  const ::gsbn::GenParam* p = gen_param_;
  // @@protoc_insertion_point(field_get:gsbn.SolverParam.gen_param)
  return p != NULL ? *p : *reinterpret_cast<const ::gsbn::GenParam*>(
      &::gsbn::_GenParam_default_instance_);
}
inline ::gsbn::GenParam* SolverParam::release_gen_param() {
  // @@protoc_insertion_point(field_release:gsbn.SolverParam.gen_param)
  clear_has_gen_param();
  ::gsbn::GenParam* temp = gen_param_;
  gen_param_ = NULL;
  return temp;
}
inline ::gsbn::GenParam* SolverParam::mutable_gen_param() {
  set_has_gen_param();
  if (gen_param_ == NULL) {
    gen_param_ = new ::gsbn::GenParam;
  }
  // @@protoc_insertion_point(field_mutable:gsbn.SolverParam.gen_param)
  return gen_param_;
}
inline void SolverParam::set_allocated_gen_param(::gsbn::GenParam* gen_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gen_param_;
  }
  if (gen_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gen_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gen_param, submessage_arena);
    }
    set_has_gen_param();
  } else {
    clear_has_gen_param();
  }
  gen_param_ = gen_param;
  // @@protoc_insertion_point(field_set_allocated:gsbn.SolverParam.gen_param)
}

// required .gsbn.NetParam net_param = 2;
inline bool SolverParam::has_net_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SolverParam::set_has_net_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SolverParam::clear_has_net_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SolverParam::clear_net_param() {
  if (net_param_ != NULL) net_param_->Clear();
  clear_has_net_param();
}
inline const ::gsbn::NetParam& SolverParam::net_param() const {
  const ::gsbn::NetParam* p = net_param_;
  // @@protoc_insertion_point(field_get:gsbn.SolverParam.net_param)
  return p != NULL ? *p : *reinterpret_cast<const ::gsbn::NetParam*>(
      &::gsbn::_NetParam_default_instance_);
}
inline ::gsbn::NetParam* SolverParam::release_net_param() {
  // @@protoc_insertion_point(field_release:gsbn.SolverParam.net_param)
  clear_has_net_param();
  ::gsbn::NetParam* temp = net_param_;
  net_param_ = NULL;
  return temp;
}
inline ::gsbn::NetParam* SolverParam::mutable_net_param() {
  set_has_net_param();
  if (net_param_ == NULL) {
    net_param_ = new ::gsbn::NetParam;
  }
  // @@protoc_insertion_point(field_mutable:gsbn.SolverParam.net_param)
  return net_param_;
}
inline void SolverParam::set_allocated_net_param(::gsbn::NetParam* net_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete net_param_;
  }
  if (net_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      net_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, net_param, submessage_arena);
    }
    set_has_net_param();
  } else {
    clear_has_net_param();
  }
  net_param_ = net_param;
  // @@protoc_insertion_point(field_set_allocated:gsbn.SolverParam.net_param)
}

// required .gsbn.RecParam rec_param = 3;
inline bool SolverParam::has_rec_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SolverParam::set_has_rec_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SolverParam::clear_has_rec_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SolverParam::clear_rec_param() {
  if (rec_param_ != NULL) rec_param_->Clear();
  clear_has_rec_param();
}
inline const ::gsbn::RecParam& SolverParam::rec_param() const {
  const ::gsbn::RecParam* p = rec_param_;
  // @@protoc_insertion_point(field_get:gsbn.SolverParam.rec_param)
  return p != NULL ? *p : *reinterpret_cast<const ::gsbn::RecParam*>(
      &::gsbn::_RecParam_default_instance_);
}
inline ::gsbn::RecParam* SolverParam::release_rec_param() {
  // @@protoc_insertion_point(field_release:gsbn.SolverParam.rec_param)
  clear_has_rec_param();
  ::gsbn::RecParam* temp = rec_param_;
  rec_param_ = NULL;
  return temp;
}
inline ::gsbn::RecParam* SolverParam::mutable_rec_param() {
  set_has_rec_param();
  if (rec_param_ == NULL) {
    rec_param_ = new ::gsbn::RecParam;
  }
  // @@protoc_insertion_point(field_mutable:gsbn.SolverParam.rec_param)
  return rec_param_;
}
inline void SolverParam::set_allocated_rec_param(::gsbn::RecParam* rec_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rec_param_;
  }
  if (rec_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rec_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rec_param, submessage_arena);
    }
    set_has_rec_param();
  } else {
    clear_has_rec_param();
  }
  rec_param_ = rec_param;
  // @@protoc_insertion_point(field_set_allocated:gsbn.SolverParam.rec_param)
}

// repeated .gsbn.ProcParam proc_param = 4;
inline int SolverParam::proc_param_size() const {
  return proc_param_.size();
}
inline void SolverParam::clear_proc_param() {
  proc_param_.Clear();
}
inline const ::gsbn::ProcParam& SolverParam::proc_param(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.SolverParam.proc_param)
  return proc_param_.Get(index);
}
inline ::gsbn::ProcParam* SolverParam::mutable_proc_param(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.SolverParam.proc_param)
  return proc_param_.Mutable(index);
}
inline ::gsbn::ProcParam* SolverParam::add_proc_param() {
  // @@protoc_insertion_point(field_add:gsbn.SolverParam.proc_param)
  return proc_param_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParam >*
SolverParam::mutable_proc_param() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.SolverParam.proc_param)
  return &proc_param_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParam >&
SolverParam::proc_param() const {
  // @@protoc_insertion_point(field_list:gsbn.SolverParam.proc_param)
  return proc_param_;
}

// -------------------------------------------------------------------

// GenParam

// optional string stim_file = 1;
inline bool GenParam::has_stim_file() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GenParam::set_has_stim_file() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GenParam::clear_has_stim_file() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GenParam::clear_stim_file() {
  stim_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stim_file();
}
inline const ::std::string& GenParam::stim_file() const {
  // @@protoc_insertion_point(field_get:gsbn.GenParam.stim_file)
  return stim_file_.GetNoArena();
}
inline void GenParam::set_stim_file(const ::std::string& value) {
  set_has_stim_file();
  stim_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.GenParam.stim_file)
}
#if LANG_CXX11
inline void GenParam::set_stim_file(::std::string&& value) {
  set_has_stim_file();
  stim_file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.GenParam.stim_file)
}
#endif
inline void GenParam::set_stim_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_stim_file();
  stim_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.GenParam.stim_file)
}
inline void GenParam::set_stim_file(const char* value, size_t size) {
  set_has_stim_file();
  stim_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.GenParam.stim_file)
}
inline ::std::string* GenParam::mutable_stim_file() {
  set_has_stim_file();
  // @@protoc_insertion_point(field_mutable:gsbn.GenParam.stim_file)
  return stim_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenParam::release_stim_file() {
  // @@protoc_insertion_point(field_release:gsbn.GenParam.stim_file)
  clear_has_stim_file();
  return stim_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenParam::set_allocated_stim_file(::std::string* stim_file) {
  if (stim_file != NULL) {
    set_has_stim_file();
  } else {
    clear_has_stim_file();
  }
  stim_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stim_file);
  // @@protoc_insertion_point(field_set_allocated:gsbn.GenParam.stim_file)
}

// required float dt = 2;
inline bool GenParam::has_dt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GenParam::set_has_dt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GenParam::clear_has_dt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GenParam::clear_dt() {
  dt_ = 0;
  clear_has_dt();
}
inline float GenParam::dt() const {
  // @@protoc_insertion_point(field_get:gsbn.GenParam.dt)
  return dt_;
}
inline void GenParam::set_dt(float value) {
  set_has_dt();
  dt_ = value;
  // @@protoc_insertion_point(field_set:gsbn.GenParam.dt)
}

// required float eps = 3 [default = 0.001];
inline bool GenParam::has_eps() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GenParam::set_has_eps() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GenParam::clear_has_eps() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GenParam::clear_eps() {
  eps_ = 0.001f;
  clear_has_eps();
}
inline float GenParam::eps() const {
  // @@protoc_insertion_point(field_get:gsbn.GenParam.eps)
  return eps_;
}
inline void GenParam::set_eps(float value) {
  set_has_eps();
  eps_ = value;
  // @@protoc_insertion_point(field_set:gsbn.GenParam.eps)
}

// repeated .gsbn.ModeParam mode_param = 4;
inline int GenParam::mode_param_size() const {
  return mode_param_.size();
}
inline void GenParam::clear_mode_param() {
  mode_param_.Clear();
}
inline const ::gsbn::ModeParam& GenParam::mode_param(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.GenParam.mode_param)
  return mode_param_.Get(index);
}
inline ::gsbn::ModeParam* GenParam::mutable_mode_param(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.GenParam.mode_param)
  return mode_param_.Mutable(index);
}
inline ::gsbn::ModeParam* GenParam::add_mode_param() {
  // @@protoc_insertion_point(field_add:gsbn.GenParam.mode_param)
  return mode_param_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::ModeParam >*
GenParam::mutable_mode_param() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.GenParam.mode_param)
  return &mode_param_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::ModeParam >&
GenParam::mode_param() const {
  // @@protoc_insertion_point(field_list:gsbn.GenParam.mode_param)
  return mode_param_;
}

// repeated string procedure = 5;
inline int GenParam::procedure_size() const {
  return procedure_.size();
}
inline void GenParam::clear_procedure() {
  procedure_.Clear();
}
inline const ::std::string& GenParam::procedure(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.GenParam.procedure)
  return procedure_.Get(index);
}
inline ::std::string* GenParam::mutable_procedure(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.GenParam.procedure)
  return procedure_.Mutable(index);
}
inline void GenParam::set_procedure(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gsbn.GenParam.procedure)
  procedure_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GenParam::set_procedure(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:gsbn.GenParam.procedure)
  procedure_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GenParam::set_procedure(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  procedure_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gsbn.GenParam.procedure)
}
inline void GenParam::set_procedure(int index, const char* value, size_t size) {
  procedure_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gsbn.GenParam.procedure)
}
inline ::std::string* GenParam::add_procedure() {
  // @@protoc_insertion_point(field_add_mutable:gsbn.GenParam.procedure)
  return procedure_.Add();
}
inline void GenParam::add_procedure(const ::std::string& value) {
  procedure_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:gsbn.GenParam.procedure)
}
#if LANG_CXX11
inline void GenParam::add_procedure(::std::string&& value) {
  procedure_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:gsbn.GenParam.procedure)
}
#endif
inline void GenParam::add_procedure(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  procedure_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gsbn.GenParam.procedure)
}
inline void GenParam::add_procedure(const char* value, size_t size) {
  procedure_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gsbn.GenParam.procedure)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GenParam::procedure() const {
  // @@protoc_insertion_point(field_list:gsbn.GenParam.procedure)
  return procedure_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GenParam::mutable_procedure() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.GenParam.procedure)
  return &procedure_;
}

// -------------------------------------------------------------------

// ModeParam

// required float begin_time = 1;
inline bool ModeParam::has_begin_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModeParam::set_has_begin_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModeParam::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModeParam::clear_begin_time() {
  begin_time_ = 0;
  clear_has_begin_time();
}
inline float ModeParam::begin_time() const {
  // @@protoc_insertion_point(field_get:gsbn.ModeParam.begin_time)
  return begin_time_;
}
inline void ModeParam::set_begin_time(float value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ModeParam.begin_time)
}

// required float end_time = 2;
inline bool ModeParam::has_end_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModeParam::set_has_end_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModeParam::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModeParam::clear_end_time() {
  end_time_ = 0;
  clear_has_end_time();
}
inline float ModeParam::end_time() const {
  // @@protoc_insertion_point(field_get:gsbn.ModeParam.end_time)
  return end_time_;
}
inline void ModeParam::set_end_time(float value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ModeParam.end_time)
}

// optional uint32 begin_lgidx_id = 3 [default = 0];
inline bool ModeParam::has_begin_lgidx_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModeParam::set_has_begin_lgidx_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModeParam::clear_has_begin_lgidx_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModeParam::clear_begin_lgidx_id() {
  begin_lgidx_id_ = 0u;
  clear_has_begin_lgidx_id();
}
inline ::google::protobuf::uint32 ModeParam::begin_lgidx_id() const {
  // @@protoc_insertion_point(field_get:gsbn.ModeParam.begin_lgidx_id)
  return begin_lgidx_id_;
}
inline void ModeParam::set_begin_lgidx_id(::google::protobuf::uint32 value) {
  set_has_begin_lgidx_id();
  begin_lgidx_id_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ModeParam.begin_lgidx_id)
}

// optional uint32 begin_lgexp_id = 4 [default = 0];
inline bool ModeParam::has_begin_lgexp_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModeParam::set_has_begin_lgexp_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModeParam::clear_has_begin_lgexp_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModeParam::clear_begin_lgexp_id() {
  begin_lgexp_id_ = 0u;
  clear_has_begin_lgexp_id();
}
inline ::google::protobuf::uint32 ModeParam::begin_lgexp_id() const {
  // @@protoc_insertion_point(field_get:gsbn.ModeParam.begin_lgexp_id)
  return begin_lgexp_id_;
}
inline void ModeParam::set_begin_lgexp_id(::google::protobuf::uint32 value) {
  set_has_begin_lgexp_id();
  begin_lgexp_id_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ModeParam.begin_lgexp_id)
}

// optional uint32 begin_wmask_id = 5 [default = 0];
inline bool ModeParam::has_begin_wmask_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ModeParam::set_has_begin_wmask_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ModeParam::clear_has_begin_wmask_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ModeParam::clear_begin_wmask_id() {
  begin_wmask_id_ = 0u;
  clear_has_begin_wmask_id();
}
inline ::google::protobuf::uint32 ModeParam::begin_wmask_id() const {
  // @@protoc_insertion_point(field_get:gsbn.ModeParam.begin_wmask_id)
  return begin_wmask_id_;
}
inline void ModeParam::set_begin_wmask_id(::google::protobuf::uint32 value) {
  set_has_begin_wmask_id();
  begin_wmask_id_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ModeParam.begin_wmask_id)
}

// optional uint32 time_step = 6 [default = 1];
inline bool ModeParam::has_time_step() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ModeParam::set_has_time_step() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ModeParam::clear_has_time_step() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ModeParam::clear_time_step() {
  time_step_ = 1u;
  clear_has_time_step();
}
inline ::google::protobuf::uint32 ModeParam::time_step() const {
  // @@protoc_insertion_point(field_get:gsbn.ModeParam.time_step)
  return time_step_;
}
inline void ModeParam::set_time_step(::google::protobuf::uint32 value) {
  set_has_time_step();
  time_step_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ModeParam.time_step)
}

// optional uint32 lgidx_step = 7 [default = 1];
inline bool ModeParam::has_lgidx_step() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ModeParam::set_has_lgidx_step() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ModeParam::clear_has_lgidx_step() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ModeParam::clear_lgidx_step() {
  lgidx_step_ = 1u;
  clear_has_lgidx_step();
}
inline ::google::protobuf::uint32 ModeParam::lgidx_step() const {
  // @@protoc_insertion_point(field_get:gsbn.ModeParam.lgidx_step)
  return lgidx_step_;
}
inline void ModeParam::set_lgidx_step(::google::protobuf::uint32 value) {
  set_has_lgidx_step();
  lgidx_step_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ModeParam.lgidx_step)
}

// optional uint32 lgexp_step = 8 [default = 1];
inline bool ModeParam::has_lgexp_step() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ModeParam::set_has_lgexp_step() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ModeParam::clear_has_lgexp_step() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ModeParam::clear_lgexp_step() {
  lgexp_step_ = 1u;
  clear_has_lgexp_step();
}
inline ::google::protobuf::uint32 ModeParam::lgexp_step() const {
  // @@protoc_insertion_point(field_get:gsbn.ModeParam.lgexp_step)
  return lgexp_step_;
}
inline void ModeParam::set_lgexp_step(::google::protobuf::uint32 value) {
  set_has_lgexp_step();
  lgexp_step_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ModeParam.lgexp_step)
}

// optional uint32 wmask_step = 9 [default = 1];
inline bool ModeParam::has_wmask_step() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ModeParam::set_has_wmask_step() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ModeParam::clear_has_wmask_step() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ModeParam::clear_wmask_step() {
  wmask_step_ = 1u;
  clear_has_wmask_step();
}
inline ::google::protobuf::uint32 ModeParam::wmask_step() const {
  // @@protoc_insertion_point(field_get:gsbn.ModeParam.wmask_step)
  return wmask_step_;
}
inline void ModeParam::set_wmask_step(::google::protobuf::uint32 value) {
  set_has_wmask_step();
  wmask_step_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ModeParam.wmask_step)
}

// optional float prn = 10 [default = 1];
inline bool ModeParam::has_prn() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ModeParam::set_has_prn() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ModeParam::clear_has_prn() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ModeParam::clear_prn() {
  prn_ = 1;
  clear_has_prn();
}
inline float ModeParam::prn() const {
  // @@protoc_insertion_point(field_get:gsbn.ModeParam.prn)
  return prn_;
}
inline void ModeParam::set_prn(float value) {
  set_has_prn();
  prn_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ModeParam.prn)
}

// optional uint32 plasticity = 11 [default = 1];
inline bool ModeParam::has_plasticity() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ModeParam::set_has_plasticity() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ModeParam::clear_has_plasticity() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ModeParam::clear_plasticity() {
  plasticity_ = 1u;
  clear_has_plasticity();
}
inline ::google::protobuf::uint32 ModeParam::plasticity() const {
  // @@protoc_insertion_point(field_get:gsbn.ModeParam.plasticity)
  return plasticity_;
}
inline void ModeParam::set_plasticity(::google::protobuf::uint32 value) {
  set_has_plasticity();
  plasticity_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ModeParam.plasticity)
}

// -------------------------------------------------------------------

// NetParam

// repeated .gsbn.PopParam pop_param = 1;
inline int NetParam::pop_param_size() const {
  return pop_param_.size();
}
inline void NetParam::clear_pop_param() {
  pop_param_.Clear();
}
inline const ::gsbn::PopParam& NetParam::pop_param(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.NetParam.pop_param)
  return pop_param_.Get(index);
}
inline ::gsbn::PopParam* NetParam::mutable_pop_param(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.NetParam.pop_param)
  return pop_param_.Mutable(index);
}
inline ::gsbn::PopParam* NetParam::add_pop_param() {
  // @@protoc_insertion_point(field_add:gsbn.NetParam.pop_param)
  return pop_param_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::PopParam >*
NetParam::mutable_pop_param() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.NetParam.pop_param)
  return &pop_param_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::PopParam >&
NetParam::pop_param() const {
  // @@protoc_insertion_point(field_list:gsbn.NetParam.pop_param)
  return pop_param_;
}

// repeated .gsbn.ProjParam proj_param = 2;
inline int NetParam::proj_param_size() const {
  return proj_param_.size();
}
inline void NetParam::clear_proj_param() {
  proj_param_.Clear();
}
inline const ::gsbn::ProjParam& NetParam::proj_param(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.NetParam.proj_param)
  return proj_param_.Get(index);
}
inline ::gsbn::ProjParam* NetParam::mutable_proj_param(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.NetParam.proj_param)
  return proj_param_.Mutable(index);
}
inline ::gsbn::ProjParam* NetParam::add_proj_param() {
  // @@protoc_insertion_point(field_add:gsbn.NetParam.proj_param)
  return proj_param_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::ProjParam >*
NetParam::mutable_proj_param() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.NetParam.proj_param)
  return &proj_param_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::ProjParam >&
NetParam::proj_param() const {
  // @@protoc_insertion_point(field_list:gsbn.NetParam.proj_param)
  return proj_param_;
}

// -------------------------------------------------------------------

// PopParam

// required uint32 pop_num = 1;
inline bool PopParam::has_pop_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PopParam::set_has_pop_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PopParam::clear_has_pop_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PopParam::clear_pop_num() {
  pop_num_ = 0u;
  clear_has_pop_num();
}
inline ::google::protobuf::uint32 PopParam::pop_num() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.pop_num)
  return pop_num_;
}
inline void PopParam::set_pop_num(::google::protobuf::uint32 value) {
  set_has_pop_num();
  pop_num_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.pop_num)
}

// required uint32 hcu_num = 2;
inline bool PopParam::has_hcu_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PopParam::set_has_hcu_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PopParam::clear_has_hcu_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PopParam::clear_hcu_num() {
  hcu_num_ = 0u;
  clear_has_hcu_num();
}
inline ::google::protobuf::uint32 PopParam::hcu_num() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.hcu_num)
  return hcu_num_;
}
inline void PopParam::set_hcu_num(::google::protobuf::uint32 value) {
  set_has_hcu_num();
  hcu_num_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.hcu_num)
}

// required uint32 mcu_num = 3;
inline bool PopParam::has_mcu_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PopParam::set_has_mcu_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PopParam::clear_has_mcu_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PopParam::clear_mcu_num() {
  mcu_num_ = 0u;
  clear_has_mcu_num();
}
inline ::google::protobuf::uint32 PopParam::mcu_num() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.mcu_num)
  return mcu_num_;
}
inline void PopParam::set_mcu_num(::google::protobuf::uint32 value) {
  set_has_mcu_num();
  mcu_num_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.mcu_num)
}

// required uint32 fanout_num = 4;
inline bool PopParam::has_fanout_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PopParam::set_has_fanout_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PopParam::clear_has_fanout_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PopParam::clear_fanout_num() {
  fanout_num_ = 0u;
  clear_has_fanout_num();
}
inline ::google::protobuf::uint32 PopParam::fanout_num() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.fanout_num)
  return fanout_num_;
}
inline void PopParam::set_fanout_num(::google::protobuf::uint32 value) {
  set_has_fanout_num();
  fanout_num_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.fanout_num)
}

// optional float taum = 5 [default = 0.01];
inline bool PopParam::has_taum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PopParam::set_has_taum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PopParam::clear_has_taum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PopParam::clear_taum() {
  taum_ = 0.01f;
  clear_has_taum();
}
inline float PopParam::taum() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.taum)
  return taum_;
}
inline void PopParam::set_taum(float value) {
  set_has_taum();
  taum_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.taum)
}

// optional float wtagain = 6 [default = 4];
inline bool PopParam::has_wtagain() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PopParam::set_has_wtagain() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PopParam::clear_has_wtagain() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PopParam::clear_wtagain() {
  wtagain_ = 4;
  clear_has_wtagain();
}
inline float PopParam::wtagain() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.wtagain)
  return wtagain_;
}
inline void PopParam::set_wtagain(float value) {
  set_has_wtagain();
  wtagain_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.wtagain)
}

// optional float maxfq = 7 [default = 100];
inline bool PopParam::has_maxfq() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PopParam::set_has_maxfq() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PopParam::clear_has_maxfq() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PopParam::clear_maxfq() {
  maxfq_ = 100;
  clear_has_maxfq();
}
inline float PopParam::maxfq() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.maxfq)
  return maxfq_;
}
inline void PopParam::set_maxfq(float value) {
  set_has_maxfq();
  maxfq_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.maxfq)
}

// optional float igain = 8 [default = 1];
inline bool PopParam::has_igain() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PopParam::set_has_igain() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PopParam::clear_has_igain() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PopParam::clear_igain() {
  igain_ = 1;
  clear_has_igain();
}
inline float PopParam::igain() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.igain)
  return igain_;
}
inline void PopParam::set_igain(float value) {
  set_has_igain();
  igain_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.igain)
}

// optional float wgain = 9 [default = 1];
inline bool PopParam::has_wgain() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PopParam::set_has_wgain() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PopParam::clear_has_wgain() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PopParam::clear_wgain() {
  wgain_ = 1;
  clear_has_wgain();
}
inline float PopParam::wgain() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.wgain)
  return wgain_;
}
inline void PopParam::set_wgain(float value) {
  set_has_wgain();
  wgain_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.wgain)
}

// optional float lgbias = 10 [default = 0];
inline bool PopParam::has_lgbias() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PopParam::set_has_lgbias() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PopParam::clear_has_lgbias() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PopParam::clear_lgbias() {
  lgbias_ = 0;
  clear_has_lgbias();
}
inline float PopParam::lgbias() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.lgbias)
  return lgbias_;
}
inline void PopParam::set_lgbias(float value) {
  set_has_lgbias();
  lgbias_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.lgbias)
}

// optional float snoise = 11 [default = 0];
inline bool PopParam::has_snoise() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PopParam::set_has_snoise() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PopParam::clear_has_snoise() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PopParam::clear_snoise() {
  snoise_ = 0;
  clear_has_snoise();
}
inline float PopParam::snoise() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.snoise)
  return snoise_;
}
inline void PopParam::set_snoise(float value) {
  set_has_snoise();
  snoise_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.snoise)
}

// optional float adgain = 12 [default = 1];
inline bool PopParam::has_adgain() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PopParam::set_has_adgain() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PopParam::clear_has_adgain() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PopParam::clear_adgain() {
  adgain_ = 1;
  clear_has_adgain();
}
inline float PopParam::adgain() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.adgain)
  return adgain_;
}
inline void PopParam::set_adgain(float value) {
  set_has_adgain();
  adgain_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.adgain)
}

// optional float taua = 13 [default = 0.05];
inline bool PopParam::has_taua() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PopParam::set_has_taua() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PopParam::clear_has_taua() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PopParam::clear_taua() {
  taua_ = 0.05f;
  clear_has_taua();
}
inline float PopParam::taua() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.taua)
  return taua_;
}
inline void PopParam::set_taua(float value) {
  set_has_taua();
  taua_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.taua)
}

// repeated int32 position = 15 [packed = true];
inline int PopParam::position_size() const {
  return position_.size();
}
inline void PopParam::clear_position() {
  position_.Clear();
}
inline ::google::protobuf::int32 PopParam::position(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.position)
  return position_.Get(index);
}
inline void PopParam::set_position(int index, ::google::protobuf::int32 value) {
  position_.Set(index, value);
  // @@protoc_insertion_point(field_set:gsbn.PopParam.position)
}
inline void PopParam::add_position(::google::protobuf::int32 value) {
  position_.Add(value);
  // @@protoc_insertion_point(field_add:gsbn.PopParam.position)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PopParam::position() const {
  // @@protoc_insertion_point(field_list:gsbn.PopParam.position)
  return position_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PopParam::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.PopParam.position)
  return &position_;
}

// repeated uint32 shape = 16 [packed = true];
inline int PopParam::shape_size() const {
  return shape_.size();
}
inline void PopParam::clear_shape() {
  shape_.Clear();
}
inline ::google::protobuf::uint32 PopParam::shape(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.shape)
  return shape_.Get(index);
}
inline void PopParam::set_shape(int index, ::google::protobuf::uint32 value) {
  shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:gsbn.PopParam.shape)
}
inline void PopParam::add_shape(::google::protobuf::uint32 value) {
  shape_.Add(value);
  // @@protoc_insertion_point(field_add:gsbn.PopParam.shape)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PopParam::shape() const {
  // @@protoc_insertion_point(field_list:gsbn.PopParam.shape)
  return shape_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PopParam::mutable_shape() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.PopParam.shape)
  return &shape_;
}

// optional uint32 type = 17 [default = 0];
inline bool PopParam::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PopParam::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PopParam::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PopParam::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PopParam::type() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.type)
  return type_;
}
inline void PopParam::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.type)
}

// optional uint32 rank = 18 [default = 0];
inline bool PopParam::has_rank() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PopParam::set_has_rank() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PopParam::clear_has_rank() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PopParam::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 PopParam::rank() const {
  // @@protoc_insertion_point(field_get:gsbn.PopParam.rank)
  return rank_;
}
inline void PopParam::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:gsbn.PopParam.rank)
}

// -------------------------------------------------------------------

// ProjParam

// required uint32 src_pop = 1;
inline bool ProjParam::has_src_pop() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProjParam::set_has_src_pop() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProjParam::clear_has_src_pop() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProjParam::clear_src_pop() {
  src_pop_ = 0u;
  clear_has_src_pop();
}
inline ::google::protobuf::uint32 ProjParam::src_pop() const {
  // @@protoc_insertion_point(field_get:gsbn.ProjParam.src_pop)
  return src_pop_;
}
inline void ProjParam::set_src_pop(::google::protobuf::uint32 value) {
  set_has_src_pop();
  src_pop_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProjParam.src_pop)
}

// required uint32 dest_pop = 2;
inline bool ProjParam::has_dest_pop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProjParam::set_has_dest_pop() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProjParam::clear_has_dest_pop() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProjParam::clear_dest_pop() {
  dest_pop_ = 0u;
  clear_has_dest_pop();
}
inline ::google::protobuf::uint32 ProjParam::dest_pop() const {
  // @@protoc_insertion_point(field_get:gsbn.ProjParam.dest_pop)
  return dest_pop_;
}
inline void ProjParam::set_dest_pop(::google::protobuf::uint32 value) {
  set_has_dest_pop();
  dest_pop_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProjParam.dest_pop)
}

// required float tauzi = 3;
inline bool ProjParam::has_tauzi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProjParam::set_has_tauzi() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProjParam::clear_has_tauzi() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProjParam::clear_tauzi() {
  tauzi_ = 0;
  clear_has_tauzi();
}
inline float ProjParam::tauzi() const {
  // @@protoc_insertion_point(field_get:gsbn.ProjParam.tauzi)
  return tauzi_;
}
inline void ProjParam::set_tauzi(float value) {
  set_has_tauzi();
  tauzi_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProjParam.tauzi)
}

// required float tauzj = 4;
inline bool ProjParam::has_tauzj() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProjParam::set_has_tauzj() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProjParam::clear_has_tauzj() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProjParam::clear_tauzj() {
  tauzj_ = 0;
  clear_has_tauzj();
}
inline float ProjParam::tauzj() const {
  // @@protoc_insertion_point(field_get:gsbn.ProjParam.tauzj)
  return tauzj_;
}
inline void ProjParam::set_tauzj(float value) {
  set_has_tauzj();
  tauzj_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProjParam.tauzj)
}

// required float taue = 5;
inline bool ProjParam::has_taue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProjParam::set_has_taue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProjParam::clear_has_taue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProjParam::clear_taue() {
  taue_ = 0;
  clear_has_taue();
}
inline float ProjParam::taue() const {
  // @@protoc_insertion_point(field_get:gsbn.ProjParam.taue)
  return taue_;
}
inline void ProjParam::set_taue(float value) {
  set_has_taue();
  taue_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProjParam.taue)
}

// required float taup = 6;
inline bool ProjParam::has_taup() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProjParam::set_has_taup() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProjParam::clear_has_taup() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProjParam::clear_taup() {
  taup_ = 0;
  clear_has_taup();
}
inline float ProjParam::taup() const {
  // @@protoc_insertion_point(field_get:gsbn.ProjParam.taup)
  return taup_;
}
inline void ProjParam::set_taup(float value) {
  set_has_taup();
  taup_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProjParam.taup)
}

// optional float maxfq = 7 [default = 100];
inline bool ProjParam::has_maxfq() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProjParam::set_has_maxfq() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ProjParam::clear_has_maxfq() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ProjParam::clear_maxfq() {
  maxfq_ = 100;
  clear_has_maxfq();
}
inline float ProjParam::maxfq() const {
  // @@protoc_insertion_point(field_get:gsbn.ProjParam.maxfq)
  return maxfq_;
}
inline void ProjParam::set_maxfq(float value) {
  set_has_maxfq();
  maxfq_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProjParam.maxfq)
}

// optional float bgain = 8 [default = 0];
inline bool ProjParam::has_bgain() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProjParam::set_has_bgain() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProjParam::clear_has_bgain() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProjParam::clear_bgain() {
  bgain_ = 0;
  clear_has_bgain();
}
inline float ProjParam::bgain() const {
  // @@protoc_insertion_point(field_get:gsbn.ProjParam.bgain)
  return bgain_;
}
inline void ProjParam::set_bgain(float value) {
  set_has_bgain();
  bgain_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProjParam.bgain)
}

// optional float wgain = 9 [default = 0];
inline bool ProjParam::has_wgain() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProjParam::set_has_wgain() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProjParam::clear_has_wgain() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProjParam::clear_wgain() {
  wgain_ = 0;
  clear_has_wgain();
}
inline float ProjParam::wgain() const {
  // @@protoc_insertion_point(field_get:gsbn.ProjParam.wgain)
  return wgain_;
}
inline void ProjParam::set_wgain(float value) {
  set_has_wgain();
  wgain_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProjParam.wgain)
}

// optional float tauepsc = 10;
inline bool ProjParam::has_tauepsc() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProjParam::set_has_tauepsc() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProjParam::clear_has_tauepsc() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProjParam::clear_tauepsc() {
  tauepsc_ = 0;
  clear_has_tauepsc();
}
inline float ProjParam::tauepsc() const {
  // @@protoc_insertion_point(field_get:gsbn.ProjParam.tauepsc)
  return tauepsc_;
}
inline void ProjParam::set_tauepsc(float value) {
  set_has_tauepsc();
  tauepsc_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProjParam.tauepsc)
}

// required float slot_num = 11;
inline bool ProjParam::has_slot_num() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProjParam::set_has_slot_num() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProjParam::clear_has_slot_num() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProjParam::clear_slot_num() {
  slot_num_ = 0;
  clear_has_slot_num();
}
inline float ProjParam::slot_num() const {
  // @@protoc_insertion_point(field_get:gsbn.ProjParam.slot_num)
  return slot_num_;
}
inline void ProjParam::set_slot_num(float value) {
  set_has_slot_num();
  slot_num_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProjParam.slot_num)
}

// optional float distance = 12 [default = 0];
inline bool ProjParam::has_distance() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProjParam::set_has_distance() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProjParam::clear_has_distance() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProjParam::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline float ProjParam::distance() const {
  // @@protoc_insertion_point(field_get:gsbn.ProjParam.distance)
  return distance_;
}
inline void ProjParam::set_distance(float value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProjParam.distance)
}

// -------------------------------------------------------------------

// RecParam

// optional string directory = 1 [default = "."];
inline bool RecParam::has_directory() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecParam::set_has_directory() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecParam::clear_has_directory() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecParam::clear_directory() {
  directory_.ClearToDefaultNoArena(&::gsbn::RecParam::_default_directory_.get());
  clear_has_directory();
}
inline const ::std::string& RecParam::directory() const {
  // @@protoc_insertion_point(field_get:gsbn.RecParam.directory)
  return directory_.GetNoArena();
}
inline void RecParam::set_directory(const ::std::string& value) {
  set_has_directory();
  directory_.SetNoArena(&::gsbn::RecParam::_default_directory_.get(), value);
  // @@protoc_insertion_point(field_set:gsbn.RecParam.directory)
}
#if LANG_CXX11
inline void RecParam::set_directory(::std::string&& value) {
  set_has_directory();
  directory_.SetNoArena(
    &::gsbn::RecParam::_default_directory_.get(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.RecParam.directory)
}
#endif
inline void RecParam::set_directory(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_directory();
  directory_.SetNoArena(&::gsbn::RecParam::_default_directory_.get(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.RecParam.directory)
}
inline void RecParam::set_directory(const char* value, size_t size) {
  set_has_directory();
  directory_.SetNoArena(&::gsbn::RecParam::_default_directory_.get(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.RecParam.directory)
}
inline ::std::string* RecParam::mutable_directory() {
  set_has_directory();
  // @@protoc_insertion_point(field_mutable:gsbn.RecParam.directory)
  return directory_.MutableNoArena(&::gsbn::RecParam::_default_directory_.get());
}
inline ::std::string* RecParam::release_directory() {
  // @@protoc_insertion_point(field_release:gsbn.RecParam.directory)
  clear_has_directory();
  return directory_.ReleaseNoArena(&::gsbn::RecParam::_default_directory_.get());
}
inline void RecParam::set_allocated_directory(::std::string* directory) {
  if (directory != NULL) {
    set_has_directory();
  } else {
    clear_has_directory();
  }
  directory_.SetAllocatedNoArena(&::gsbn::RecParam::_default_directory_.get(), directory);
  // @@protoc_insertion_point(field_set_allocated:gsbn.RecParam.directory)
}

// -------------------------------------------------------------------

// ProcParam

// required string name = 1;
inline bool ProcParam::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcParam::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProcParam::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProcParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ProcParam::name() const {
  // @@protoc_insertion_point(field_get:gsbn.ProcParam.name)
  return name_.GetNoArena();
}
inline void ProcParam::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.ProcParam.name)
}
#if LANG_CXX11
inline void ProcParam::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.ProcParam.name)
}
#endif
inline void ProcParam::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.ProcParam.name)
}
inline void ProcParam::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.ProcParam.name)
}
inline ::std::string* ProcParam::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:gsbn.ProcParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProcParam::release_name() {
  // @@protoc_insertion_point(field_release:gsbn.ProcParam.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProcParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gsbn.ProcParam.name)
}

// repeated .gsbn.ProcParamArgI argi = 2;
inline int ProcParam::argi_size() const {
  return argi_.size();
}
inline void ProcParam::clear_argi() {
  argi_.Clear();
}
inline const ::gsbn::ProcParamArgI& ProcParam::argi(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.ProcParam.argi)
  return argi_.Get(index);
}
inline ::gsbn::ProcParamArgI* ProcParam::mutable_argi(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.ProcParam.argi)
  return argi_.Mutable(index);
}
inline ::gsbn::ProcParamArgI* ProcParam::add_argi() {
  // @@protoc_insertion_point(field_add:gsbn.ProcParam.argi)
  return argi_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgI >*
ProcParam::mutable_argi() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.ProcParam.argi)
  return &argi_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgI >&
ProcParam::argi() const {
  // @@protoc_insertion_point(field_list:gsbn.ProcParam.argi)
  return argi_;
}

// repeated .gsbn.ProcParamArgF argf = 3;
inline int ProcParam::argf_size() const {
  return argf_.size();
}
inline void ProcParam::clear_argf() {
  argf_.Clear();
}
inline const ::gsbn::ProcParamArgF& ProcParam::argf(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.ProcParam.argf)
  return argf_.Get(index);
}
inline ::gsbn::ProcParamArgF* ProcParam::mutable_argf(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.ProcParam.argf)
  return argf_.Mutable(index);
}
inline ::gsbn::ProcParamArgF* ProcParam::add_argf() {
  // @@protoc_insertion_point(field_add:gsbn.ProcParam.argf)
  return argf_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgF >*
ProcParam::mutable_argf() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.ProcParam.argf)
  return &argf_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgF >&
ProcParam::argf() const {
  // @@protoc_insertion_point(field_list:gsbn.ProcParam.argf)
  return argf_;
}

// repeated .gsbn.ProcParamArgS args = 4;
inline int ProcParam::args_size() const {
  return args_.size();
}
inline void ProcParam::clear_args() {
  args_.Clear();
}
inline const ::gsbn::ProcParamArgS& ProcParam::args(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.ProcParam.args)
  return args_.Get(index);
}
inline ::gsbn::ProcParamArgS* ProcParam::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.ProcParam.args)
  return args_.Mutable(index);
}
inline ::gsbn::ProcParamArgS* ProcParam::add_args() {
  // @@protoc_insertion_point(field_add:gsbn.ProcParam.args)
  return args_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgS >*
ProcParam::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.ProcParam.args)
  return &args_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::ProcParamArgS >&
ProcParam::args() const {
  // @@protoc_insertion_point(field_list:gsbn.ProcParam.args)
  return args_;
}

// -------------------------------------------------------------------

// ProcParamArgI

// required string key = 1;
inline bool ProcParamArgI::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcParamArgI::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProcParamArgI::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProcParamArgI::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& ProcParamArgI::key() const {
  // @@protoc_insertion_point(field_get:gsbn.ProcParamArgI.key)
  return key_.GetNoArena();
}
inline void ProcParamArgI::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.ProcParamArgI.key)
}
#if LANG_CXX11
inline void ProcParamArgI::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.ProcParamArgI.key)
}
#endif
inline void ProcParamArgI::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.ProcParamArgI.key)
}
inline void ProcParamArgI::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.ProcParamArgI.key)
}
inline ::std::string* ProcParamArgI::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:gsbn.ProcParamArgI.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProcParamArgI::release_key() {
  // @@protoc_insertion_point(field_release:gsbn.ProcParamArgI.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProcParamArgI::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:gsbn.ProcParamArgI.key)
}

// required int32 val = 2;
inline bool ProcParamArgI::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcParamArgI::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProcParamArgI::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProcParamArgI::clear_val() {
  val_ = 0;
  clear_has_val();
}
inline ::google::protobuf::int32 ProcParamArgI::val() const {
  // @@protoc_insertion_point(field_get:gsbn.ProcParamArgI.val)
  return val_;
}
inline void ProcParamArgI::set_val(::google::protobuf::int32 value) {
  set_has_val();
  val_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProcParamArgI.val)
}

// -------------------------------------------------------------------

// ProcParamArgF

// required string key = 1;
inline bool ProcParamArgF::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcParamArgF::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProcParamArgF::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProcParamArgF::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& ProcParamArgF::key() const {
  // @@protoc_insertion_point(field_get:gsbn.ProcParamArgF.key)
  return key_.GetNoArena();
}
inline void ProcParamArgF::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.ProcParamArgF.key)
}
#if LANG_CXX11
inline void ProcParamArgF::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.ProcParamArgF.key)
}
#endif
inline void ProcParamArgF::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.ProcParamArgF.key)
}
inline void ProcParamArgF::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.ProcParamArgF.key)
}
inline ::std::string* ProcParamArgF::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:gsbn.ProcParamArgF.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProcParamArgF::release_key() {
  // @@protoc_insertion_point(field_release:gsbn.ProcParamArgF.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProcParamArgF::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:gsbn.ProcParamArgF.key)
}

// required float val = 2;
inline bool ProcParamArgF::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcParamArgF::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProcParamArgF::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProcParamArgF::clear_val() {
  val_ = 0;
  clear_has_val();
}
inline float ProcParamArgF::val() const {
  // @@protoc_insertion_point(field_get:gsbn.ProcParamArgF.val)
  return val_;
}
inline void ProcParamArgF::set_val(float value) {
  set_has_val();
  val_ = value;
  // @@protoc_insertion_point(field_set:gsbn.ProcParamArgF.val)
}

// -------------------------------------------------------------------

// ProcParamArgS

// required string key = 1;
inline bool ProcParamArgS::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcParamArgS::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProcParamArgS::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProcParamArgS::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& ProcParamArgS::key() const {
  // @@protoc_insertion_point(field_get:gsbn.ProcParamArgS.key)
  return key_.GetNoArena();
}
inline void ProcParamArgS::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.ProcParamArgS.key)
}
#if LANG_CXX11
inline void ProcParamArgS::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.ProcParamArgS.key)
}
#endif
inline void ProcParamArgS::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.ProcParamArgS.key)
}
inline void ProcParamArgS::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.ProcParamArgS.key)
}
inline ::std::string* ProcParamArgS::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:gsbn.ProcParamArgS.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProcParamArgS::release_key() {
  // @@protoc_insertion_point(field_release:gsbn.ProcParamArgS.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProcParamArgS::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:gsbn.ProcParamArgS.key)
}

// required string val = 2;
inline bool ProcParamArgS::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcParamArgS::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProcParamArgS::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProcParamArgS::clear_val() {
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_val();
}
inline const ::std::string& ProcParamArgS::val() const {
  // @@protoc_insertion_point(field_get:gsbn.ProcParamArgS.val)
  return val_.GetNoArena();
}
inline void ProcParamArgS::set_val(const ::std::string& value) {
  set_has_val();
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.ProcParamArgS.val)
}
#if LANG_CXX11
inline void ProcParamArgS::set_val(::std::string&& value) {
  set_has_val();
  val_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.ProcParamArgS.val)
}
#endif
inline void ProcParamArgS::set_val(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_val();
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.ProcParamArgS.val)
}
inline void ProcParamArgS::set_val(const char* value, size_t size) {
  set_has_val();
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.ProcParamArgS.val)
}
inline ::std::string* ProcParamArgS::mutable_val() {
  set_has_val();
  // @@protoc_insertion_point(field_mutable:gsbn.ProcParamArgS.val)
  return val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProcParamArgS::release_val() {
  // @@protoc_insertion_point(field_release:gsbn.ProcParamArgS.val)
  clear_has_val();
  return val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProcParamArgS::set_allocated_val(::std::string* val) {
  if (val != NULL) {
    set_has_val();
  } else {
    clear_has_val();
  }
  val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val);
  // @@protoc_insertion_point(field_set_allocated:gsbn.ProcParamArgS.val)
}

// -------------------------------------------------------------------

// SolverState

// required float timestamp = 1;
inline bool SolverState::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SolverState::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SolverState::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SolverState::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline float SolverState::timestamp() const {
  // @@protoc_insertion_point(field_get:gsbn.SolverState.timestamp)
  return timestamp_;
}
inline void SolverState::set_timestamp(float value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:gsbn.SolverState.timestamp)
}

// required float prn = 2;
inline bool SolverState::has_prn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SolverState::set_has_prn() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SolverState::clear_has_prn() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SolverState::clear_prn() {
  prn_ = 0;
  clear_has_prn();
}
inline float SolverState::prn() const {
  // @@protoc_insertion_point(field_get:gsbn.SolverState.prn)
  return prn_;
}
inline void SolverState::set_prn(float value) {
  set_has_prn();
  prn_ = value;
  // @@protoc_insertion_point(field_set:gsbn.SolverState.prn)
}

// repeated .gsbn.TableState table_state = 3;
inline int SolverState::table_state_size() const {
  return table_state_.size();
}
inline void SolverState::clear_table_state() {
  table_state_.Clear();
}
inline const ::gsbn::TableState& SolverState::table_state(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.SolverState.table_state)
  return table_state_.Get(index);
}
inline ::gsbn::TableState* SolverState::mutable_table_state(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.SolverState.table_state)
  return table_state_.Mutable(index);
}
inline ::gsbn::TableState* SolverState::add_table_state() {
  // @@protoc_insertion_point(field_add:gsbn.SolverState.table_state)
  return table_state_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::TableState >*
SolverState::mutable_table_state() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.SolverState.table_state)
  return &table_state_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::TableState >&
SolverState::table_state() const {
  // @@protoc_insertion_point(field_list:gsbn.SolverState.table_state)
  return table_state_;
}

// repeated .gsbn.VectorStateI8 vector_state_i8 = 4;
inline int SolverState::vector_state_i8_size() const {
  return vector_state_i8_.size();
}
inline void SolverState::clear_vector_state_i8() {
  vector_state_i8_.Clear();
}
inline const ::gsbn::VectorStateI8& SolverState::vector_state_i8(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.SolverState.vector_state_i8)
  return vector_state_i8_.Get(index);
}
inline ::gsbn::VectorStateI8* SolverState::mutable_vector_state_i8(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.SolverState.vector_state_i8)
  return vector_state_i8_.Mutable(index);
}
inline ::gsbn::VectorStateI8* SolverState::add_vector_state_i8() {
  // @@protoc_insertion_point(field_add:gsbn.SolverState.vector_state_i8)
  return vector_state_i8_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI8 >*
SolverState::mutable_vector_state_i8() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.SolverState.vector_state_i8)
  return &vector_state_i8_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI8 >&
SolverState::vector_state_i8() const {
  // @@protoc_insertion_point(field_list:gsbn.SolverState.vector_state_i8)
  return vector_state_i8_;
}

// repeated .gsbn.VectorStateI16 vector_state_i16 = 5;
inline int SolverState::vector_state_i16_size() const {
  return vector_state_i16_.size();
}
inline void SolverState::clear_vector_state_i16() {
  vector_state_i16_.Clear();
}
inline const ::gsbn::VectorStateI16& SolverState::vector_state_i16(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.SolverState.vector_state_i16)
  return vector_state_i16_.Get(index);
}
inline ::gsbn::VectorStateI16* SolverState::mutable_vector_state_i16(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.SolverState.vector_state_i16)
  return vector_state_i16_.Mutable(index);
}
inline ::gsbn::VectorStateI16* SolverState::add_vector_state_i16() {
  // @@protoc_insertion_point(field_add:gsbn.SolverState.vector_state_i16)
  return vector_state_i16_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI16 >*
SolverState::mutable_vector_state_i16() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.SolverState.vector_state_i16)
  return &vector_state_i16_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI16 >&
SolverState::vector_state_i16() const {
  // @@protoc_insertion_point(field_list:gsbn.SolverState.vector_state_i16)
  return vector_state_i16_;
}

// repeated .gsbn.VectorStateI32 vector_state_i32 = 6;
inline int SolverState::vector_state_i32_size() const {
  return vector_state_i32_.size();
}
inline void SolverState::clear_vector_state_i32() {
  vector_state_i32_.Clear();
}
inline const ::gsbn::VectorStateI32& SolverState::vector_state_i32(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.SolverState.vector_state_i32)
  return vector_state_i32_.Get(index);
}
inline ::gsbn::VectorStateI32* SolverState::mutable_vector_state_i32(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.SolverState.vector_state_i32)
  return vector_state_i32_.Mutable(index);
}
inline ::gsbn::VectorStateI32* SolverState::add_vector_state_i32() {
  // @@protoc_insertion_point(field_add:gsbn.SolverState.vector_state_i32)
  return vector_state_i32_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI32 >*
SolverState::mutable_vector_state_i32() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.SolverState.vector_state_i32)
  return &vector_state_i32_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI32 >&
SolverState::vector_state_i32() const {
  // @@protoc_insertion_point(field_list:gsbn.SolverState.vector_state_i32)
  return vector_state_i32_;
}

// repeated .gsbn.VectorStateI64 vector_state_i64 = 7;
inline int SolverState::vector_state_i64_size() const {
  return vector_state_i64_.size();
}
inline void SolverState::clear_vector_state_i64() {
  vector_state_i64_.Clear();
}
inline const ::gsbn::VectorStateI64& SolverState::vector_state_i64(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.SolverState.vector_state_i64)
  return vector_state_i64_.Get(index);
}
inline ::gsbn::VectorStateI64* SolverState::mutable_vector_state_i64(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.SolverState.vector_state_i64)
  return vector_state_i64_.Mutable(index);
}
inline ::gsbn::VectorStateI64* SolverState::add_vector_state_i64() {
  // @@protoc_insertion_point(field_add:gsbn.SolverState.vector_state_i64)
  return vector_state_i64_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI64 >*
SolverState::mutable_vector_state_i64() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.SolverState.vector_state_i64)
  return &vector_state_i64_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateI64 >&
SolverState::vector_state_i64() const {
  // @@protoc_insertion_point(field_list:gsbn.SolverState.vector_state_i64)
  return vector_state_i64_;
}

// repeated .gsbn.VectorStateF16 vector_state_f16 = 8;
inline int SolverState::vector_state_f16_size() const {
  return vector_state_f16_.size();
}
inline void SolverState::clear_vector_state_f16() {
  vector_state_f16_.Clear();
}
inline const ::gsbn::VectorStateF16& SolverState::vector_state_f16(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.SolverState.vector_state_f16)
  return vector_state_f16_.Get(index);
}
inline ::gsbn::VectorStateF16* SolverState::mutable_vector_state_f16(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.SolverState.vector_state_f16)
  return vector_state_f16_.Mutable(index);
}
inline ::gsbn::VectorStateF16* SolverState::add_vector_state_f16() {
  // @@protoc_insertion_point(field_add:gsbn.SolverState.vector_state_f16)
  return vector_state_f16_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF16 >*
SolverState::mutable_vector_state_f16() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.SolverState.vector_state_f16)
  return &vector_state_f16_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF16 >&
SolverState::vector_state_f16() const {
  // @@protoc_insertion_point(field_list:gsbn.SolverState.vector_state_f16)
  return vector_state_f16_;
}

// repeated .gsbn.VectorStateF32 vector_state_f32 = 9;
inline int SolverState::vector_state_f32_size() const {
  return vector_state_f32_.size();
}
inline void SolverState::clear_vector_state_f32() {
  vector_state_f32_.Clear();
}
inline const ::gsbn::VectorStateF32& SolverState::vector_state_f32(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.SolverState.vector_state_f32)
  return vector_state_f32_.Get(index);
}
inline ::gsbn::VectorStateF32* SolverState::mutable_vector_state_f32(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.SolverState.vector_state_f32)
  return vector_state_f32_.Mutable(index);
}
inline ::gsbn::VectorStateF32* SolverState::add_vector_state_f32() {
  // @@protoc_insertion_point(field_add:gsbn.SolverState.vector_state_f32)
  return vector_state_f32_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF32 >*
SolverState::mutable_vector_state_f32() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.SolverState.vector_state_f32)
  return &vector_state_f32_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF32 >&
SolverState::vector_state_f32() const {
  // @@protoc_insertion_point(field_list:gsbn.SolverState.vector_state_f32)
  return vector_state_f32_;
}

// repeated .gsbn.VectorStateF64 vector_state_f64 = 10;
inline int SolverState::vector_state_f64_size() const {
  return vector_state_f64_.size();
}
inline void SolverState::clear_vector_state_f64() {
  vector_state_f64_.Clear();
}
inline const ::gsbn::VectorStateF64& SolverState::vector_state_f64(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.SolverState.vector_state_f64)
  return vector_state_f64_.Get(index);
}
inline ::gsbn::VectorStateF64* SolverState::mutable_vector_state_f64(int index) {
  // @@protoc_insertion_point(field_mutable:gsbn.SolverState.vector_state_f64)
  return vector_state_f64_.Mutable(index);
}
inline ::gsbn::VectorStateF64* SolverState::add_vector_state_f64() {
  // @@protoc_insertion_point(field_add:gsbn.SolverState.vector_state_f64)
  return vector_state_f64_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF64 >*
SolverState::mutable_vector_state_f64() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.SolverState.vector_state_f64)
  return &vector_state_f64_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gsbn::VectorStateF64 >&
SolverState::vector_state_f64() const {
  // @@protoc_insertion_point(field_list:gsbn.SolverState.vector_state_f64)
  return vector_state_f64_;
}

// -------------------------------------------------------------------

// TableState

// required string name = 1;
inline bool TableState::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableState::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableState::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableState::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& TableState::name() const {
  // @@protoc_insertion_point(field_get:gsbn.TableState.name)
  return name_.GetNoArena();
}
inline void TableState::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.TableState.name)
}
#if LANG_CXX11
inline void TableState::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.TableState.name)
}
#endif
inline void TableState::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.TableState.name)
}
inline void TableState::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.TableState.name)
}
inline ::std::string* TableState::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:gsbn.TableState.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableState::release_name() {
  // @@protoc_insertion_point(field_release:gsbn.TableState.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableState::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gsbn.TableState.name)
}

// required bytes desc = 2;
inline bool TableState::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TableState::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TableState::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TableState::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& TableState::desc() const {
  // @@protoc_insertion_point(field_get:gsbn.TableState.desc)
  return desc_.GetNoArena();
}
inline void TableState::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.TableState.desc)
}
#if LANG_CXX11
inline void TableState::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.TableState.desc)
}
#endif
inline void TableState::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.TableState.desc)
}
inline void TableState::set_desc(const void* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.TableState.desc)
}
inline ::std::string* TableState::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:gsbn.TableState.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableState::release_desc() {
  // @@protoc_insertion_point(field_release:gsbn.TableState.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableState::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:gsbn.TableState.desc)
}

// required bytes data = 3;
inline bool TableState::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TableState::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TableState::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TableState::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& TableState::data() const {
  // @@protoc_insertion_point(field_get:gsbn.TableState.data)
  return data_.GetNoArena();
}
inline void TableState::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.TableState.data)
}
#if LANG_CXX11
inline void TableState::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.TableState.data)
}
#endif
inline void TableState::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.TableState.data)
}
inline void TableState::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.TableState.data)
}
inline ::std::string* TableState::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:gsbn.TableState.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableState::release_data() {
  // @@protoc_insertion_point(field_release:gsbn.TableState.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableState::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:gsbn.TableState.data)
}

// -------------------------------------------------------------------

// VectorStateI8

// required string name = 1;
inline bool VectorStateI8::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VectorStateI8::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VectorStateI8::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VectorStateI8::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& VectorStateI8::name() const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateI8.name)
  return name_.GetNoArena();
}
inline void VectorStateI8::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.VectorStateI8.name)
}
#if LANG_CXX11
inline void VectorStateI8::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.VectorStateI8.name)
}
#endif
inline void VectorStateI8::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.VectorStateI8.name)
}
inline void VectorStateI8::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.VectorStateI8.name)
}
inline ::std::string* VectorStateI8::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:gsbn.VectorStateI8.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VectorStateI8::release_name() {
  // @@protoc_insertion_point(field_release:gsbn.VectorStateI8.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VectorStateI8::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gsbn.VectorStateI8.name)
}

// optional uint32 ld = 2 [default = 1];
inline bool VectorStateI8::has_ld() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VectorStateI8::set_has_ld() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VectorStateI8::clear_has_ld() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VectorStateI8::clear_ld() {
  ld_ = 1u;
  clear_has_ld();
}
inline ::google::protobuf::uint32 VectorStateI8::ld() const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateI8.ld)
  return ld_;
}
inline void VectorStateI8::set_ld(::google::protobuf::uint32 value) {
  set_has_ld();
  ld_ = value;
  // @@protoc_insertion_point(field_set:gsbn.VectorStateI8.ld)
}

// repeated int32 data = 3 [packed = true];
inline int VectorStateI8::data_size() const {
  return data_.size();
}
inline void VectorStateI8::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::int32 VectorStateI8::data(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateI8.data)
  return data_.Get(index);
}
inline void VectorStateI8::set_data(int index, ::google::protobuf::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:gsbn.VectorStateI8.data)
}
inline void VectorStateI8::add_data(::google::protobuf::int32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:gsbn.VectorStateI8.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
VectorStateI8::data() const {
  // @@protoc_insertion_point(field_list:gsbn.VectorStateI8.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
VectorStateI8::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.VectorStateI8.data)
  return &data_;
}

// -------------------------------------------------------------------

// VectorStateI16

// required string name = 1;
inline bool VectorStateI16::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VectorStateI16::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VectorStateI16::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VectorStateI16::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& VectorStateI16::name() const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateI16.name)
  return name_.GetNoArena();
}
inline void VectorStateI16::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.VectorStateI16.name)
}
#if LANG_CXX11
inline void VectorStateI16::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.VectorStateI16.name)
}
#endif
inline void VectorStateI16::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.VectorStateI16.name)
}
inline void VectorStateI16::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.VectorStateI16.name)
}
inline ::std::string* VectorStateI16::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:gsbn.VectorStateI16.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VectorStateI16::release_name() {
  // @@protoc_insertion_point(field_release:gsbn.VectorStateI16.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VectorStateI16::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gsbn.VectorStateI16.name)
}

// optional uint32 ld = 2 [default = 1];
inline bool VectorStateI16::has_ld() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VectorStateI16::set_has_ld() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VectorStateI16::clear_has_ld() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VectorStateI16::clear_ld() {
  ld_ = 1u;
  clear_has_ld();
}
inline ::google::protobuf::uint32 VectorStateI16::ld() const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateI16.ld)
  return ld_;
}
inline void VectorStateI16::set_ld(::google::protobuf::uint32 value) {
  set_has_ld();
  ld_ = value;
  // @@protoc_insertion_point(field_set:gsbn.VectorStateI16.ld)
}

// repeated int32 data = 3 [packed = true];
inline int VectorStateI16::data_size() const {
  return data_.size();
}
inline void VectorStateI16::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::int32 VectorStateI16::data(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateI16.data)
  return data_.Get(index);
}
inline void VectorStateI16::set_data(int index, ::google::protobuf::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:gsbn.VectorStateI16.data)
}
inline void VectorStateI16::add_data(::google::protobuf::int32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:gsbn.VectorStateI16.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
VectorStateI16::data() const {
  // @@protoc_insertion_point(field_list:gsbn.VectorStateI16.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
VectorStateI16::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.VectorStateI16.data)
  return &data_;
}

// -------------------------------------------------------------------

// VectorStateI32

// required string name = 1;
inline bool VectorStateI32::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VectorStateI32::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VectorStateI32::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VectorStateI32::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& VectorStateI32::name() const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateI32.name)
  return name_.GetNoArena();
}
inline void VectorStateI32::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.VectorStateI32.name)
}
#if LANG_CXX11
inline void VectorStateI32::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.VectorStateI32.name)
}
#endif
inline void VectorStateI32::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.VectorStateI32.name)
}
inline void VectorStateI32::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.VectorStateI32.name)
}
inline ::std::string* VectorStateI32::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:gsbn.VectorStateI32.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VectorStateI32::release_name() {
  // @@protoc_insertion_point(field_release:gsbn.VectorStateI32.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VectorStateI32::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gsbn.VectorStateI32.name)
}

// optional uint32 ld = 2 [default = 1];
inline bool VectorStateI32::has_ld() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VectorStateI32::set_has_ld() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VectorStateI32::clear_has_ld() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VectorStateI32::clear_ld() {
  ld_ = 1u;
  clear_has_ld();
}
inline ::google::protobuf::uint32 VectorStateI32::ld() const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateI32.ld)
  return ld_;
}
inline void VectorStateI32::set_ld(::google::protobuf::uint32 value) {
  set_has_ld();
  ld_ = value;
  // @@protoc_insertion_point(field_set:gsbn.VectorStateI32.ld)
}

// repeated int32 data = 3 [packed = true];
inline int VectorStateI32::data_size() const {
  return data_.size();
}
inline void VectorStateI32::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::int32 VectorStateI32::data(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateI32.data)
  return data_.Get(index);
}
inline void VectorStateI32::set_data(int index, ::google::protobuf::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:gsbn.VectorStateI32.data)
}
inline void VectorStateI32::add_data(::google::protobuf::int32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:gsbn.VectorStateI32.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
VectorStateI32::data() const {
  // @@protoc_insertion_point(field_list:gsbn.VectorStateI32.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
VectorStateI32::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.VectorStateI32.data)
  return &data_;
}

// -------------------------------------------------------------------

// VectorStateI64

// required string name = 1;
inline bool VectorStateI64::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VectorStateI64::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VectorStateI64::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VectorStateI64::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& VectorStateI64::name() const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateI64.name)
  return name_.GetNoArena();
}
inline void VectorStateI64::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.VectorStateI64.name)
}
#if LANG_CXX11
inline void VectorStateI64::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.VectorStateI64.name)
}
#endif
inline void VectorStateI64::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.VectorStateI64.name)
}
inline void VectorStateI64::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.VectorStateI64.name)
}
inline ::std::string* VectorStateI64::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:gsbn.VectorStateI64.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VectorStateI64::release_name() {
  // @@protoc_insertion_point(field_release:gsbn.VectorStateI64.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VectorStateI64::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gsbn.VectorStateI64.name)
}

// optional uint32 ld = 2 [default = 1];
inline bool VectorStateI64::has_ld() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VectorStateI64::set_has_ld() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VectorStateI64::clear_has_ld() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VectorStateI64::clear_ld() {
  ld_ = 1u;
  clear_has_ld();
}
inline ::google::protobuf::uint32 VectorStateI64::ld() const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateI64.ld)
  return ld_;
}
inline void VectorStateI64::set_ld(::google::protobuf::uint32 value) {
  set_has_ld();
  ld_ = value;
  // @@protoc_insertion_point(field_set:gsbn.VectorStateI64.ld)
}

// repeated int64 data = 3 [packed = true];
inline int VectorStateI64::data_size() const {
  return data_.size();
}
inline void VectorStateI64::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::int64 VectorStateI64::data(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateI64.data)
  return data_.Get(index);
}
inline void VectorStateI64::set_data(int index, ::google::protobuf::int64 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:gsbn.VectorStateI64.data)
}
inline void VectorStateI64::add_data(::google::protobuf::int64 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:gsbn.VectorStateI64.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
VectorStateI64::data() const {
  // @@protoc_insertion_point(field_list:gsbn.VectorStateI64.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
VectorStateI64::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.VectorStateI64.data)
  return &data_;
}

// -------------------------------------------------------------------

// VectorStateF16

// required string name = 1;
inline bool VectorStateF16::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VectorStateF16::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VectorStateF16::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VectorStateF16::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& VectorStateF16::name() const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateF16.name)
  return name_.GetNoArena();
}
inline void VectorStateF16::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.VectorStateF16.name)
}
#if LANG_CXX11
inline void VectorStateF16::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.VectorStateF16.name)
}
#endif
inline void VectorStateF16::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.VectorStateF16.name)
}
inline void VectorStateF16::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.VectorStateF16.name)
}
inline ::std::string* VectorStateF16::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:gsbn.VectorStateF16.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VectorStateF16::release_name() {
  // @@protoc_insertion_point(field_release:gsbn.VectorStateF16.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VectorStateF16::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gsbn.VectorStateF16.name)
}

// optional uint32 ld = 2 [default = 1];
inline bool VectorStateF16::has_ld() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VectorStateF16::set_has_ld() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VectorStateF16::clear_has_ld() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VectorStateF16::clear_ld() {
  ld_ = 1u;
  clear_has_ld();
}
inline ::google::protobuf::uint32 VectorStateF16::ld() const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateF16.ld)
  return ld_;
}
inline void VectorStateF16::set_ld(::google::protobuf::uint32 value) {
  set_has_ld();
  ld_ = value;
  // @@protoc_insertion_point(field_set:gsbn.VectorStateF16.ld)
}

// repeated float data = 3 [packed = true];
inline int VectorStateF16::data_size() const {
  return data_.size();
}
inline void VectorStateF16::clear_data() {
  data_.Clear();
}
inline float VectorStateF16::data(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateF16.data)
  return data_.Get(index);
}
inline void VectorStateF16::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:gsbn.VectorStateF16.data)
}
inline void VectorStateF16::add_data(float value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:gsbn.VectorStateF16.data)
}
inline const ::google::protobuf::RepeatedField< float >&
VectorStateF16::data() const {
  // @@protoc_insertion_point(field_list:gsbn.VectorStateF16.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< float >*
VectorStateF16::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.VectorStateF16.data)
  return &data_;
}

// -------------------------------------------------------------------

// VectorStateF32

// required string name = 1;
inline bool VectorStateF32::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VectorStateF32::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VectorStateF32::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VectorStateF32::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& VectorStateF32::name() const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateF32.name)
  return name_.GetNoArena();
}
inline void VectorStateF32::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.VectorStateF32.name)
}
#if LANG_CXX11
inline void VectorStateF32::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.VectorStateF32.name)
}
#endif
inline void VectorStateF32::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.VectorStateF32.name)
}
inline void VectorStateF32::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.VectorStateF32.name)
}
inline ::std::string* VectorStateF32::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:gsbn.VectorStateF32.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VectorStateF32::release_name() {
  // @@protoc_insertion_point(field_release:gsbn.VectorStateF32.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VectorStateF32::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gsbn.VectorStateF32.name)
}

// optional uint32 ld = 2 [default = 1];
inline bool VectorStateF32::has_ld() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VectorStateF32::set_has_ld() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VectorStateF32::clear_has_ld() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VectorStateF32::clear_ld() {
  ld_ = 1u;
  clear_has_ld();
}
inline ::google::protobuf::uint32 VectorStateF32::ld() const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateF32.ld)
  return ld_;
}
inline void VectorStateF32::set_ld(::google::protobuf::uint32 value) {
  set_has_ld();
  ld_ = value;
  // @@protoc_insertion_point(field_set:gsbn.VectorStateF32.ld)
}

// repeated float data = 3 [packed = true];
inline int VectorStateF32::data_size() const {
  return data_.size();
}
inline void VectorStateF32::clear_data() {
  data_.Clear();
}
inline float VectorStateF32::data(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateF32.data)
  return data_.Get(index);
}
inline void VectorStateF32::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:gsbn.VectorStateF32.data)
}
inline void VectorStateF32::add_data(float value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:gsbn.VectorStateF32.data)
}
inline const ::google::protobuf::RepeatedField< float >&
VectorStateF32::data() const {
  // @@protoc_insertion_point(field_list:gsbn.VectorStateF32.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< float >*
VectorStateF32::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.VectorStateF32.data)
  return &data_;
}

// -------------------------------------------------------------------

// VectorStateF64

// required string name = 1;
inline bool VectorStateF64::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VectorStateF64::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VectorStateF64::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VectorStateF64::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& VectorStateF64::name() const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateF64.name)
  return name_.GetNoArena();
}
inline void VectorStateF64::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gsbn.VectorStateF64.name)
}
#if LANG_CXX11
inline void VectorStateF64::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gsbn.VectorStateF64.name)
}
#endif
inline void VectorStateF64::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gsbn.VectorStateF64.name)
}
inline void VectorStateF64::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gsbn.VectorStateF64.name)
}
inline ::std::string* VectorStateF64::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:gsbn.VectorStateF64.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VectorStateF64::release_name() {
  // @@protoc_insertion_point(field_release:gsbn.VectorStateF64.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VectorStateF64::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gsbn.VectorStateF64.name)
}

// optional uint32 ld = 2 [default = 1];
inline bool VectorStateF64::has_ld() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VectorStateF64::set_has_ld() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VectorStateF64::clear_has_ld() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VectorStateF64::clear_ld() {
  ld_ = 1u;
  clear_has_ld();
}
inline ::google::protobuf::uint32 VectorStateF64::ld() const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateF64.ld)
  return ld_;
}
inline void VectorStateF64::set_ld(::google::protobuf::uint32 value) {
  set_has_ld();
  ld_ = value;
  // @@protoc_insertion_point(field_set:gsbn.VectorStateF64.ld)
}

// repeated double data = 3 [packed = true];
inline int VectorStateF64::data_size() const {
  return data_.size();
}
inline void VectorStateF64::clear_data() {
  data_.Clear();
}
inline double VectorStateF64::data(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.VectorStateF64.data)
  return data_.Get(index);
}
inline void VectorStateF64::set_data(int index, double value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:gsbn.VectorStateF64.data)
}
inline void VectorStateF64::add_data(double value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:gsbn.VectorStateF64.data)
}
inline const ::google::protobuf::RepeatedField< double >&
VectorStateF64::data() const {
  // @@protoc_insertion_point(field_list:gsbn.VectorStateF64.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< double >*
VectorStateF64::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.VectorStateF64.data)
  return &data_;
}

// -------------------------------------------------------------------

// StimRawData

// required uint32 data_rows = 1;
inline bool StimRawData::has_data_rows() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StimRawData::set_has_data_rows() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StimRawData::clear_has_data_rows() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StimRawData::clear_data_rows() {
  data_rows_ = 0u;
  clear_has_data_rows();
}
inline ::google::protobuf::uint32 StimRawData::data_rows() const {
  // @@protoc_insertion_point(field_get:gsbn.StimRawData.data_rows)
  return data_rows_;
}
inline void StimRawData::set_data_rows(::google::protobuf::uint32 value) {
  set_has_data_rows();
  data_rows_ = value;
  // @@protoc_insertion_point(field_set:gsbn.StimRawData.data_rows)
}

// required uint32 data_cols = 2;
inline bool StimRawData::has_data_cols() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StimRawData::set_has_data_cols() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StimRawData::clear_has_data_cols() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StimRawData::clear_data_cols() {
  data_cols_ = 0u;
  clear_has_data_cols();
}
inline ::google::protobuf::uint32 StimRawData::data_cols() const {
  // @@protoc_insertion_point(field_get:gsbn.StimRawData.data_cols)
  return data_cols_;
}
inline void StimRawData::set_data_cols(::google::protobuf::uint32 value) {
  set_has_data_cols();
  data_cols_ = value;
  // @@protoc_insertion_point(field_set:gsbn.StimRawData.data_cols)
}

// repeated uint32 data = 3 [packed = true];
inline int StimRawData::data_size() const {
  return data_.size();
}
inline void StimRawData::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::uint32 StimRawData::data(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.StimRawData.data)
  return data_.Get(index);
}
inline void StimRawData::set_data(int index, ::google::protobuf::uint32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:gsbn.StimRawData.data)
}
inline void StimRawData::add_data(::google::protobuf::uint32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:gsbn.StimRawData.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StimRawData::data() const {
  // @@protoc_insertion_point(field_list:gsbn.StimRawData.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StimRawData::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.StimRawData.data)
  return &data_;
}

// required uint32 mask_rows = 4;
inline bool StimRawData::has_mask_rows() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StimRawData::set_has_mask_rows() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StimRawData::clear_has_mask_rows() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StimRawData::clear_mask_rows() {
  mask_rows_ = 0u;
  clear_has_mask_rows();
}
inline ::google::protobuf::uint32 StimRawData::mask_rows() const {
  // @@protoc_insertion_point(field_get:gsbn.StimRawData.mask_rows)
  return mask_rows_;
}
inline void StimRawData::set_mask_rows(::google::protobuf::uint32 value) {
  set_has_mask_rows();
  mask_rows_ = value;
  // @@protoc_insertion_point(field_set:gsbn.StimRawData.mask_rows)
}

// required uint32 mask_cols = 5;
inline bool StimRawData::has_mask_cols() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StimRawData::set_has_mask_cols() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StimRawData::clear_has_mask_cols() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StimRawData::clear_mask_cols() {
  mask_cols_ = 0u;
  clear_has_mask_cols();
}
inline ::google::protobuf::uint32 StimRawData::mask_cols() const {
  // @@protoc_insertion_point(field_get:gsbn.StimRawData.mask_cols)
  return mask_cols_;
}
inline void StimRawData::set_mask_cols(::google::protobuf::uint32 value) {
  set_has_mask_cols();
  mask_cols_ = value;
  // @@protoc_insertion_point(field_set:gsbn.StimRawData.mask_cols)
}

// repeated float mask = 6 [packed = true];
inline int StimRawData::mask_size() const {
  return mask_.size();
}
inline void StimRawData::clear_mask() {
  mask_.Clear();
}
inline float StimRawData::mask(int index) const {
  // @@protoc_insertion_point(field_get:gsbn.StimRawData.mask)
  return mask_.Get(index);
}
inline void StimRawData::set_mask(int index, float value) {
  mask_.Set(index, value);
  // @@protoc_insertion_point(field_set:gsbn.StimRawData.mask)
}
inline void StimRawData::add_mask(float value) {
  mask_.Add(value);
  // @@protoc_insertion_point(field_add:gsbn.StimRawData.mask)
}
inline const ::google::protobuf::RepeatedField< float >&
StimRawData::mask() const {
  // @@protoc_insertion_point(field_list:gsbn.StimRawData.mask)
  return mask_;
}
inline ::google::protobuf::RepeatedField< float >*
StimRawData::mutable_mask() {
  // @@protoc_insertion_point(field_mutable_list:gsbn.StimRawData.mask)
  return &mask_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gsbn

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gsbn_2eproto__INCLUDED
